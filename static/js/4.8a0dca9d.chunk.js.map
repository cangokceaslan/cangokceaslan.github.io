{"version":3,"sources":["components/Loader/WhiteLoader.tsx","components/NewCourse/index.tsx","components/BlogPostNoSidebar/index.tsx"],"names":["WhiteLoader","props","loaded","size","thick","className","style","width","height","fontSize","role","courses","connect","state","window","sizes","NewCourseData","undefined","courseNumber","filteredCourses","filter","course","free","Math","floor","random","length","useState","calculated","setCalculated","videoWidth","setVideoWidth","videoHeight","setVideoHeight","convertVideoWidthAndHeight","absoluteVideoWidth","innerWidth","screen","useEffect","useLayoutEffect","background","primaryColor","padding","minHeight","display","alignItems","justifyContent","youtubeEmbedUrl","margin","maxHeight","backgroundColor","marginTop","src","title","frameBorder","allow","allowFullScreen","thumbnail","alt","maxWidth","color","fontFamily","fontWeight","minWidth","textAlign","marginBottom","border","secondaryColor","tag","overflow","textOverflow","letterSpacing","description","href","referral","referralCode","coupon","couponCode","url","prepareCourseLink","target","outline","position","marginLeft","borderWidth","textTransform","borderColor","top","dangerouslySetInnerHTML","__html","price","discountedPrice","prepareButtonText","exampleData","_id","path","cover","categories","subtitle","htmlContent","tags","createdAt","updatedAt","CoursesData","EmbedYoutube","EmbedCover","getPostFromApi","withRouter","history","useHistory","postData","setPostData","suggestedPostsData","setSuggestedPostsData","id","match","params","then","res","node","suggestedPosts","post","push","data","moment","Date","toString","format","docData","image","siteName","keywords","join","author","locale","Fragment"],"mappings":"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","file":"static/js/4.8a0dca9d.chunk.js","sourcesContent":["const WhiteLoader = (props: {\r\n    loaded: boolean | undefined;\r\n    size?: number;\r\n    thick?: number;\r\n} = {\r\n        loaded: false,\r\n        size: 125,\r\n        thick: 25\r\n    }) => {\r\n    return (\r\n        <div className=\"justify-content-center align-items-center d-flex\">\r\n            <div className=\"loader-container\">\r\n                <div className=\"spinner-border text-white loader\" style={{\r\n                    width: props?.size || 125,\r\n                    height: props?.size || 125,\r\n                    fontSize: props?.thick || 25\r\n                }} role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhiteLoader","import React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport globalStyles from '@common/style';\r\nimport courses from '@data/courses';\r\n\r\nimport '@components/NewCourse/index.scss';\r\n\r\n//TYPES\r\nimport { CourseType } from '@data/interfaces/courses.interfaces';\r\nimport WhiteLoader from '@components/Loader/WhiteLoader';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\ntype NewCourseProps = {\r\n    courseNumber?: number;\r\n    window?: {\r\n        width: number;\r\n        height: number;\r\n    }\r\n}\r\n\r\nconst NewCourseData: CourseType = courses[0];\r\n\r\n\r\nconst NewCourseComponent: React.FunctionComponent<NewCourseProps> = (props) => {\r\n    const ratio = 7 / 4;\r\n\r\n    let NewCourseData: any = null;\r\n    if (props?.courseNumber !== undefined) {\r\n        NewCourseData = courses[props?.courseNumber];\r\n    } else {\r\n        const filteredCourses = courses.filter((course) => {\r\n            if (course?.free) {\r\n                return false;\r\n            }\r\n            return true\r\n        });\r\n        NewCourseData = filteredCourses[Math.floor(Math.random() * (filteredCourses.length))]\r\n    }\r\n    const [calculated, setCalculated] = useState<boolean>(false);\r\n    const [videoWidth, setVideoWidth] = useState<string>(\"\");\r\n    const [videoHeight, setVideoHeight] = useState<string>(\"\");\r\n\r\n    const convertVideoWidthAndHeight = () => {\r\n        let absoluteVideoWidth = 0, videoWidth = \"\", videoHeight = \"\";\r\n        if (window.innerWidth < 576) {\r\n            absoluteVideoWidth = window.screen.width * 0.53\r\n        } else if (window.innerWidth >= 576 && window.innerWidth < 768) {\r\n            absoluteVideoWidth = 280\r\n        } else if (window.innerWidth >= 768 && window.innerWidth < 992) {\r\n            absoluteVideoWidth = 375\r\n        } else if (window.innerWidth >= 992 && window.innerWidth < 1200) {\r\n            absoluteVideoWidth = 230\r\n        } else if (window.innerWidth >= 1200) {\r\n            absoluteVideoWidth = 270\r\n        } else {\r\n            absoluteVideoWidth = 270;\r\n        }\r\n        videoWidth = `${absoluteVideoWidth * ratio}px`;\r\n        videoHeight = `${absoluteVideoWidth}px`;\r\n        setVideoWidth(videoWidth);\r\n        setVideoHeight(videoHeight);\r\n        setCalculated(true);\r\n    }\r\n\r\n\r\n    const prepareButtonText = () => {\r\n        if (NewCourseData?.free) {\r\n            return `Ücretsiz Olarak Kursa Kayıt Ol`\r\n        }\r\n        else {\r\n            return `<span style=\"text-decoration:line-through\"}}>${NewCourseData?.price}</span> yerine ${NewCourseData?.discountedPrice}'ye Kursa Kaydol`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        convertVideoWidthAndHeight();\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        convertVideoWidthAndHeight();\r\n    }, [props.window?.width, props.window?.height])\r\n\r\n    if (!calculated) {\r\n        return <div className=\"middle-content\" style={{\r\n            background: NewCourseData?.primaryColor || \"#215733\",\r\n            padding: \"10px 0px 10px 0px\",\r\n            minHeight: \"350px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n        }}> <WhiteLoader loaded={false} />\r\n        </div>\r\n    }\r\n\r\n    const prepareCourseLink = (): string => {\r\n        const referral: string = NewCourseData?.referralCode ? \"?referralCode=\" + NewCourseData?.referralCode : \"?\";\r\n        let coupon: string = \"\";\r\n        if (referral === \"?\") {\r\n            coupon = NewCourseData?.couponCode ? (\"couponCode=\" + NewCourseData?.couponCode) : \"\";\r\n        } else {\r\n            coupon = NewCourseData?.couponCode ? (\"&couponCode=\" + NewCourseData?.couponCode) : \"\";\r\n        }\r\n        return `${NewCourseData?.url}${referral}${coupon}`\r\n    }\r\n\r\n    return (\r\n        <div className=\"middle-content\" style={{\r\n            background: NewCourseData?.primaryColor || \"#215733\",\r\n            padding: \"10px 0px 10px 0px\"\r\n        }}>\r\n            <div className=\"container\" style={{\r\n                minHeight: \"300px\"\r\n            }}>\r\n                <div className=\"row\" style={{\r\n                    minHeight: \"350px\"\r\n                }}>\r\n                    <div className=\"col-lg-5 col-md-12\" style={{ padding: \"0px 20px\" }}>\r\n                        {NewCourseData?.youtubeEmbedUrl ? (\r\n                            <div className=\"new-course-video d-flex align-items-center justify-content-center\" style={{\r\n                                minHeight: \"300px\"\r\n                            }}>\r\n                                <div style={{\r\n                                    padding: \"0px !important\",\r\n                                    margin: \"0px\",\r\n                                    maxHeight: `calc(${videoHeight})`,\r\n                                    backgroundColor: \"white\",\r\n                                    marginTop: \"35px\",\r\n                                }}>\r\n                                    <iframe width={videoWidth}\r\n                                        height={videoHeight}\r\n                                        src={`${NewCourseData?.youtubeEmbedUrl || \"https://www.youtube.com/embed/h-Xx14d39vk\"}?fs=1&iv_load_policy=3&showinfo=0&rel=0&cc_load_policy=0&start=0&end=0&mute=0&loop=1&color=white&controls=0&modestbranding=1&playsinline=1&rel=0&enablejsapi=1`}\r\n                                        title=\"YouTube video player\"\r\n                                        frameBorder=\"0\"\r\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                        allowFullScreen></iframe>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ) : (\r\n                            <div className=\"new-course-video d-flex align-items-center justify-content-center\" style={{\r\n                                minHeight: \"300px\"\r\n                            }}>\r\n                                <img src={NewCourseData?.thumbnail || \"https://via.placeholder.com/300x300\"} alt=\"New Course\" style={{\r\n                                    width: videoWidth,\r\n                                    height: videoHeight,\r\n                                    marginTop: \"35px\"\r\n                                }} />\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className=\"col-lg-7 col-md-12\" style={{ padding: \"20px 20px\" }}>\r\n                        <div className=\"d-flex align-items-center justify-content-start\"\r\n                            style={{\r\n                                minHeight: \"300px\",\r\n                                maxWidth: \"100%\"\r\n                            }}>\r\n                            <div style={{\r\n                                color: \"white\",\r\n                                fontSize: \"30px\",\r\n                                fontFamily: 'inherit',\r\n                                fontWeight: \"bolder\"\r\n                            }}>\r\n                                <div style={{\r\n                                    color: \"black\",\r\n                                    backgroundColor: \"white\",\r\n                                    minWidth: \"50px\",\r\n                                    maxWidth: \"160px\",\r\n                                    fontSize: \"15px\",\r\n                                    textAlign: \"center\",\r\n                                    marginBottom: \"10px\",\r\n                                    border: `1px solid ${NewCourseData?.secondaryColor}`,\r\n                                }}>{NewCourseData?.tag}</div>\r\n                                <div style={{\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\",\r\n                                    height: \"40px\",\r\n                                    letterSpacing: \"-0.5px\",\r\n                                    fontFamily: 'sans-serif',\r\n                                    color: NewCourseData?.secondaryColor\r\n                                }}>\r\n                                    {NewCourseData?.title}\r\n                                </div>\r\n                                <div style={{\r\n                                    marginTop: \"15px\",\r\n                                    fontSize: \"17px\",\r\n                                    fontWeight: \"lighter\",\r\n                                    overflow: \"hidden\",\r\n                                    textOverflow: \"ellipsis\",\r\n                                    color: NewCourseData?.secondaryColor\r\n                                }}>\r\n                                    {NewCourseData?.description}\r\n                                </div>\r\n                                <div>\r\n                                    <p style={{ textAlign: \"left\" }}>\r\n                                        <a\r\n                                            href={prepareCourseLink()}\r\n                                            //href=\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&couponCode=CANGOKCEASLAN\"\r\n                                            target=\"_blank\"\r\n                                            className=\"btn px-4 py-2 btn-sm\"\r\n                                            style={{\r\n                                                outline: \"none\",\r\n                                                position: \"relative\",\r\n                                                fontWeight: \"bold\",\r\n                                                backgroundColor: \"white\",\r\n                                                marginLeft: \"0px\",\r\n                                                borderWidth: \"2px !important\",\r\n                                                textTransform: \"none\",\r\n                                                fontSize: \"18px\",\r\n                                                borderColor: NewCourseData?.secondaryColor,\r\n                                                color: \"black\",\r\n                                                top: \"25px\",\r\n                                                letterSpacing: \"0px\"\r\n                                            }} dangerouslySetInnerHTML={{\r\n                                                __html: prepareButtonText()\r\n                                            }}>\r\n                                        </a>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect((state: any) => ({\r\n    window: state.window.sizes,\r\n}), {\r\n\r\n})(NewCourseComponent);\r\n","import React, { ComponentType, useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport '@components/BlogPostNoSidebar/index.scss';\r\nimport NewCourse from '@components/NewCourse';\r\nimport moment from 'moment';\r\nimport { BsFillArrowRightCircleFill } from 'react-icons/bs';\r\nimport CoursesData, { CouponAndReferralGenerator } from '@data/courses';\r\nimport { CourseType } from '@data/interfaces/courses.interfaces';\r\nimport DocumentSettings from '@utils/seo';\r\nimport { SeoSettingsType } from '@utils/seo/DocumentSettings';\r\nimport { connect } from 'react-redux';\r\nimport { getPostFromApi } from '@modules/blogs';\r\nimport PageLoader from '@components/Loader/index';\r\nimport globalStyles from '@common/style';\r\n\r\n\r\ninterface SimplePostCardProps {\r\n    id: string;\r\n    link: string;\r\n    title: string;\r\n    cover: string;\r\n}\r\n\r\ninterface BlogPostNoSidebarProps {\r\n    id: string;\r\n    path: string;\r\n    cover: string;\r\n    youtubeEmbedUrl: string | undefined;\r\n    categories: { path: string, title: string }[];\r\n    title: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    subtitle: string;\r\n    htmlContent: string;\r\n    tags: string[];\r\n    suggestedPostsData: any[]\r\n}\r\n\r\n\r\nconst exampleData = {\r\n    _id: 'klsdfmglksdfgmlfdg',\r\n    path: 'nodejs-mongoose-truck',\r\n    cover: \"https://miro.medium.com/max/700/1*qQwwv7aYYcjY1q42pOzPFw.jpeg\",\r\n    youtubeEmbedUrl: \"https://www.youtube.com/embed/vPL46ZdAZrA\",\r\n    categories: [{\r\n        path: '/posts',\r\n        title: `Yazılar`\r\n    }, {\r\n        path: '/posts/yazilim',\r\n        title: `Yazılım`\r\n    }, {\r\n        path: '/posts/yazilim/nodejs',\r\n        title: \"Node.js\",\r\n    }],\r\n    title: `Node.js — MongoDb Veri Taşıma İşlemleri (mongoose & mongoose-truck)`,\r\n    subtitle: `Node.js ve MongoDb kullanarak MongoDb veritabanındaki bir collection ‘dan diğer MongoDb veritabanlarına veri taşımak için mongoose-truck kullanılır.`,\r\n    htmlContent: `\\n<h3>Node.js — <strong>MongoDb</strong> veritabanındaki bir collection ‘dan diğer MongoDb veritabanlarına veri taşımak (mongoose &amp; mongoose-truck)</h3>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/1024/1*qQwwv7aYYcjY1q42pOzPFw.jpeg\\\"></figure><p>Merhabalar sayın okucular, bugün sizlere yeni açık kaynak kodlu projemi anlatmak istiyorum. Öncelikle bu projenin nasıl çıktığından bahsetmem gerekiyor. Proje tam olarak bir ürün MongoDb veritabanından belirli bir veri setini başka bir test, geliştirme veritabanına veri taşırken yaşadığım stresten ortaya çıktı. Elimde bir <strong>MongoDb</strong> bağlantı text’i vardı. Buna MongoSh ile bağlanıp her seferinde sayfalandırma için gerekli olan script ’leri ekrana yapıştırmam gerekiyordu. Bunun yerine bir <strong>Node.js</strong> script’i ile bunu çözebileceğimi bilirken bunu yapmak gereksiz bir şeydi. Sonra spesifik bir <strong>Schema</strong> üzerinde çalışan bir model devreye aldım fakat bunu her Schema için tekrar etmem gerekiyordu. Buna ek olarak ürün <strong>mongoose.connect</strong> kullanıyordu bu da kodu herhangi bir route’a bağladığımda veya ürünün herhangi bir yerinde çalıştırdığımda mongoose bana hata verecekti. Çünkü ayrı bir script dosyası kullanılmazsa aynı <strong>Schema</strong> üzerinden yeni bir model başlatılınca mongoose sana bir engel oluşturur.</p>\\n<p>Ben de <strong>MongoDb</strong> ’lere dinamik şekilde bağlantı oluşturacak bir paket ve bağlantıyı gerçekleştirecek bir modül oluşturdum. Bu modül bağlantı string ‘ini alır ve size içerisinde dependency olarak bulunan mongoose üzerinden bir veritabanı bağlantısı döner. Bu bağlantıları kullanarak <strong>Schema</strong> ’lar üzerinden dinamik <strong>modeller</strong> oluşturulur. Veri taşıma işlemi bu <strong>dinamik modeller</strong> üzerinden gerçekleştir. Tabii ki bu yapıyı kafamda oturtmak benim için uzun bir süre (2 gün 🙃 ) aldı.</p>\\n<p>Modülü 1 gün içinde yazmayı becerebildim ve kendisi şu anda hem <a href=\\\"https://www.github.com/cangokceaslan/mongoose-truck\\\"><strong>GitHub</strong></a><strong> registry</strong> hem de <a href=\\\"https://www.npmjs.com/package/mongoose-truck\\\"><strong>npm</strong> <strong>registry</strong></a> üzerinde açık kaynak kod ve paket olarak bulunmaktadır. Buna ek olarak bu modül üzerinde çalışmak istediğim ve farklı multi-threaded işlemler için geliştirmeler bazı geliştirmeler var. Bunları da <a href=\\\"https://github.com/cangokceaslan/mongoose-truck/projects/1\\\"><strong>GitHub projeler</strong></a> özelliğini kullanarak herkesin görmesini sağlamak istiyorum.</p>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/1000/1*isAY-FwBJqZpTnDzQv1mBg.jpeg\\\"></figure><p>Şimdi birazcık paketin nasıl çalıştığından bahsetmek istiyorum. Paket genel olarak bir yükün bir kamyonla taşınması gibi bir analoji kullanıyor. Önce <strong>kaynak</strong> ve <strong>hedef</strong> noktalarla bağlantı kuruluyor. Daha sonrasında kaynaktan yük yükleme işlemi için direktifler veriliyor. Bundan hemen sonra yükün hedef noktalara nasıl döküleceği ile ilgili direktifler veriliyor ve işlemler başlatılıyor.</p>\\n<p>İlk olarak modülü npm ile yüklememiz gerekiyor</p>\\n<blockquote>npm i mongoose-truck</blockquote>\\n<pre>const MongooseTruck = require(\\\"mongoose-truck\\\")</pre>\\n<pre>const conn1 = await MongooseTruck.connect(\\\"database_connection_string\\\"),<br>        conn2 = await MongooseTruck.connect(\\\"database_connection_string\\\"),<br>        conn3 = await MongooseTruck.connect(\\\"database_connection_string\\\");</pre>\\n<p>Yukarıdaki kodda paketi çağırıyoruz. <strong>conn1</strong> bizim için kaynak bağlantısını sembolize ediyor. <strong>conn2</strong> ve <strong>conn3</strong> ise yükü boşaltacağımız noktaları temsil etmektedir</p>\\n<pre>const parsedData = await MongooseTruck.create(conn1, [conn2, conn3]).loadFrom({<br>    model: 'People',<br>    schema: PeopleSchema,<br>    query: {<br>        name: \\\"John\\\"<br>    },<br>    populate: {<br>        path: 'stars'<br>    },<br>    skip: 0,<br>    sort: {<br>        _id: -1<br>    },<br>    select: \\\"_id name surname age\\\",<br>    concurrent: 20,<br>    limit: 100<br>}).emptyTo({<br>    model: 'People',<br>    schema: PeopleSchema<br>}).start({<br>    parse: true<br>})<br><br>console.log(parsedData);</pre>\\n<p>Bu kısım ise en basit şekli ile conn1'den <strong>.loadFrom</strong> ile yüklemeye başla <strong>.emptyTo</strong> ile conn2 ve conn3 'teki boşaltılacak yeri belirle ve <strong>.start</strong> ile işleme başla olarak düşünülebilir. .<strong>loadFrom </strong>içerisindeki key ‘ler verilerin ne şekilde çekileceğini belirler.</p>\\n<pre>model       // Modelin ismi - string</pre>\\n<pre>schema      // Collection 'un Schema 'sı - mongoose.Schema</pre>\\n<pre>query:      // Veri çekilirken kullanılacak query - object</pre>\\n<pre>populate:   // Veri çekilirken eklenecek ilişkiler oluşturulur .populate() methodu ile aynı - object</pre>\\n<pre>skip:       // Veri çekilmeden N tane değer pas geçilir - .skip() methodu ile aynı - number</pre>\\n<pre>sort:       // Sıralama yapar - .sort() methodu ile aynı - object</pre>\\n<pre>select:     // Veri çekilirken gelecek key'ler - .select() methodu ile aynı - object / string</pre>\\n<pre>concurrent: // Veriyi çekerken kullanılacak sayfalandırma sabiti - number</pre>\\n<pre>limit:      // Toplam çekilecek veri miktarı - .limit() methodu ile aynı - number</pre>\\n<p>Birden fazla kaynaktan veri çekilerek de bu işlemler gerçekleştirilebilir. Örneğin: Kullanıcı collection ‘larım var birden fazla ben ikisini de kullanmak istiyorum. Başka bir örnek olarak aynı collection ‘dan iki farklı query kullanarak veri çekmek istiyorum. Bu durumda ise</p>\\n<pre>const parsedData = await MongooseTruck.create(conn1, [conn2, conn3]).loadFrom([{<br>        model: 'People',<br>        schema: PeopleSchema,<br>        query: {<br>            name: \\\"John\\\"<br>        },<br>        skip: 0,<br>        sort: {<br>            _id: -1<br>        },<br>        concurrent: 5,<br>        limit: 10<br>    },<br>    {<br>        model: 'People',<br>        schema: PeopleSchema,<br>        query: {<br>            name: \\\"Adam\\\"<br>        },<br>        populate: {<br>            path: 'stars'<br>        },<br>        skip: 1,<br>        sort: {<br>            _id: -1<br>        },<br>        select: \\\"_id name surname age\\\",<br>        concurrent: 3,<br>        limit: 20<br>    }<br>]).emptyTo({<br>    model: 'PersonsTests',<br>    schema: Person<br>}).start({<br>    parse: true<br>})<br>console.log(parsedData);</pre>\\n<p>Görüldüğü gibi .<strong>loadFrom </strong>içerisine bir array alabilir. Farklı collection ‘lardaki verileri tek bir yere toplarken veya tek bir collection ‘dan farklı query ’lerle veri çekilmek istenildiğinde bu şekilde array haline getirilebilir.</p>\\n<p><strong>.start</strong> işlemi içerisine <strong>parse</strong> isimli bir key alır. Bu key ise veri geçişleri tamamlandığında verinin koda getirilip getirilmeyeceğini belirler. <strong>parse:false </strong>olarak kullanılırsa boş array dönülür.</p>\\n<p>Bu bölümde de author’u olduğum mongoose kullanan <strong>Node.js</strong> uygulamalardaki iki veya daha çok MongoDb veritabanı arasındaki veri taşımanın kolay yolunu görmüş bulunmaktayız. Paketin GitHub sayfasına ulaşmak için</p>\\n<p><a href=\\\"https://www.github.com/cangokceaslan/mongoose-truck\\\">GitHub - cangokceaslan/mongoose-truck: mongoose-truck is a Node.js package for handling with data transaction between different MongoDb clusters.</a></p>\\n<p>Npm sayfası:</p>\\n<p><a href=\\\"https://www.npmjs.com/package/mongoose-truck\\\">mongoose-truck</a></p>\\n`,\r\n    tags: ['node.js', 'mongoose', 'database', 'nodejs', 'collection', 'mongoose-truck'],\r\n    createdAt: \"2020-05-20T12:00:00.000\",\r\n    updatedAt: \"2020-05-20T12:00:00.000\",\r\n    loaded: false\r\n}\r\n\r\n\r\n\r\nconst NewCourseData: CourseType = CoursesData[1];\r\n\r\nfunction EmbedYoutube(props: { url: string | undefined }) {\r\n    return (<iframe\r\n        src={`${props?.url}?width=1200&height=9999&muted&autoplay&origin=https://www.cangokceaslan.com`}\r\n        title=\"YouTube video player\"\r\n        frameBorder=\"0\"\r\n        className='article-embed-youtube-video'\r\n        allow=\"accelerometer;  encrypted-media; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen></iframe>)\r\n}\r\n\r\nfunction EmbedCover(props: { url: string }) {\r\n    return (\r\n        <img className='embed-cover-photo' src={props?.url} alt=\"\" />\r\n    )\r\n}\r\n\r\n\r\nfunction BlogPostNoSidebar(props: any) {\r\n    const history = useHistory();\r\n    const [postData, setPostData] = useState(exampleData);\r\n    const [suggestedPostsData, setSuggestedPostsData] = useState<any[]>([]);\r\n\r\n    useEffect(() => {\r\n        props.getPostFromApi({\r\n            id: props.match.params.id\r\n        }).then((res: any) => {\r\n            if (res?.node?.suggestedPosts) {\r\n                setSuggestedPostsData(res?.node?.suggestedPosts)\r\n            }\r\n            if (res?.node?.post) {\r\n                setPostData({\r\n                    ...res?.node?.post,\r\n                    loaded: true\r\n                });\r\n            } else {\r\n                history.push('/')\r\n            }\r\n        })\r\n    }, []);\r\n    if (!postData?.loaded) {\r\n        return <PageLoader loaded={false} />\r\n    }\r\n    const data: BlogPostNoSidebarProps = {\r\n        id: postData?._id,\r\n        path: '/post/' + postData?.path,\r\n        cover: postData?.cover,\r\n        youtubeEmbedUrl: postData?.youtubeEmbedUrl,\r\n        categories: postData?.categories,\r\n        title: postData?.title,\r\n        subtitle: postData?.subtitle,\r\n        createdAt: `Paylaşılma Tarihi: ${moment(new Date(postData?.createdAt).toString()).format('LL')}`,\r\n        updatedAt: `Güncellenme Tarihi: ${moment(new Date(postData?.updatedAt).toString()).format('LL')}`,\r\n        htmlContent: postData?.htmlContent,\r\n        tags: postData?.tags,\r\n        suggestedPostsData: suggestedPostsData\r\n    };\r\n    const categoryBuilder = () => {\r\n        return (data?.categories || []).map((category: {\r\n            title: string,\r\n            path: string\r\n        }, index: number) => {\r\n            if (index >= data?.categories?.length - 1) {\r\n                return <React.Fragment>\r\n                    <a className='category-link' href={`${category?.path}`}>{category?.title}</a>\r\n                </React.Fragment>\r\n            }\r\n            return <React.Fragment>\r\n                <a className='category-link' href={`${category?.path}`}>{category?.title}</a>\r\n                <div className='category-link'>/</div>\r\n            </React.Fragment>\r\n        })\r\n    }\r\n\r\n    const docData: SeoSettingsType = {\r\n        title: data?.title + ' | Can Gökçeaslan',\r\n        description: data?.subtitle,\r\n        image: data?.cover,\r\n        siteName: 'https://www.cangokceaslan.com' + data?.path,\r\n        keywords: (data?.tags || []).join(','),\r\n        author: 'Can Gökçeaslan',\r\n        locale: \"tr\"\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <DocumentSettings docData={docData} />\r\n            <div className=\"blog-content-screen-container-no-side-bar\">\r\n                <div className='blog-content-screen-container'>\r\n                    <div className='container-fluid post-and-side-container-fluid'>\r\n                        <div className='container post-and-side-container'>\r\n                            <div className='row post-and-side-row' style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\"\r\n                            }}>\r\n                                <div className='col-lg-9 col-md-12 post-container'>\r\n                                    {data?.youtubeEmbedUrl && (<EmbedYoutube url={data?.youtubeEmbedUrl} />)}\r\n\r\n                                    <h1 className=\"title-container\">\r\n                                        {data?.title}\r\n                                    </h1>\r\n                                    <hr />\r\n                                    <div className=\"date-container\">\r\n                                        {data?.createdAt}  &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        {data?.updatedAt}\r\n                                    </div>\r\n                                    <hr />\r\n                                    <h2 className=\"subtitle-container\">\r\n                                        {data?.subtitle}\r\n                                    </h2>\r\n                                    {!data?.youtubeEmbedUrl && (<EmbedCover url={data?.cover} />)}\r\n\r\n                                    {\r\n                                        /* Math.random() >= 0.5\r\n                                            ? (<EmbedYoutube url={data?.youtubeEmbedUrl} />)\r\n                                            : (<EmbedCover url={data?.cover} />) */\r\n                                    }\r\n                                    {/* <div className='category-breadcrumb'>\r\n                                        {categoryBuilder()}\r\n                                    </div> */}\r\n                                    <hr />\r\n                                    <article dangerouslySetInnerHTML={{\r\n                                        __html: data?.htmlContent\r\n                                    }}>\r\n\r\n                                    </article>\r\n                                </div>\r\n                                {/* <div className=\"d-none col-lg-4 col-md-12 side-container\">\r\n                                    <a className='side-container-education-promotion-container' target=\"_blank\" href={CouponAndReferralGenerator(NewCourseData)}>\r\n                                        <div className='side-container-education-promotion'>\r\n                                            <img className=\"side-container-education-promotion-cover\" src={NewCourseData?.promotionCover || \"\"} />\r\n                                            <h3>En Son Eğitimim</h3>\r\n                                            <div className=\"side-container-education-promotion-icon\">\r\n                                                <BsFillArrowRightCircleFill size={35} color=\"black\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </a>\r\n                                    <hr />\r\n                                    {(data?.suggestedPostsData || []).map((post, index) => {\r\n                                        return (\r\n                                            <a href={`/post/${post?.path}`} style={{\r\n                                                color: \"black\"\r\n                                            }}>\r\n                                                <div className=\"card blog-card\" style={{ margin: \"20px 0px\" }}>\r\n                                                    <img\r\n                                                        src={post?.cover || \"https://mapandan.gov.ph/wp-content/uploads/2018/03/no_image.jpg\"}\r\n                                                        className=\"card-img-top\"\r\n                                                        width=\"100%\"\r\n                                                        height=\"215px\"\r\n                                                        style={{\r\n                                                            objectFit: \"cover\"\r\n                                                        }}\r\n                                                        alt={post?.title} />\r\n                                                    <div className=\"card-body blog-body\">\r\n                                                        <h4 className=\"card-title blog-title\" style={{\r\n                                                            cursor: \"pointer\"\r\n                                                        }}>\r\n                                                            {post?.title}\r\n                                                        </h4>\r\n                                                        <p className=\"card-text blog-content\">\r\n                                                            {post?.subtitle}\r\n                                                        </p>\r\n                                                        <p className=\"blog-information d-flex align-items-center justify-content-center\">\r\n                                                            <span style={{\r\n                                                                flex: 3, display: 'flex',\r\n                                                                alignItems: \"center\",\r\n                                                                height: '100%'\r\n                                                            }}>\r\n                                                                <p className=\"blog-author\"\r\n                                                                    style={{\r\n                                                                        color: globalStyles.primaryColor,\r\n                                                                        fontFamily: 'inherit',\r\n                                                                        fontWeight: 'bold',\r\n                                                                        marginTop: \"54px\",\r\n                                                                        marginLeft: \"2.5px\"\r\n                                                                    }}\r\n                                                                //target=\"__blank\"\r\n                                                                //href={\"https://www.cangokceaslan.com/about\"}\r\n                                                                >\r\n                                                                    Can Gökçeaslan\r\n                                                                </p>\r\n                                                            </span>\r\n                                                            <span className=\"align-items-start justify-content-end blog-pub-date\"\r\n                                                                style={{\r\n                                                                    flex: 2,\r\n                                                                    color: 'black',\r\n                                                                    textAlign: \"right\",\r\n                                                                    letterSpacing: \"-0.5px\"\r\n                                                                }}>\r\n                                                                {post?.createdAt && moment(new Date(post?.createdAt)).format('LL')}\r\n                                                            </span>\r\n                                                        </p>\r\n                                                    </div>\r\n\r\n                                                </div >\r\n                                            </a>\r\n\r\n                                        )\r\n                                    })}\r\n                                    <hr />\r\n                                    <div className=\"justify-content-center align-items-center\">\r\n                                        <iframe\r\n                                            src=\"https://open.spotify.com/embed/playlist/4oNpF23olYx1tp0gpD8bjC?theme=0\"\r\n                                            width=\"100%\"\r\n                                            height=\"550px\"\r\n                                            frameBorder=\"0\"\r\n                                            allowFullScreen\r\n                                            allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <NewCourse />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default connect((state: any) => ({\r\n}), { getPostFromApi })(withRouter(BlogPostNoSidebar));"],"sourceRoot":""}