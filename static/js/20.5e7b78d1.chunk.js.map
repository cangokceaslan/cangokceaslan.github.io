{"version":3,"sources":["components/Trader/Stack.tsx"],"names":["withRouter","props","ref","useRef","openChart","el","value","appendChild","useEffect","_props$match","match","params","key","stack","toString","script","document","createElement","script1","src","innerHTML","concat","console","log","async","onload","current","_jsx","className","children","_jsxs"],"mappings":"uIAAA,yCAkEeA,uBA5DA,SAACC,GACZ,IAAMC,EAAMC,iBAA2B,MACjCC,EAAY,SAACC,EAAwBC,GACnCD,IACE,OAAFA,QAAE,IAAFA,KAAIE,YAAYD,GAExB,EAuCA,OAtCAE,qBAAU,WAAO,IAADC,EACZ,GAAU,OAALR,QAAK,IAALA,KAAOS,MAAMC,OAAOC,KAAa,OAALX,QAAK,IAALA,KAAOS,MAAMC,OAAOE,MAArD,CACA,IAAMD,EAAW,OAALX,QAAK,IAALA,GAAY,QAAPQ,EAALR,EAAOS,aAAK,IAAAD,OAAP,EAALA,EAAcE,OAAOC,IAAIE,WAC/BD,EAAa,OAALZ,QAAK,IAALA,OAAK,EAALA,EAAOS,MAAMC,OAAOE,MAAMC,WAClCC,EAASC,SAASC,cAAc,UAChCC,EAAUF,SAASC,cAAc,UACvCF,EAAOI,IAAM,mCACbD,EAAQE,UAAS,4HAAAC,OAGD,IAAMR,EAAQ,IAAMD,EAAM,IAAG,moBAmB7CU,QAAQC,IAAIL,GACZH,EAAOS,OAAQ,EACfT,EAAOU,OAAS,WACZrB,EAAUF,EAAIwB,QAASR,EAC3B,EACY,OAARhB,GACAE,EAAUF,EAAIwB,QAASX,EAlCuC,CAoCtE,GAAG,CAAM,OAALd,QAAK,IAALA,OAAK,EAALA,EAAOS,MAAMC,OAAOC,MAEpBe,cAAA,OAAKC,UAAU,mBAAkBC,SAC7BF,cAAA,OAAKC,UAAU,wCAAuCC,SAClDC,eAAA,OAAKF,UAAU,MAAKC,SAAA,CAChBF,cAAA,OAAKC,UAAU,0BAA0B1B,IAAKA,IAG9CyB,cAAA,OAAKC,UAAU,mCAMnC,G","file":"static/js/20.5e7b78d1.chunk.js","sourcesContent":["import React, { useEffect, useRef, useLayoutEffect, ComponentType } from 'react';\nimport { withRouter } from 'react-router';\nimport '@components/Trader/index.scss';\ntype AppProps = {\n    match: any;\n}\nconst Trader = (props: AppProps) => {\n    const ref = useRef<HTMLHeadingElement>(null);\n    const openChart = (el: HTMLElement | null, value: HTMLScriptElement) => {\n        if (el) {\n            el?.appendChild(value);\n        }\n    }\n    useEffect(() => {\n        if (!props?.match.params.key || !props?.match.params.stack) return;\n        const key = props?.match?.params.key.toString();\n        const stack = props?.match.params.stack.toString();\n        const script = document.createElement('script');\n        const script1 = document.createElement('script');\n        script.src = 'https://s3.tradingview.com/tv.js';\n        script1.innerHTML = `new TradingView.widget({\n            \"width\": \"100%\",\n            \"height\": window.innerHeight,\n            \"symbol\": ${'\"' + stack + ':' + key + '\"'},\n            \"interval\": \"D\",\n            \"timezone\": \"Europe/Istanbul\",\n            \"theme\": \"dark\",\n            \"style\": \"1\",\n            \"locale\": \"tr\",\n            \"toolbar_bg\": \"#f1f3f6\",\n            \"enable_publishing\": false,\n            \"withdateranges\": true,\n            \"hide_side_toolbar\": false,\n            \"allow_symbol_change\": true,\n            \"show_popup_button\": true,\n            \"popup_width\": \"1000\",\n            \"popup_height\": \"650\",\n            \"container_id\": \"tradingview_3bdcf\"\n        });\n        document.body.style.margin = \"0px\";\n        document.body.style.overflow = \"hidden\";\n        `;\n        console.log(script1)\n        script.async = false;\n        script.onload = () => {\n            openChart(ref.current, script1);\n        };\n        if (ref !== null) {\n            openChart(ref.current, script);\n        }\n    }, [props?.match.params.key])\n    return (\n        <div className=\"trader-container\">\n            <div className=\"container-flud trader-container-fluid\">\n                <div className=\"row\">\n                    <div className='col-lg-8 container-left' ref={ref}>\n\n                    </div>\n                    <div className='col-lg-4 container-right'></div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default withRouter(Trader);"],"sourceRoot":""}