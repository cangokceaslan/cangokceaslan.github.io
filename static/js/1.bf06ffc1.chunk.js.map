{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/node_modules/character-entities/index.js","../node_modules/decode-named-character-reference/index.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/unified/node_modules/is-buffer/index.js","../node_modules/extend/index.js","../node_modules/vfile/node_modules/is-buffer/index.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/style-to-object/index.js","../node_modules/inline-style-parser/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","a","push","apply","Function","setPrototypeOf","arguments","_cache","Map","undefined","fn","toString","call","indexOf","has","get","set","Wrapper","getPrototypeOf","this","constructor","create","value","stringifyPosition","position","point","index","line","column","pos","start","end","VFileMessage","_Error","_inherits","_super","_createSuper","reason","place","origin","_this","parts","slice","name","message","stack","fatal","source","ruleId","file","actual","expected","url","note","_wrapNativeSuper","Error","path","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","_len","segments","Array","_key","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","options","bufferLike","buffer","data","messages","history","stored","map","prop","_toConsumableArray","includes","assertNonEmpty","assertPart","stem","encoding","part","_toArray","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","isPlainObject","Symbol","toStringTag","iterator","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","_len2","output","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","done","Promise","then","_len4","_key4","concat","wrap","use","middelware","unified","base","frozen","transformers","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","_attachers$freezeInde","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","isArray","addList","addPreset","assign","add","_value","plugin","plugins","entry","isPlainObj","extend","parse","doc","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","isBuffer","processSync","destination","hasOwnProperty","keys","type","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterEntities","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","decodeNamedCharacterReference","characterReference","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","_document","_defineProperty","_flowInitial","_flow","_string","_text","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","d","combined","_combined$key","_combined$key2","remarkParse","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","_checks$index","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","lines","trimLine","codePointAt","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","src","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","cache","definitions","augment","hName","hProperties","hChildren","ctx","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","remarkRehype","bridge","mutate","Schema","property","normal","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","pow","types","DefinedInfo","_Info","mask","mark","_assertThisInitialized","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","style","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","whitespace","thing","valid","kebab","camelcase","charAt","hastToReact","StyleToObject","protocols","uriTransformer","uri","trim","first","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","React","Fragment","ReactIs","isValidElementType","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","Type","rest","dashes","find","padRight","padLeft","commas","_unused","v","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes","func","arrayOf","bool","oneOfType","any","subClass","superClass","_getPrototypeOf","o","__proto__","_isNativeReflectConstruct","sham","Proxy","valueOf","e","ReferenceError","Derived","hasNativeReflectConstruct","Super","NewTarget","assertThisInitialized","module","exports","obj","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","hasOwnConstructor","hasIsPrototypeOf","setProperty","newValue","getProperty","copyIsArray","clone","deep","require","u","b","for","c","f","g","h","l","m","n","p","q","t","$$typeof","ContextConsumer","ContextProvider","ForwardRef","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","getModuleId","declarations","hasIterator","len","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","comments","val","ret","decl","decls"],"mappings":"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","file":"static/js/1.bf06ffc1.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n"],"sourceRoot":""}