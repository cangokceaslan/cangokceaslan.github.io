{"version":3,"sources":["components/Trader/Stack.tsx"],"names":["withRouter","props","ref","useRef","openChart","el","value","appendChild","useEffect","match","params","key","stack","toString","script","document","createElement","script1","src","innerHTML","console","log","async","onload","current","className"],"mappings":"uIAAA,yCAkEeA,uBA5DA,SAACC,GACZ,IAAMC,EAAMC,iBAA2B,MACjCC,EAAY,SAACC,EAAwBC,GACnCD,IACE,OAAFA,QAAE,IAAFA,KAAIE,YAAYD,KAyCxB,OAtCAE,qBAAU,WAAO,IAAD,EACZ,IAAI,OAACP,QAAD,IAACA,OAAD,EAACA,EAAOQ,MAAMC,OAAOC,OAAO,OAACV,QAAD,IAACA,OAAD,EAACA,EAAOQ,MAAMC,OAAOE,OAArD,CACA,IAAMD,EAAG,OAAGV,QAAH,IAAGA,GAAH,UAAGA,EAAOQ,aAAV,aAAG,EAAcC,OAAOC,IAAIE,WAC/BD,EAAK,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAAOQ,MAAMC,OAAOE,MAAMC,WAClCC,EAASC,SAASC,cAAc,UAChCC,EAAUF,SAASC,cAAc,UACvCF,EAAOI,IAAM,mCACbD,EAAQE,UAAR,mIAGgB,IAAMP,EAAQ,IAAMD,EAAM,IAH1C,moBAsBAS,QAAQC,IAAIJ,GACZH,EAAOQ,OAAQ,EACfR,EAAOS,OAAS,WACZnB,EAAUF,EAAIsB,QAASP,IAEf,OAARf,GACAE,EAAUF,EAAIsB,QAASV,MAE5B,QAACb,QAAD,IAACA,OAAD,EAACA,EAAOQ,MAAMC,OAAOC,MAEpB,qBAAKc,UAAU,mBAAf,SACI,qBAAKA,UAAU,wCAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,0BAA0BvB,IAAKA,IAG9C,qBAAKuB,UAAU","file":"static/js/18.bbf5fdf4.chunk.js","sourcesContent":["import React, { useEffect, useRef, useLayoutEffect, ComponentType } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport '@components/Trader/index.scss';\r\ntype AppProps = {\r\n    match: any;\r\n}\r\nconst Trader = (props: AppProps) => {\r\n    const ref = useRef<HTMLHeadingElement>(null);\r\n    const openChart = (el: HTMLElement | null, value: HTMLScriptElement) => {\r\n        if (el) {\r\n            el?.appendChild(value);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!props?.match.params.key || !props?.match.params.stack) return;\r\n        const key = props?.match?.params.key.toString();\r\n        const stack = props?.match.params.stack.toString();\r\n        const script = document.createElement('script');\r\n        const script1 = document.createElement('script');\r\n        script.src = 'https://s3.tradingview.com/tv.js';\r\n        script1.innerHTML = `new TradingView.widget({\r\n            \"width\": \"100%\",\r\n            \"height\": window.innerHeight,\r\n            \"symbol\": ${'\"' + stack + ':' + key + '\"'},\r\n            \"interval\": \"D\",\r\n            \"timezone\": \"Europe/Istanbul\",\r\n            \"theme\": \"dark\",\r\n            \"style\": \"1\",\r\n            \"locale\": \"tr\",\r\n            \"toolbar_bg\": \"#f1f3f6\",\r\n            \"enable_publishing\": false,\r\n            \"withdateranges\": true,\r\n            \"hide_side_toolbar\": false,\r\n            \"allow_symbol_change\": true,\r\n            \"show_popup_button\": true,\r\n            \"popup_width\": \"1000\",\r\n            \"popup_height\": \"650\",\r\n            \"container_id\": \"tradingview_3bdcf\"\r\n        });\r\n        document.body.style.margin = \"0px\";\r\n        document.body.style.overflow = \"hidden\";\r\n        `;\r\n        console.log(script1)\r\n        script.async = false;\r\n        script.onload = () => {\r\n            openChart(ref.current, script1);\r\n        };\r\n        if (ref !== null) {\r\n            openChart(ref.current, script);\r\n        }\r\n    }, [props?.match.params.key])\r\n    return (\r\n        <div className=\"trader-container\">\r\n            <div className=\"container-flud trader-container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className='col-lg-8 container-left' ref={ref}>\r\n\r\n                    </div>\r\n                    <div className='col-lg-4 container-right'></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Trader);"],"sourceRoot":""}