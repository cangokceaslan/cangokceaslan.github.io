{"version":3,"sources":["components/Loader/WhiteLoader.tsx","assets/svg/twitch.svg","components/Twitch/index.tsx"],"names":["WhiteLoader","props","loaded","size","thick","className","style","width","height","fontSize","role","EMBED_URL","Twitch","useState","setLoaded","useEffect","twitchElement","document","querySelector","remove","script","createElement","setAttribute","addEventListener","body","appendChild","src","TwitchSvg","background","channel","id","theme","allowfullscreen","onVideoPause","console","log","position","top"],"mappings":"4HAwBeA,IAxBK,WAQT,IARUC,EAIpB,uDAAG,CACIC,QAAQ,EACRC,KAAM,IACNC,MAAO,IAEX,OACI,qBAAKC,UAAU,mDAAkD,SAC7D,qBAAKA,UAAU,mBAAkB,SAC7B,qBAAKA,UAAU,mCAAmCC,MAAO,CACrDC,OAAY,OAALN,QAAK,IAALA,OAAK,EAALA,EAAOE,OAAQ,IACtBK,QAAa,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOE,OAAQ,IACvBM,UAAe,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOG,QAAS,IAC3BM,KAAK,SAAQ,SACZ,sBAAML,UAAU,kBAAiB,6BAKrD,C,0FCtBe,MAA0B,mC,yBCMnCM,EAAY,sCAsEHC,UArEmB,SAACX,GAC/B,MAA4BY,oBAAkB,GAAM,mBAA7CX,EAAM,KAAEY,EAAS,KAgBxB,OAfAC,qBAAU,WACN,IAAMC,EAAgBC,SAASC,cAAc,eAAiBP,EAAY,MACtEK,GACAA,EAAcG,SAElB,IAAMC,EAASH,SAASI,cAAc,UACtCD,EAAOE,aACH,MACAX,GAEJS,EAAOG,iBAAiB,QAAQ,WAC5BT,GAAU,EACd,IACAG,SAASO,KAAKC,YAAYL,EAC9B,GAAG,IACElB,EAiBD,qBAAKG,UAAU,mCAAkC,SAC7C,qBAAKA,UAAU,YAAW,SACtB,sBAAKA,UAAU,MAAK,UAChB,qBAAKA,UAAU,cAAa,SACxB,qBACIqB,IAAKC,EACLpB,MAAM,QACNC,OAAO,WAGf,qBAAKH,UAAU,mDAAkD,SAC7D,qBAAKA,UAAU,SAASC,MAAO,CAAEsB,WAAY,SAAU,SACnD,gCACI,8BACI,qBAAKvB,UAAU,yBAAwB,SACnC,cAAC,IAAW,CACRwB,QAAQ,gBACRC,GAAG,gBACHC,MAAM,OACNC,iBAAiB,EACjBzB,MAAM,OACN0B,aAAc,kBAAMC,QAAQC,IAAI,KAAK,QAG3C,iDAxCvB,qBAAK9B,UAAU,mCAAkC,SACpD,qBAAKA,UAAU,YAAW,SACtB,sBAAKA,UAAU,MAAK,UAChB,qBAAKA,UAAU,cAAcC,MAAO,CAAE8B,SAAU,WAAYC,IAAK,IAAK,SAClE,qBACIX,IAAKC,EACLpB,MAAM,QACNC,OAAO,WAGf,cAACR,EAAA,EAAW,CAACE,OAAQA,UAsCzC,C","file":"static/js/19.b936d54b.chunk.js","sourcesContent":["const WhiteLoader = (props: {\n    loaded: boolean | undefined;\n    size?: number;\n    thick?: number;\n} = {\n        loaded: false,\n        size: 125,\n        thick: 25\n    }) => {\n    return (\n        <div className=\"justify-content-center align-items-center d-flex\">\n            <div className=\"loader-container\">\n                <div className=\"spinner-border text-white loader\" style={{\n                    width: props?.size || 125,\n                    height: props?.size || 125,\n                    fontSize: props?.thick || 25\n                }} role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WhiteLoader","export default __webpack_public_path__ + \"static/media/twitch.676e5337.svg\";","import React, { Component, ComponentClass, ComponentType, FunctionComponent, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { TwitchEmbed } from 'react-twitch-embed';\nimport TwitchSvg from '@assets/svg/twitch.svg'\nimport '@components/Twitch/index.scss';\nimport WhiteLoader from '@components/Loader/WhiteLoader';\nconst EMBED_URL = 'https://embed.twitch.tv/embed/v1.js';\nconst Twitch: FunctionComponent = (props) => {\n    const [loaded, setLoaded] = useState<boolean>(false);\n    useEffect(() => {\n        const twitchElement = document.querySelector('script[src=\"' + EMBED_URL + '\"]');\n        if (twitchElement) {\n            twitchElement.remove()\n        }\n        const script = document.createElement('script');\n        script.setAttribute(\n            'src',\n            EMBED_URL\n        );\n        script.addEventListener('load', () => {\n            setLoaded(true);\n        });\n        document.body.appendChild(script);\n    }, [])\n    if (!loaded) {\n        return <div className=\"container-fluid twitch-container\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"twitch-logo\" style={{ position: \"absolute\", top: 50 }}>\n                        <img\n                            src={TwitchSvg}\n                            width=\"150px\"\n                            height=\"auto\"\n                        />\n                    </div>\n                    <WhiteLoader loaded={loaded} />\n                </div>\n            </div>\n        </div>\n    }\n    return (\n        <div className=\"container-fluid twitch-container\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"twitch-logo\">\n                        <img\n                            src={TwitchSvg}\n                            width=\"150px\"\n                            height=\"auto\"\n                        />\n                    </div>\n                    <div className=\"d-flex align-items-center justify-content-center\">\n                        <div className=\"padder\" style={{ background: \"white\" }}>\n                            <div>\n                                <div>\n                                    <div className=\"justify-content-center\">\n                                        <TwitchEmbed\n                                            channel=\"cangokceaslan\"\n                                            id=\"cangokceaslan\"\n                                            theme=\"dark\"\n                                            allowfullscreen={true}\n                                            width=\"100%\"\n                                            onVideoPause={() => console.log(':(')}\n                                        />\n                                    </div>\n                                </div>                                </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default Twitch;"],"sourceRoot":""}