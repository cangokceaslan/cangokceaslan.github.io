{"version":3,"sources":["components/BlogPost/index.tsx","components/NewCourse/index.tsx"],"names":["exampleData","id","title","cover","youtubeEmbedUrl","suggestedPosts","EmbedYoutube","props","src","url","frameBorder","className","allow","allowFullScreen","BlogPost","dangerouslySetInnerHTML","__html","map","post","index","width","alt","NewCourseData","courses","NewCourse","videoWidth","videoHeight","window","innerWidth","style","background","primaryColor","padding","minHeight","maxWidth","color","fontSize","fontFamily","fontWeight","backgroundColor","textAlign","marginBottom","overflow","textOverflow","height","secondaryColor","marginTop","description","href","referralCode","couponCode","target","marginLeft","borderWidth","textTransform","borderColor","letterSpacing","border","margin","maxHeight","this","React","Component"],"mappings":"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","file":"static/js/9.f3592116.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '@components/BlogPost/index.scss';\r\nimport NewCourse from '@components/NewCourse';\r\n\r\ninterface BlogPostProps {\r\n    id: string;\r\n    cover: string;\r\n    title: string;\r\n    youtubeEmbedUrl: string;\r\n    suggestedPosts: any[];\r\n}\r\n\r\nconst exampleData: BlogPostProps = {\r\n    id: 'klsdfmglksdfgmlfdg',\r\n    title: 'Stop Using Conditional Statements Everywhere in JavaScript, Use an Object Literal instead Stop Using Conditional Statements Everywhere in JavaScript',\r\n    cover: \"https://icdn.ensonhaber.com/resimler/diger/kok/2022/03/12/al_6521.jpg\",\r\n    youtubeEmbedUrl: \"https://www.youtube.com/embed/vPL46ZdAZrA\",\r\n    suggestedPosts: [{\r\n\r\n    }, {\r\n\r\n    }, {\r\n\r\n    }, {\r\n\r\n    }, {\r\n\r\n    }, {\r\n\r\n    }]\r\n}\r\n\r\nfunction EmbedYoutube(props: { url: string }) {\r\n    return (<iframe\r\n        src={props?.url || \"https://www.youtube.com/embed/vPL46ZdAZrA\"}\r\n        title=\"YouTube video player\"\r\n        frameBorder=\"0\"\r\n        className='article-embed-youtube-video'\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen></iframe>)\r\n}\r\n\r\nfunction BlogPost(props: object) {\r\n    return (\r\n        <div>\r\n            <div className=\"blog-content-screen-container\">\r\n                <div className='blog-content-screen-container'>\r\n                    {/* <div className='container-fluid cover-container'>\r\n                        <div className=\"black-overlay\" />\r\n                        <img src={exampleData.cover} alt=\"\" />\r\n                        <h1 className='article-title'>\r\n                            {\r\n                                exampleData?.title\r\n                            }\r\n                        </h1>\r\n                    </div> */}\r\n                    <div className='container-fluid post-and-side-container-fluid'>\r\n                        <div className='container post-and-side-container'>\r\n                            <div className='row post-and-side-row'>\r\n                                <div className='col-lg-8 col-12 post-container'>\r\n                                    <EmbedYoutube url={exampleData?.youtubeEmbedUrl} />\r\n                                    {/* <div className='image-container'>\r\n                                        <img src={exampleData.cover} alt=\"\" />\r\n                                    </div> */}\r\n                                    <div className='category-container'>\r\n                                        Haberler - GÃ¼ndem Haberleri - Ä°stanbul'da kar etkili olmaya devam ediyor\r\n                                    </div>\r\n                                    <div className=\"title-container\">\r\n                                        {exampleData?.title}\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"subtitle-container\">\r\n                                        GÃ¼nlerdir yapÄ±lan uyarÄ±lardan sonra Ä°stanbul'u etkisi altÄ±na aln kar yaÄŸÄ±ÅŸÄ± akÅŸam saatlerinde etkili olurken tÃ¼m ÅŸehir karla kaplandÄ±.\r\n                                    </div>\r\n                                    <div className=\"date-container\">\r\n                                        PaylaÅŸÄ±lma Tarihi: 12.03.2022 - 20:47   /   GÃ¼ncelleme Tarihi: 12.03.2022 - 22:01\r\n                                    </div>\r\n                                    <hr />\r\n                                    <article dangerouslySetInnerHTML={{\r\n                                        __html: `\\n<h3>Node.jsâ€Šâ€”â€Š<strong>MongoDb</strong> veritabanÄ±ndaki bir collection â€˜dan diÄŸer MongoDb veritabanlarÄ±na veri taÅŸÄ±mak (mongoose &amp; mongoose-truck)</h3>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/1024/1*qQwwv7aYYcjY1q42pOzPFw.jpeg\\\"></figure><p>Merhabalar sayÄ±n okucular, bugÃ¼n sizlere yeni aÃ§Ä±k kaynak kodlu projemi anlatmak istiyorum. Ã–ncelikle bu projenin nasÄ±l Ã§Ä±ktÄ±ÄŸÄ±ndan bahsetmem gerekiyor. Proje tam olarak bir Ã¼rÃ¼n MongoDb veritabanÄ±ndan belirli bir veri setini baÅŸka bir test, geliÅŸtirme veritabanÄ±na veri taÅŸÄ±rken yaÅŸadÄ±ÄŸÄ±m stresten ortaya Ã§Ä±ktÄ±. Elimde bir <strong>MongoDb</strong> baÄŸlantÄ± textâ€™i vardÄ±. Buna MongoSh ile baÄŸlanÄ±p her seferinde sayfalandÄ±rma iÃ§in gerekli olan script â€™leri ekrana yapÄ±ÅŸtÄ±rmam gerekiyordu. Bunun yerine bir <strong>Node.js</strong> scriptâ€™i ile bunu Ã§Ã¶zebileceÄŸimi bilirken bunu yapmak gereksiz bir ÅŸeydi. Sonra spesifik bir <strong>Schema</strong> Ã¼zerinde Ã§alÄ±ÅŸan bir model devreye aldÄ±m fakat bunu her Schema iÃ§in tekrar etmem gerekiyordu. Buna ek olarak Ã¼rÃ¼n <strong>mongoose.connect</strong> kullanÄ±yordu bu da kodu herhangi bir routeâ€™a baÄŸladÄ±ÄŸÄ±mda veya Ã¼rÃ¼nÃ¼n herhangi bir yerinde Ã§alÄ±ÅŸtÄ±rdÄ±ÄŸÄ±mda mongoose bana hata verecekti. Ã‡Ã¼nkÃ¼ ayrÄ± bir script dosyasÄ± kullanÄ±lmazsa aynÄ± <strong>Schema</strong> Ã¼zerinden yeni bir model baÅŸlatÄ±lÄ±nca mongoose sana bir engel oluÅŸturur.</p>\\n<p>Ben de <strong>MongoDb</strong> â€™lere dinamik ÅŸekilde baÄŸlantÄ± oluÅŸturacak bir paket ve baÄŸlantÄ±yÄ± gerÃ§ekleÅŸtirecek bir modÃ¼l oluÅŸturdum. Bu modÃ¼l baÄŸlantÄ± string â€˜ini alÄ±r ve size iÃ§erisinde dependency olarak bulunan mongoose Ã¼zerinden bir veritabanÄ± baÄŸlantÄ±sÄ± dÃ¶ner. Bu baÄŸlantÄ±larÄ± kullanarak <strong>Schema</strong> â€™lar Ã¼zerinden dinamik <strong>modeller</strong> oluÅŸturulur. Veri taÅŸÄ±ma iÅŸlemi bu <strong>dinamik modeller</strong> Ã¼zerinden gerÃ§ekleÅŸtir. Tabii ki bu yapÄ±yÄ± kafamda oturtmak benim iÃ§in uzun bir sÃ¼re (2 gÃ¼n ðŸ™ƒ ) aldÄ±.</p>\\n<p>ModÃ¼lÃ¼ 1 gÃ¼n iÃ§inde yazmayÄ± becerebildim ve kendisi ÅŸu anda hem <a href=\\\"https://www.github.com/cangokceaslan/mongoose-truck\\\"><strong>GitHub</strong></a><strong> registry</strong> hem de <a href=\\\"https://www.npmjs.com/package/mongoose-truck\\\"><strong>npm</strong> <strong>registry</strong></a> Ã¼zerinde aÃ§Ä±k kaynak kod ve paket olarak bulunmaktadÄ±r. Buna ek olarak bu modÃ¼l Ã¼zerinde Ã§alÄ±ÅŸmak istediÄŸim ve farklÄ± multi-threaded iÅŸlemler iÃ§in geliÅŸtirmeler bazÄ± geliÅŸtirmeler var. BunlarÄ± da <a href=\\\"https://github.com/cangokceaslan/mongoose-truck/projects/1\\\"><strong>GitHub projeler</strong></a> Ã¶zelliÄŸini kullanarak herkesin gÃ¶rmesini saÄŸlamak istiyorum.</p>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/1000/1*isAY-FwBJqZpTnDzQv1mBg.jpeg\\\"></figure><p>Åžimdi birazcÄ±k paketin nasÄ±l Ã§alÄ±ÅŸtÄ±ÄŸÄ±ndan bahsetmek istiyorum. Paket genel olarak bir yÃ¼kÃ¼n bir kamyonla taÅŸÄ±nmasÄ± gibi bir analoji kullanÄ±yor. Ã–nce <strong>kaynak</strong> ve <strong>hedef</strong> noktalarla baÄŸlantÄ± kuruluyor. Daha sonrasÄ±nda kaynaktan yÃ¼k yÃ¼kleme iÅŸlemi iÃ§in direktifler veriliyor. Bundan hemen sonra yÃ¼kÃ¼n hedef noktalara nasÄ±l dÃ¶kÃ¼leceÄŸi ile ilgili direktifler veriliyor ve iÅŸlemler baÅŸlatÄ±lÄ±yor.</p>\\n<p>Ä°lk olarak modÃ¼lÃ¼ npm ile yÃ¼klememiz gerekiyor</p>\\n<blockquote>npm i mongoose-truck</blockquote>\\n<pre>const MongooseTruck = require(\\\"mongoose-truck\\\")</pre>\\n<pre>const conn1 = await MongooseTruck.connect(\\\"database_connection_string\\\"),<br>        conn2 = await MongooseTruck.connect(\\\"database_connection_string\\\"),<br>        conn3 = await MongooseTruck.connect(\\\"database_connection_string\\\");</pre>\\n<p>YukarÄ±daki kodda paketi Ã§aÄŸÄ±rÄ±yoruz. <strong>conn1</strong> bizim iÃ§in kaynak baÄŸlantÄ±sÄ±nÄ± sembolize ediyor. <strong>conn2</strong> ve <strong>conn3</strong> ise yÃ¼kÃ¼ boÅŸaltacaÄŸÄ±mÄ±z noktalarÄ± temsil etmektedir</p>\\n<pre>const parsedData = await MongooseTruck.create(conn1, [conn2, conn3]).loadFrom({<br>    model: 'People',<br>    schema: PeopleSchema,<br>    query: {<br>        name: \\\"John\\\"<br>    },<br>    populate: {<br>        path: 'stars'<br>    },<br>    skip: 0,<br>    sort: {<br>        _id: -1<br>    },<br>    select: \\\"_id name surname age\\\",<br>    concurrent: 20,<br>    limit: 100<br>}).emptyTo({<br>    model: 'People',<br>    schema: PeopleSchema<br>}).start({<br>    parse: true<br>})<br><br>console.log(parsedData);</pre>\\n<p>Bu kÄ±sÄ±m ise en basit ÅŸekli ile conn1'den <strong>.loadFrom</strong> ile yÃ¼klemeye baÅŸla <strong>.emptyTo</strong> ile conn2 ve conn3 'teki boÅŸaltÄ±lacak yeri belirle ve <strong>.start</strong> ile iÅŸleme baÅŸla olarak dÃ¼ÅŸÃ¼nÃ¼lebilir. .<strong>loadFrom </strong>iÃ§erisindeki key â€˜ler verilerin ne ÅŸekilde Ã§ekileceÄŸini belirler.</p>\\n<pre>model       // Modelin ismi - string</pre>\\n<pre>schema      // Collection 'un Schema 'sÄ± - mongoose.Schema</pre>\\n<pre>query:      // Veri Ã§ekilirken kullanÄ±lacak query - object</pre>\\n<pre>populate:   // Veri Ã§ekilirken eklenecek iliÅŸkiler oluÅŸturulur .populate() methodu ile aynÄ± - object</pre>\\n<pre>skip:       // Veri Ã§ekilmeden N tane deÄŸer pas geÃ§ilir - .skip() methodu ile aynÄ± - number</pre>\\n<pre>sort:       // SÄ±ralama yapar - .sort() methodu ile aynÄ± - object</pre>\\n<pre>select:     // Veri Ã§ekilirken gelecek key'ler - .select() methodu ile aynÄ± - object / string</pre>\\n<pre>concurrent: // Veriyi Ã§ekerken kullanÄ±lacak sayfalandÄ±rma sabiti - number</pre>\\n<pre>limit:      // Toplam Ã§ekilecek veri miktarÄ± - .limit() methodu ile aynÄ± - number</pre>\\n<p>Birden fazla kaynaktan veri Ã§ekilerek de bu iÅŸlemler gerÃ§ekleÅŸtirilebilir. Ã–rneÄŸin: KullanÄ±cÄ± collection â€˜larÄ±m var birden fazla ben ikisini de kullanmak istiyorum. BaÅŸka bir Ã¶rnek olarak aynÄ± collection â€˜dan iki farklÄ± query kullanarak veri Ã§ekmek istiyorum. Bu durumda ise</p>\\n<pre>const parsedData = await MongooseTruck.create(conn1, [conn2, conn3]).loadFrom([{<br>        model: 'People',<br>        schema: PeopleSchema,<br>        query: {<br>            name: \\\"John\\\"<br>        },<br>        skip: 0,<br>        sort: {<br>            _id: -1<br>        },<br>        concurrent: 5,<br>        limit: 10<br>    },<br>    {<br>        model: 'People',<br>        schema: PeopleSchema,<br>        query: {<br>            name: \\\"Adam\\\"<br>        },<br>        populate: {<br>            path: 'stars'<br>        },<br>        skip: 1,<br>        sort: {<br>            _id: -1<br>        },<br>        select: \\\"_id name surname age\\\",<br>        concurrent: 3,<br>        limit: 20<br>    }<br>]).emptyTo({<br>    model: 'PersonsTests',<br>    schema: Person<br>}).start({<br>    parse: true<br>})<br>console.log(parsedData);</pre>\\n<p>GÃ¶rÃ¼ldÃ¼ÄŸÃ¼ gibi .<strong>loadFrom </strong>iÃ§erisine bir array alabilir. FarklÄ± collection â€˜lardaki verileri tek bir yere toplarken veya tek bir collection â€˜dan farklÄ± query â€™lerle veri Ã§ekilmek istenildiÄŸinde bu ÅŸekilde array haline getirilebilir.</p>\\n<p><strong>.start</strong> iÅŸlemi iÃ§erisine <strong>parse</strong> isimli bir key alÄ±r. Bu key ise veri geÃ§iÅŸleri tamamlandÄ±ÄŸÄ±nda verinin koda getirilip getirilmeyeceÄŸini belirler. <strong>parse:false </strong>olarak kullanÄ±lÄ±rsa boÅŸ array dÃ¶nÃ¼lÃ¼r.</p>\\n<p>Bu bÃ¶lÃ¼mde de authorâ€™u olduÄŸum mongoose kullanan <strong>Node.js</strong> uygulamalardaki iki veya daha Ã§ok MongoDb veritabanÄ± arasÄ±ndaki veri taÅŸÄ±manÄ±n kolay yolunu gÃ¶rmÃ¼ÅŸ bulunmaktayÄ±z. Paketin GitHub sayfasÄ±na ulaÅŸmak iÃ§in</p>\\n<p><a href=\\\"https://www.github.com/cangokceaslan/mongoose-truck\\\">GitHub - cangokceaslan/mongoose-truck: mongoose-truck is a Node.js package for handling with data transaction between different MongoDb clusters.</a></p>\\n<p>Npm sayfasÄ±:</p>\\n<p><a href=\\\"https://www.npmjs.com/package/mongoose-truck\\\">mongoose-truck</a></p>\\n<h3>HakkÄ±mda</h3>\\n<p>Ben Can GÃ¶kÃ§easlan, bu yazÄ±da sizlere kÄ±saca kendimi ve yaptÄ±klarÄ±mÄ± tanÄ±tacaÄŸÄ±m. BoÄŸaziÃ§i Ãœniversitesinden 2019 yÄ±lÄ±nda mezun oldum. Hemen ardÄ±ndan da <a href=\\\"https://www.barty.app/\\\">Barty</a> isimli giriÅŸimin kurucu ortaÄŸÄ± ve CTOâ€™su olarak kariyerime baÅŸladÄ±m. GiriÅŸimimizde <a href=\\\"https://webrazzi.com/arama/?q=barty\\\"><strong>2 baÅŸarÄ±lÄ± yatÄ±rÄ±m turunu</strong></a> yatÄ±rÄ±m tamamladÄ±k ve bugÃ¼n itibari ile ÅŸirketimiz 2 milyon dolar deÄŸerlemeye ulaÅŸtÄ±. GiriÅŸimimizin tÃ¼m Ã¼rÃ¼n geliÅŸtirme ve iÅŸ sÃ¼reÃ§lerinin iÃ§erisinde bizzat bulundum. Bu sebep ile kÄ±sa bir sÃ¼reÃ§ iÃ§erisinde Ã§ok deÄŸerli know-howâ€™lara ve bilgilere sahip oldum. Bunun yanÄ±nda bu aÅŸamalarÄ± dÃ¼zenli bir ÅŸekilde araÅŸtÄ±rmak ve geliÅŸtirmenin ne kadar Ã¶nemli olduÄŸunu kavradÄ±m.</p>\\n<h3>Udemy EÄŸitimlerim</h3>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/750/0*I1L1trE7p3TFC19-.jpeg\\\"></figure><p>KiÅŸisel merakÄ±m ve araÅŸtÄ±rma hevesim her seferinde beni rahatsÄ±z edecek bir konu buluyor. KeÅŸfettiÄŸim bilgileri ve know-howâ€™larÄ± insanlarla paylaÅŸmak benim iÃ§in bir hobidir. Bu hobiyi gerÃ§ekleÅŸtirebilmek iÃ§in bir yandan da <a href=\\\"https://www.cangokceaslan.com/social\\\"><strong>iÃ§erik Ã¼reticiliÄŸi</strong></a> yapÄ±yorum. Ã–zellikle <a href=\\\"https://www.udemy.com/user/cangokceaslan\\\"><strong>Udemy</strong></a> Ã¼zerinde paylaÅŸtÄ±ÄŸÄ±m kurslar sayesinde toplamda 40 bin kayÄ±t almÄ±ÅŸ bulunmaktayÄ±m. Bunu gÃ¼nÃ¼n birinde tÃ¼m dÃ¼nyadaki teknoloji ve yazÄ±lÄ±m ile ilgilenen insan topluluklarÄ±na yapabilmek benim yol haritamda ulaÅŸmak istediÄŸim en Ã¶nemli noktalardan birisidir.</p>\\n<p>En son Ã§Ä±kan video eÄŸitimlerime indirimli veya Ã¼cretsiz olarak ulaÅŸabilmek iÃ§in bu sayfayÄ± ziyaret edebilirsin.</p>\\n<p><a href=\\\"https://www.cangokceaslan.com/courses\\\">https://www.cangokceaslan.com/courses</a></p>\\n<p>Daha fazla yazÄ±ya ulaÅŸmak iÃ§in bu url â€˜i ziyaret edebilirsin.</p>\\n<p><a href=\\\"https://blog.cangokceaslan.com/\\\">https://blog.cangokceaslan.com</a></p>\\n<p>KiÅŸisel web sayfama ulaÅŸmak iÃ§in bu adresi ziyaret edebilirsin.</p>\\n<p><a href=\\\"https://www.cangokceaslan.com/\\\">https://www.cangokceaslan.com</a></p>\\n<p><strong>Sosyal Medya ve KiÅŸisel HesaplarÄ±m Ä°Ã§in:</strong></p>\\n<p><strong>Instagram:</strong> <a href=\\\"https://www.twitter.com/cangokceaslan\\\">https://www.twitter.com/cangokceaslan</a></p>\\n<p><strong>Twitter:</strong> <a href=\\\"https://www.instagram.com/cangokceaslan\\\">https://www.instagram.com/cangokceaslan</a></p>\\n<p><strong>Facebook: </strong><a href=\\\"https://www.facebook.com/cangokceaslan\\\">https://www.facebook.com/cangokceaslan</a></p>\\n<p><strong>Youtube</strong>: <a href=\\\"https://www.youtube.com/cangokceaslan\\\">https://www.youtube.com/cangokceaslan</a></p>\\n<p><strong>Twitch:</strong> <a href=\\\"https://www.twitch.tv/cangokceaslan\\\">https://www.twitch.tv/cangokceaslan</a></p>\\n<p>BÃ¼tÃ¼n hesaplar iÃ§in: <a href=\\\"https://www.cangokceaslan.com/sosyal\\\">https://www.cangokceaslan.com/sosyal</a></p>\\n<p><strong>Benimle bir gÃ¶rÃ¼ÅŸme planlamak iÃ§in:</strong></p>\\n<p>Superpeer: <a href=\\\"https://www.superpeer.com/cangokceaslan\\\">https://www.superpeer.com/cangokceaslan</a></p>\\n<h3>En son eÄŸitimim:</h3>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/750/0*CAPa7hhcjBDBpw4Y.jpeg\\\"></figure><h3>Node.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve Javascript</h3>\\n<p>Bu eÄŸitimde NodeJs â€˜e sÄ±fÄ±rdan bir giriÅŸ yapÄ±p eÄŸitimin sonunda aÃ§Ä±k kaynak kod yazma seviyesine ulaÅŸacaÄŸÄ±z.</p>\\n<p><strong>EÄŸitime UlaÅŸmak Ä°Ã§in: </strong><a href=\\\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&amp;couponCode=CANGOKCEASLAN\\\">Udemyâ€Šâ€”â€ŠNode.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve JavaScript</a></p>\\n<p>NodeJs, JavaScript, BabelJS, ExpressJs, PM2 gibi paketlerin kullanÄ±mlarÄ±nÄ± saÄŸlayacaÄŸÄ±z. NPM Ã¼zerinden kodlarÄ±mÄ±zÄ± aÃ§Ä±k kaynak hale getirip bunlarÄ± kendi projelerimiz Ã¼stÃ¼nde kullanabileceÄŸiz.</p>\\n<p>Bu sayede bir paketi belki de onlarca projede kullanÄ±rken tek bir yerden yÃ¶netmeyi saÄŸlayacaÄŸÄ±z.</p>\\n<p>JavaScriptâ€™in ES5, ES6, ES7, ES8 vb. gibi gelen deÄŸiÅŸikliklerin NodeJs tarafÄ±nda nasÄ±l kullanacaÄŸÄ±mÄ±zÄ± da Ã¶ÄŸreneceÄŸiz.</p>\\n<p>NodeJs insanlar iÃ§in Ã§oÄŸu zaman kafa karÄ±ÅŸtÄ±rÄ±cÄ± olabiliyor bunun temel sebebini de JavaScriptâ€™in kullanÄ±m alanÄ±ndaki geniÅŸlikle aÃ§Ä±klayabiliriz.</p>\\n<p>Bu eÄŸitimde NodeJs ile ilgili kÄ±sÄ±mlarda kafanÄ±zdaki oluÅŸabilecek karÄ±ÅŸÄ±klÄ±klarÄ± da gidermeyi amaÃ§ladÄ±m.</p>\\n<p><strong>NodeJs </strong>Ã§oÄŸu zaman bir dil olarak nitelendiriliyor fakat bunun bÃ¶yle olmadÄ±ÄŸÄ±nÄ± Ã§ok iyi biliyoruz. Ã‡Ã¼nkÃ¼ NodeJs aslÄ±nda bir Ã§alÄ±ÅŸma ortamÄ±dÄ±r. Bu Ã§alÄ±ÅŸma ortamÄ± <strong>Google v8 javascript</strong> motorunu kullanmaktadÄ±r. Bu sebep ile <strong>NodeJs </strong>kendi iÃ§erisinde JavaScript Ã§alÄ±ÅŸtÄ±rabiliyor. Bu bir kazan kazan durumu Ã§Ã¼nkÃ¼ JavaScriptâ€™i bilgisayar terminalinde Ã§alÄ±ÅŸtÄ±rabilecek herhangi bir araÃ§ bulunmuyordu. NodeJs javascriptâ€™i bilgisayar terminalinde Ã§alÄ±ÅŸtÄ±rarak <strong>JavaScript</strong>â€™e ayrÄ± bir boyut kazandÄ±rdÄ±. Bunun yanÄ±nda Google v8 motorunun sadece tarayÄ±cÄ±lar iÃ§in deÄŸil bilgisayarlar iÃ§in kullanÄ±lmasÄ±nÄ±n Ã¶nÃ¼ de aÃ§Ä±ldÄ±. Bu sayede hem <strong>JavaScript </strong>tarayÄ±cÄ± ve bilgisayar terminalinde Ã§alÄ±ÅŸabildi hem de <strong>JavaScript </strong>iÃ§in daha Ã¶ncesinde geliÅŸtirilmiÅŸ kodlar hÄ±zlÄ±ca NodeJsâ€™e entegre edilebildi. Bu sayede kodlarÄ±mÄ±z hem Ã¶n yÃ¼zde hem de arka yÃ¼zde benzer ÅŸekilde Ã§alÄ±ÅŸabileceÄŸi bir hale gelmiÅŸ oldu. Bu bir Ã§ok ÅŸirket iÃ§in hÄ±zlÄ± geliÅŸtirme anlamÄ±na gelmektedir.</p>\\n<p><strong>EÄŸitime UlaÅŸmak Ä°Ã§in: </strong><a href=\\\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&amp;couponCode=CANGOKCEASLAN\\\">Udemyâ€Šâ€”â€ŠNode.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve JavaScript</a></p>\\n<h3>Ã–ÄŸrenecekleriniz</h3>\\n<ul>\\n<li>NodeJs ile kod yazmayÄ±</li>\\n<li>NodeJs kullanarak aÃ§Ä±k kaynak kod oluÅŸturmayÄ±</li>\\n<li>JavaScriptâ€™in temellerini</li>\\n<li>En Ã¶nemli NodeJs kÃ¼tÃ¼phanelerini</li>\\n<li>NodeJs ile sunucu yazmayÄ±</li>\\n<li>NodeJs ve JavaScriptâ€™in son Ã¶zelliklerini</li>\\n<li>NodeJs nedir</li>\\n<li>JavaScriptâ€™in en Ã¶nemli Ã¶zellikleri nedir</li>\\n<li>Neden NodeJs en Ã¶nemli sunucu ortamÄ±dÄ±r</li>\\n<li>NodeJsâ€™in avantajlarÄ±</li>\\n<li>NodeJsâ€™in dezavantajlarÄ±</li>\\n<li>JavaScript tarafÄ±ndaki karmaÅŸÄ±klÄ±klardan kurtulmayÄ±</li>\\n<li>BabelJsâ€™in kullanÄ±mÄ±nÄ±</li>\\n<li>BabelJs ile transpile iÅŸlemi</li>\\n<li>BabelJs ile compile iÅŸlemi</li>\\n<li>npm paket yÃ¼kleyicisinin tÃ¼m Ã¶zelliklerini</li>\\n<li>Express sunucu Ã§atÄ±sÄ±nÄ±n nasÄ±l Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ±</li>\\n<li>Express sunucu Ã§atÄ±sÄ±nÄ±n nasÄ±l dÃ¼zenlendiÄŸini</li>\\n<li>Express sunucu Ã§atÄ±ÅŸÄ± iÃ§in Ã¶zelleÅŸtirilmiÅŸ ara katman yazÄ±lÄ±mlarÄ±nÄ±</li>\\n<li>Express sunucu Ã§atÄ±sÄ±na ekstra modÃ¼l yazÄ±lÄ±mÄ±nÄ±</li>\\n<li>ExpressJs Ã¼zerine eklenebilecek ekstra modÃ¼lleri</li>\\n<li>ExpressJs ile en hÄ±zlÄ± geliÅŸtirmelerin nasÄ±l yapÄ±lacaÄŸÄ±</li>\\n</ul>\\n<p><strong>EÄŸitime UlaÅŸmak Ä°Ã§in: </strong><a href=\\\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&amp;couponCode=CANGOKCEASLAN\\\">Udemyâ€Šâ€”â€ŠNode.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve JavaScript</a></p>\\n<h3>Bu kurs kimler iÃ§in uygun:</h3>\\n<ul>\\n<li>YazÄ±lÄ±ma ilgi duyan kiÅŸiler</li>\\n<li>JavaScript Ã¶ÄŸrenmek isteyen kiÅŸiler</li>\\n<li>JavaScript geliÅŸtiricileri</li>\\n<li>NodeJs Ã¼zerinde geliÅŸtirme yapmak isteyenler</li>\\n<li>NodeJs ile Ã§alÄ±ÅŸan kiÅŸiler</li>\\n<li>JavaScript Ã¼zerinde geliÅŸtirme yapan kiÅŸiler</li>\\n<li>NodeJsâ€™i Ã¶ÄŸrenmek isteyen kiÅŸiler</li>\\n<li>Babelâ€™i Ã¶ÄŸrenmek isteyen kiÅŸiler</li>\\n<li>JavaScriptâ€™ten kafasÄ± karÄ±ÅŸan kiÅŸiler</li>\\n<li>NodeJs kÃ¼tÃ¼phanelerini Ã¶ÄŸrenmek isteyenler</li>\\n<li>AÃ§Ä±k kaynak kod yazmak isteyenler</li>\\n<li>ExpressJS Ã¶ÄŸrenmek isteyenler</li>\\n<li>BabelJS Ã–ÄŸrenmek isteyenler</li>\\n</ul>\\n<p><strong>EÄŸitime UlaÅŸmak Ä°Ã§in: </strong><a href=\\\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&amp;couponCode=CANGOKCEASLAN\\\">Udemyâ€Šâ€”â€ŠNode.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve JavaScript</a></p>\\n<img src=\\\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=fd0cc620d36a\\\" width=\\\"1\\\" height=\\\"1\\\" alt=\\\"\\\">\\n\",\r\n\"content\": \"\\n<h3>Node.jsâ€Šâ€”â€Š<strong>MongoDb</strong> veritabanÄ±ndaki bir collection â€˜dan diÄŸer MongoDb veritabanlarÄ±na veri taÅŸÄ±mak (mongoose &amp; mongoose-truck)</h3>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/1024/1*qQwwv7aYYcjY1q42pOzPFw.jpeg\\\"></figure><p>Merhabalar sayÄ±n okucular, bugÃ¼n sizlere yeni aÃ§Ä±k kaynak kodlu projemi anlatmak istiyorum. Ã–ncelikle bu projenin nasÄ±l Ã§Ä±ktÄ±ÄŸÄ±ndan bahsetmem gerekiyor. Proje tam olarak bir Ã¼rÃ¼n MongoDb veritabanÄ±ndan belirli bir veri setini baÅŸka bir test, geliÅŸtirme veritabanÄ±na veri taÅŸÄ±rken yaÅŸadÄ±ÄŸÄ±m stresten ortaya Ã§Ä±ktÄ±. Elimde bir <strong>MongoDb</strong> baÄŸlantÄ± textâ€™i vardÄ±. Buna MongoSh ile baÄŸlanÄ±p her seferinde sayfalandÄ±rma iÃ§in gerekli olan script â€™leri ekrana yapÄ±ÅŸtÄ±rmam gerekiyordu. Bunun yerine bir <strong>Node.js</strong> scriptâ€™i ile bunu Ã§Ã¶zebileceÄŸimi bilirken bunu yapmak gereksiz bir ÅŸeydi. Sonra spesifik bir <strong>Schema</strong> Ã¼zerinde Ã§alÄ±ÅŸan bir model devreye aldÄ±m fakat bunu her Schema iÃ§in tekrar etmem gerekiyordu. Buna ek olarak Ã¼rÃ¼n <strong>mongoose.connect</strong> kullanÄ±yordu bu da kodu herhangi bir routeâ€™a baÄŸladÄ±ÄŸÄ±mda veya Ã¼rÃ¼nÃ¼n herhangi bir yerinde Ã§alÄ±ÅŸtÄ±rdÄ±ÄŸÄ±mda mongoose bana hata verecekti. Ã‡Ã¼nkÃ¼ ayrÄ± bir script dosyasÄ± kullanÄ±lmazsa aynÄ± <strong>Schema</strong> Ã¼zerinden yeni bir model baÅŸlatÄ±lÄ±nca mongoose sana bir engel oluÅŸturur.</p>\\n<p>Ben de <strong>MongoDb</strong> â€™lere dinamik ÅŸekilde baÄŸlantÄ± oluÅŸturacak bir paket ve baÄŸlantÄ±yÄ± gerÃ§ekleÅŸtirecek bir modÃ¼l oluÅŸturdum. Bu modÃ¼l baÄŸlantÄ± string â€˜ini alÄ±r ve size iÃ§erisinde dependency olarak bulunan mongoose Ã¼zerinden bir veritabanÄ± baÄŸlantÄ±sÄ± dÃ¶ner. Bu baÄŸlantÄ±larÄ± kullanarak <strong>Schema</strong> â€™lar Ã¼zerinden dinamik <strong>modeller</strong> oluÅŸturulur. Veri taÅŸÄ±ma iÅŸlemi bu <strong>dinamik modeller</strong> Ã¼zerinden gerÃ§ekleÅŸtir. Tabii ki bu yapÄ±yÄ± kafamda oturtmak benim iÃ§in uzun bir sÃ¼re (2 gÃ¼n ðŸ™ƒ ) aldÄ±.</p>\\n<p>ModÃ¼lÃ¼ 1 gÃ¼n iÃ§inde yazmayÄ± becerebildim ve kendisi ÅŸu anda hem <a href=\\\"https://www.github.com/cangokceaslan/mongoose-truck\\\"><strong>GitHub</strong></a><strong> registry</strong> hem de <a href=\\\"https://www.npmjs.com/package/mongoose-truck\\\"><strong>npm</strong> <strong>registry</strong></a> Ã¼zerinde aÃ§Ä±k kaynak kod ve paket olarak bulunmaktadÄ±r. Buna ek olarak bu modÃ¼l Ã¼zerinde Ã§alÄ±ÅŸmak istediÄŸim ve farklÄ± multi-threaded iÅŸlemler iÃ§in geliÅŸtirmeler bazÄ± geliÅŸtirmeler var. BunlarÄ± da <a href=\\\"https://github.com/cangokceaslan/mongoose-truck/projects/1\\\"><strong>GitHub projeler</strong></a> Ã¶zelliÄŸini kullanarak herkesin gÃ¶rmesini saÄŸlamak istiyorum.</p>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/1000/1*isAY-FwBJqZpTnDzQv1mBg.jpeg\\\"></figure><p>Åžimdi birazcÄ±k paketin nasÄ±l Ã§alÄ±ÅŸtÄ±ÄŸÄ±ndan bahsetmek istiyorum. Paket genel olarak bir yÃ¼kÃ¼n bir kamyonla taÅŸÄ±nmasÄ± gibi bir analoji kullanÄ±yor. Ã–nce <strong>kaynak</strong> ve <strong>hedef</strong> noktalarla baÄŸlantÄ± kuruluyor. Daha sonrasÄ±nda kaynaktan yÃ¼k yÃ¼kleme iÅŸlemi iÃ§in direktifler veriliyor. Bundan hemen sonra yÃ¼kÃ¼n hedef noktalara nasÄ±l dÃ¶kÃ¼leceÄŸi ile ilgili direktifler veriliyor ve iÅŸlemler baÅŸlatÄ±lÄ±yor.</p>\\n<p>Ä°lk olarak modÃ¼lÃ¼ npm ile yÃ¼klememiz gerekiyor</p>\\n<blockquote>npm i mongoose-truck</blockquote>\\n<pre>const MongooseTruck = require(\\\"mongoose-truck\\\")</pre>\\n<pre>const conn1 = await MongooseTruck.connect(\\\"database_connection_string\\\"),<br>        conn2 = await MongooseTruck.connect(\\\"database_connection_string\\\"),<br>        conn3 = await MongooseTruck.connect(\\\"database_connection_string\\\");</pre>\\n<p>YukarÄ±daki kodda paketi Ã§aÄŸÄ±rÄ±yoruz. <strong>conn1</strong> bizim iÃ§in kaynak baÄŸlantÄ±sÄ±nÄ± sembolize ediyor. <strong>conn2</strong> ve <strong>conn3</strong> ise yÃ¼kÃ¼ boÅŸaltacaÄŸÄ±mÄ±z noktalarÄ± temsil etmektedir</p>\\n<pre>const parsedData = await MongooseTruck.create(conn1, [conn2, conn3]).loadFrom({<br>    model: 'People',<br>    schema: PeopleSchema,<br>    query: {<br>        name: \\\"John\\\"<br>    },<br>    populate: {<br>        path: 'stars'<br>    },<br>    skip: 0,<br>    sort: {<br>        _id: -1<br>    },<br>    select: \\\"_id name surname age\\\",<br>    concurrent: 20,<br>    limit: 100<br>}).emptyTo({<br>    model: 'People',<br>    schema: PeopleSchema<br>}).start({<br>    parse: true<br>})<br><br>console.log(parsedData);</pre>\\n<p>Bu kÄ±sÄ±m ise en basit ÅŸekli ile conn1'den <strong>.loadFrom</strong> ile yÃ¼klemeye baÅŸla <strong>.emptyTo</strong> ile conn2 ve conn3 'teki boÅŸaltÄ±lacak yeri belirle ve <strong>.start</strong> ile iÅŸleme baÅŸla olarak dÃ¼ÅŸÃ¼nÃ¼lebilir. .<strong>loadFrom </strong>iÃ§erisindeki key â€˜ler verilerin ne ÅŸekilde Ã§ekileceÄŸini belirler.</p>\\n<pre>model       // Modelin ismi - string</pre>\\n<pre>schema      // Collection 'un Schema 'sÄ± - mongoose.Schema</pre>\\n<pre>query:      // Veri Ã§ekilirken kullanÄ±lacak query - object</pre>\\n<pre>populate:   // Veri Ã§ekilirken eklenecek iliÅŸkiler oluÅŸturulur .populate() methodu ile aynÄ± - object</pre>\\n<pre>skip:       // Veri Ã§ekilmeden N tane deÄŸer pas geÃ§ilir - .skip() methodu ile aynÄ± - number</pre>\\n<pre>sort:       // SÄ±ralama yapar - .sort() methodu ile aynÄ± - object</pre>\\n<pre>select:     // Veri Ã§ekilirken gelecek key'ler - .select() methodu ile aynÄ± - object / string</pre>\\n<pre>concurrent: // Veriyi Ã§ekerken kullanÄ±lacak sayfalandÄ±rma sabiti - number</pre>\\n<pre>limit:      // Toplam Ã§ekilecek veri miktarÄ± - .limit() methodu ile aynÄ± - number</pre>\\n<p>Birden fazla kaynaktan veri Ã§ekilerek de bu iÅŸlemler gerÃ§ekleÅŸtirilebilir. Ã–rneÄŸin: KullanÄ±cÄ± collection â€˜larÄ±m var birden fazla ben ikisini de kullanmak istiyorum. BaÅŸka bir Ã¶rnek olarak aynÄ± collection â€˜dan iki farklÄ± query kullanarak veri Ã§ekmek istiyorum. Bu durumda ise</p>\\n<pre>const parsedData = await MongooseTruck.create(conn1, [conn2, conn3]).loadFrom([{<br>        model: 'People',<br>        schema: PeopleSchema,<br>        query: {<br>            name: \\\"John\\\"<br>        },<br>        skip: 0,<br>        sort: {<br>            _id: -1<br>        },<br>        concurrent: 5,<br>        limit: 10<br>    },<br>    {<br>        model: 'People',<br>        schema: PeopleSchema,<br>        query: {<br>            name: \\\"Adam\\\"<br>        },<br>        populate: {<br>            path: 'stars'<br>        },<br>        skip: 1,<br>        sort: {<br>            _id: -1<br>        },<br>        select: \\\"_id name surname age\\\",<br>        concurrent: 3,<br>        limit: 20<br>    }<br>]).emptyTo({<br>    model: 'PersonsTests',<br>    schema: Person<br>}).start({<br>    parse: true<br>})<br>console.log(parsedData);</pre>\\n<p>GÃ¶rÃ¼ldÃ¼ÄŸÃ¼ gibi .<strong>loadFrom </strong>iÃ§erisine bir array alabilir. FarklÄ± collection â€˜lardaki verileri tek bir yere toplarken veya tek bir collection â€˜dan farklÄ± query â€™lerle veri Ã§ekilmek istenildiÄŸinde bu ÅŸekilde array haline getirilebilir.</p>\\n<p><strong>.start</strong> iÅŸlemi iÃ§erisine <strong>parse</strong> isimli bir key alÄ±r. Bu key ise veri geÃ§iÅŸleri tamamlandÄ±ÄŸÄ±nda verinin koda getirilip getirilmeyeceÄŸini belirler. <strong>parse:false </strong>olarak kullanÄ±lÄ±rsa boÅŸ array dÃ¶nÃ¼lÃ¼r.</p>\\n<p>Bu bÃ¶lÃ¼mde de authorâ€™u olduÄŸum mongoose kullanan <strong>Node.js</strong> uygulamalardaki iki veya daha Ã§ok MongoDb veritabanÄ± arasÄ±ndaki veri taÅŸÄ±manÄ±n kolay yolunu gÃ¶rmÃ¼ÅŸ bulunmaktayÄ±z. Paketin GitHub sayfasÄ±na ulaÅŸmak iÃ§in</p>\\n<p><a href=\\\"https://www.github.com/cangokceaslan/mongoose-truck\\\">GitHub - cangokceaslan/mongoose-truck: mongoose-truck is a Node.js package for handling with data transaction between different MongoDb clusters.</a></p>\\n<p>Npm sayfasÄ±:</p>\\n<p><a href=\\\"https://www.npmjs.com/package/mongoose-truck\\\">mongoose-truck</a></p>\\n<h3>HakkÄ±mda</h3>\\n<p>Ben Can GÃ¶kÃ§easlan, bu yazÄ±da sizlere kÄ±saca kendimi ve yaptÄ±klarÄ±mÄ± tanÄ±tacaÄŸÄ±m. BoÄŸaziÃ§i Ãœniversitesinden 2019 yÄ±lÄ±nda mezun oldum. Hemen ardÄ±ndan da <a href=\\\"https://www.barty.app/\\\">Barty</a> isimli giriÅŸimin kurucu ortaÄŸÄ± ve CTOâ€™su olarak kariyerime baÅŸladÄ±m. GiriÅŸimimizde <a href=\\\"https://webrazzi.com/arama/?q=barty\\\"><strong>2 baÅŸarÄ±lÄ± yatÄ±rÄ±m turunu</strong></a> yatÄ±rÄ±m tamamladÄ±k ve bugÃ¼n itibari ile ÅŸirketimiz 2 milyon dolar deÄŸerlemeye ulaÅŸtÄ±. GiriÅŸimimizin tÃ¼m Ã¼rÃ¼n geliÅŸtirme ve iÅŸ sÃ¼reÃ§lerinin iÃ§erisinde bizzat bulundum. Bu sebep ile kÄ±sa bir sÃ¼reÃ§ iÃ§erisinde Ã§ok deÄŸerli know-howâ€™lara ve bilgilere sahip oldum. Bunun yanÄ±nda bu aÅŸamalarÄ± dÃ¼zenli bir ÅŸekilde araÅŸtÄ±rmak ve geliÅŸtirmenin ne kadar Ã¶nemli olduÄŸunu kavradÄ±m.</p>\\n<h3>Udemy EÄŸitimlerim</h3>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/750/0*I1L1trE7p3TFC19-.jpeg\\\"></figure><p>KiÅŸisel merakÄ±m ve araÅŸtÄ±rma hevesim her seferinde beni rahatsÄ±z edecek bir konu buluyor. KeÅŸfettiÄŸim bilgileri ve know-howâ€™larÄ± insanlarla paylaÅŸmak benim iÃ§in bir hobidir. Bu hobiyi gerÃ§ekleÅŸtirebilmek iÃ§in bir yandan da <a href=\\\"https://www.cangokceaslan.com/social\\\"><strong>iÃ§erik Ã¼reticiliÄŸi</strong></a> yapÄ±yorum. Ã–zellikle <a href=\\\"https://www.udemy.com/user/cangokceaslan\\\"><strong>Udemy</strong></a> Ã¼zerinde paylaÅŸtÄ±ÄŸÄ±m kurslar sayesinde toplamda 40 bin kayÄ±t almÄ±ÅŸ bulunmaktayÄ±m. Bunu gÃ¼nÃ¼n birinde tÃ¼m dÃ¼nyadaki teknoloji ve yazÄ±lÄ±m ile ilgilenen insan topluluklarÄ±na yapabilmek benim yol haritamda ulaÅŸmak istediÄŸim en Ã¶nemli noktalardan birisidir.</p>\\n<p>En son Ã§Ä±kan video eÄŸitimlerime indirimli veya Ã¼cretsiz olarak ulaÅŸabilmek iÃ§in bu sayfayÄ± ziyaret edebilirsin.</p>\\n<p><a href=\\\"https://www.cangokceaslan.com/courses\\\">https://www.cangokceaslan.com/courses</a></p>\\n<p>Daha fazla yazÄ±ya ulaÅŸmak iÃ§in bu url â€˜i ziyaret edebilirsin.</p>\\n<p><a href=\\\"https://blog.cangokceaslan.com/\\\">https://blog.cangokceaslan.com</a></p>\\n<p>KiÅŸisel web sayfama ulaÅŸmak iÃ§in bu adresi ziyaret edebilirsin.</p>\\n<p><a href=\\\"https://www.cangokceaslan.com/\\\">https://www.cangokceaslan.com</a></p>\\n<p><strong>Sosyal Medya ve KiÅŸisel HesaplarÄ±m Ä°Ã§in:</strong></p>\\n<p><strong>Instagram:</strong> <a href=\\\"https://www.twitter.com/cangokceaslan\\\">https://www.twitter.com/cangokceaslan</a></p>\\n<p><strong>Twitter:</strong> <a href=\\\"https://www.instagram.com/cangokceaslan\\\">https://www.instagram.com/cangokceaslan</a></p>\\n<p><strong>Facebook: </strong><a href=\\\"https://www.facebook.com/cangokceaslan\\\">https://www.facebook.com/cangokceaslan</a></p>\\n<p><strong>Youtube</strong>: <a href=\\\"https://www.youtube.com/cangokceaslan\\\">https://www.youtube.com/cangokceaslan</a></p>\\n<p><strong>Twitch:</strong> <a href=\\\"https://www.twitch.tv/cangokceaslan\\\">https://www.twitch.tv/cangokceaslan</a></p>\\n<p>BÃ¼tÃ¼n hesaplar iÃ§in: <a href=\\\"https://www.cangokceaslan.com/sosyal\\\">https://www.cangokceaslan.com/sosyal</a></p>\\n<p><strong>Benimle bir gÃ¶rÃ¼ÅŸme planlamak iÃ§in:</strong></p>\\n<p>Superpeer: <a href=\\\"https://www.superpeer.com/cangokceaslan\\\">https://www.superpeer.com/cangokceaslan</a></p>\\n<h3>En son eÄŸitimim:</h3>\\n<figure><img alt=\\\"\\\" src=\\\"https://cdn-images-1.medium.com/max/750/0*CAPa7hhcjBDBpw4Y.jpeg\\\"></figure><h3>Node.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve Javascript</h3>\\n<p>Bu eÄŸitimde NodeJs â€˜e sÄ±fÄ±rdan bir giriÅŸ yapÄ±p eÄŸitimin sonunda aÃ§Ä±k kaynak kod yazma seviyesine ulaÅŸacaÄŸÄ±z.</p>\\n<p><strong>EÄŸitime UlaÅŸmak Ä°Ã§in: </strong><a href=\\\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&amp;couponCode=CANGOKCEASLAN\\\">Udemyâ€Šâ€”â€ŠNode.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve JavaScript</a></p>\\n<p>NodeJs, JavaScript, BabelJS, ExpressJs, PM2 gibi paketlerin kullanÄ±mlarÄ±nÄ± saÄŸlayacaÄŸÄ±z. NPM Ã¼zerinden kodlarÄ±mÄ±zÄ± aÃ§Ä±k kaynak hale getirip bunlarÄ± kendi projelerimiz Ã¼stÃ¼nde kullanabileceÄŸiz.</p>\\n<p>Bu sayede bir paketi belki de onlarca projede kullanÄ±rken tek bir yerden yÃ¶netmeyi saÄŸlayacaÄŸÄ±z.</p>\\n<p>JavaScriptâ€™in ES5, ES6, ES7, ES8 vb. gibi gelen deÄŸiÅŸikliklerin NodeJs tarafÄ±nda nasÄ±l kullanacaÄŸÄ±mÄ±zÄ± da Ã¶ÄŸreneceÄŸiz.</p>\\n<p>NodeJs insanlar iÃ§in Ã§oÄŸu zaman kafa karÄ±ÅŸtÄ±rÄ±cÄ± olabiliyor bunun temel sebebini de JavaScriptâ€™in kullanÄ±m alanÄ±ndaki geniÅŸlikle aÃ§Ä±klayabiliriz.</p>\\n<p>Bu eÄŸitimde NodeJs ile ilgili kÄ±sÄ±mlarda kafanÄ±zdaki oluÅŸabilecek karÄ±ÅŸÄ±klÄ±klarÄ± da gidermeyi amaÃ§ladÄ±m.</p>\\n<p><strong>NodeJs </strong>Ã§oÄŸu zaman bir dil olarak nitelendiriliyor fakat bunun bÃ¶yle olmadÄ±ÄŸÄ±nÄ± Ã§ok iyi biliyoruz. Ã‡Ã¼nkÃ¼ NodeJs aslÄ±nda bir Ã§alÄ±ÅŸma ortamÄ±dÄ±r. Bu Ã§alÄ±ÅŸma ortamÄ± <strong>Google v8 javascript</strong> motorunu kullanmaktadÄ±r. Bu sebep ile <strong>NodeJs </strong>kendi iÃ§erisinde JavaScript Ã§alÄ±ÅŸtÄ±rabiliyor. Bu bir kazan kazan durumu Ã§Ã¼nkÃ¼ JavaScriptâ€™i bilgisayar terminalinde Ã§alÄ±ÅŸtÄ±rabilecek herhangi bir araÃ§ bulunmuyordu. NodeJs javascriptâ€™i bilgisayar terminalinde Ã§alÄ±ÅŸtÄ±rarak <strong>JavaScript</strong>â€™e ayrÄ± bir boyut kazandÄ±rdÄ±. Bunun yanÄ±nda Google v8 motorunun sadece tarayÄ±cÄ±lar iÃ§in deÄŸil bilgisayarlar iÃ§in kullanÄ±lmasÄ±nÄ±n Ã¶nÃ¼ de aÃ§Ä±ldÄ±. Bu sayede hem <strong>JavaScript </strong>tarayÄ±cÄ± ve bilgisayar terminalinde Ã§alÄ±ÅŸabildi hem de <strong>JavaScript </strong>iÃ§in daha Ã¶ncesinde geliÅŸtirilmiÅŸ kodlar hÄ±zlÄ±ca NodeJsâ€™e entegre edilebildi. Bu sayede kodlarÄ±mÄ±z hem Ã¶n yÃ¼zde hem de arka yÃ¼zde benzer ÅŸekilde Ã§alÄ±ÅŸabileceÄŸi bir hale gelmiÅŸ oldu. Bu bir Ã§ok ÅŸirket iÃ§in hÄ±zlÄ± geliÅŸtirme anlamÄ±na gelmektedir.</p>\\n<p><strong>EÄŸitime UlaÅŸmak Ä°Ã§in: </strong><a href=\\\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&amp;couponCode=CANGOKCEASLAN\\\">Udemyâ€Šâ€”â€ŠNode.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve JavaScript</a></p>\\n<h3>Ã–ÄŸrenecekleriniz</h3>\\n<ul>\\n<li>NodeJs ile kod yazmayÄ±</li>\\n<li>NodeJs kullanarak aÃ§Ä±k kaynak kod oluÅŸturmayÄ±</li>\\n<li>JavaScriptâ€™in temellerini</li>\\n<li>En Ã¶nemli NodeJs kÃ¼tÃ¼phanelerini</li>\\n<li>NodeJs ile sunucu yazmayÄ±</li>\\n<li>NodeJs ve JavaScriptâ€™in son Ã¶zelliklerini</li>\\n<li>NodeJs nedir</li>\\n<li>JavaScriptâ€™in en Ã¶nemli Ã¶zellikleri nedir</li>\\n<li>Neden NodeJs en Ã¶nemli sunucu ortamÄ±dÄ±r</li>\\n<li>NodeJsâ€™in avantajlarÄ±</li>\\n<li>NodeJsâ€™in dezavantajlarÄ±</li>\\n<li>JavaScript tarafÄ±ndaki karmaÅŸÄ±klÄ±klardan kurtulmayÄ±</li>\\n<li>BabelJsâ€™in kullanÄ±mÄ±nÄ±</li>\\n<li>BabelJs ile transpile iÅŸlemi</li>\\n<li>BabelJs ile compile iÅŸlemi</li>\\n<li>npm paket yÃ¼kleyicisinin tÃ¼m Ã¶zelliklerini</li>\\n<li>Express sunucu Ã§atÄ±sÄ±nÄ±n nasÄ±l Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ±</li>\\n<li>Express sunucu Ã§atÄ±sÄ±nÄ±n nasÄ±l dÃ¼zenlendiÄŸini</li>\\n<li>Express sunucu Ã§atÄ±ÅŸÄ± iÃ§in Ã¶zelleÅŸtirilmiÅŸ ara katman yazÄ±lÄ±mlarÄ±nÄ±</li>\\n<li>Express sunucu Ã§atÄ±sÄ±na ekstra modÃ¼l yazÄ±lÄ±mÄ±nÄ±</li>\\n<li>ExpressJs Ã¼zerine eklenebilecek ekstra modÃ¼lleri</li>\\n<li>ExpressJs ile en hÄ±zlÄ± geliÅŸtirmelerin nasÄ±l yapÄ±lacaÄŸÄ±</li>\\n</ul>\\n<p><strong>EÄŸitime UlaÅŸmak Ä°Ã§in: </strong><a href=\\\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&amp;couponCode=CANGOKCEASLAN\\\">Udemyâ€Šâ€”â€ŠNode.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve JavaScript</a></p>\\n<h3>Bu kurs kimler iÃ§in uygun:</h3>\\n<ul>\\n<li>YazÄ±lÄ±ma ilgi duyan kiÅŸiler</li>\\n<li>JavaScript Ã¶ÄŸrenmek isteyen kiÅŸiler</li>\\n<li>JavaScript geliÅŸtiricileri</li>\\n<li>NodeJs Ã¼zerinde geliÅŸtirme yapmak isteyenler</li>\\n<li>NodeJs ile Ã§alÄ±ÅŸan kiÅŸiler</li>\\n<li>JavaScript Ã¼zerinde geliÅŸtirme yapan kiÅŸiler</li>\\n<li>NodeJsâ€™i Ã¶ÄŸrenmek isteyen kiÅŸiler</li>\\n<li>Babelâ€™i Ã¶ÄŸrenmek isteyen kiÅŸiler</li>\\n<li>JavaScriptâ€™ten kafasÄ± karÄ±ÅŸan kiÅŸiler</li>\\n<li>NodeJs kÃ¼tÃ¼phanelerini Ã¶ÄŸrenmek isteyenler</li>\\n<li>AÃ§Ä±k kaynak kod yazmak isteyenler</li>\\n<li>ExpressJS Ã¶ÄŸrenmek isteyenler</li>\\n<li>BabelJS Ã–ÄŸrenmek isteyenler</li>\\n</ul>\\n<p><strong>EÄŸitime UlaÅŸmak Ä°Ã§in: </strong><a href=\\\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&amp;couponCode=CANGOKCEASLAN\\\">Udemyâ€Šâ€”â€ŠNode.js EÄŸitimiâ€Šâ€”â€ŠSÄ±fÄ±rdan Profesyonele NodeJs ve JavaScript</a></p>\\n<img src=\\\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=fd0cc620d36a\\\" width=\\\"1\\\" height=\\\"1\\\" alt=\\\"\\\">\\n` }}>\r\n\r\n                                    </article>\r\n                                </div>\r\n                                <div className='col-lg-4 col-12 side-container'>\r\n                                    {(exampleData.suggestedPosts || []).map((post, index) => {\r\n                                        return (\r\n                                            <div className=\"post-card\">\r\n                                                <div className='image-container'>\r\n                                                    <img src={exampleData.cover} width=\"100%\" alt=\"\" />\r\n                                                </div>\r\n                                                <div className='title-container'>\r\n                                                    <h4>{exampleData?.title}</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <NewCourse />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogPost;","import React from 'react';\r\nimport globalStyles from '@common/style';\r\nimport courses from '@data/courses';\r\n\r\nimport '@components/NewCourse/index.scss';\r\n\r\n//TYPES\r\nimport { CourseType } from '@data/interfaces/courses.interfaces';\r\nconst NewCourseData: CourseType = courses[0];\r\nclass NewCourse extends React.Component {\r\n    videoWidth = '350px';\r\n    videoHeight = '200px';\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoWidth = window.innerWidth < 500 ? \"350px\" : \"430px\";\r\n        this.videoHeight = window.innerWidth < 500 ? \"200px\" : \"248px\";\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"middle-content\" style={{\r\n                background: NewCourseData?.primaryColor || \"#215733\",\r\n                padding: \"10px 0px 10px 0px\"\r\n            }}>\r\n                <div className=\"container\" style={{ minHeight: \"300px\" }}>\r\n                    <div className=\"row\" style={{\r\n                        minHeight: \"300px\"\r\n                    }}>\r\n                        <div className=\"col-lg-7 col-md-12\" style={{ padding: \"20px 20px\" }}>\r\n                            <div className=\"d-flex align-items-center justify-content-start\"\r\n                                style={{\r\n                                    minHeight: \"300px\",\r\n                                    maxWidth: \"100%\"\r\n                                }}>\r\n                                <div style={{\r\n                                    color: \"white\",\r\n                                    fontSize: \"30px\",\r\n                                    fontFamily: 'inherit',\r\n                                    fontWeight: \"bolder\"\r\n                                }}>\r\n                                    <div style={{\r\n                                        color: \"black\",\r\n                                        backgroundColor: \"white\",\r\n                                        width: \"100px\",\r\n                                        fontSize: \"15px\",\r\n                                        textAlign: \"center\",\r\n                                        marginBottom: \"10px\"\r\n                                    }}>Yeni EÄŸitim</div>\r\n                                    <div style={{\r\n                                        overflow: \"hidden\",\r\n                                        textOverflow: \"ellipsis\",\r\n                                        height: \"40px\",\r\n                                        color: NewCourseData?.secondaryColor\r\n                                    }}>\r\n                                        {NewCourseData?.title || \"Node.js EÄŸitimi - SÄ±fÄ±rdan Profesyonele NodeJs\"}\r\n                                    </div>\r\n                                    <div style={{\r\n                                        marginTop: \"15px\",\r\n                                        fontSize: \"17px\",\r\n                                        fontWeight: \"lighter\"\r\n                                    }}>\r\n                                        {NewCourseData?.description}\r\n                                    </div>\r\n                                    <div>\r\n                                        <p style={{ textAlign: \"left\" }}>\r\n                                            <a\r\n                                                href={`${NewCourseData?.url}?referralCode=${NewCourseData?.referralCode}&couponCode=${NewCourseData?.couponCode}`}\r\n                                                //href=\"https://www.udemy.com/course/nodejs-egitimi-sifirdan-profesyonele/?referralCode=0017AFE73990096201B4&couponCode=CANGOKCEASLAN\"\r\n                                                target=\"_blank\"\r\n                                                className=\"btn btn-secondary px-4 py-2 btn-sm\"\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    backgroundColor: \"white\",\r\n                                                    marginLeft: \"0px\",\r\n                                                    borderWidth: \"0px !important\",\r\n                                                    textTransform: \"none\",\r\n                                                    fontSize: \"18px\",\r\n                                                    borderColor: \"white\",\r\n                                                    color: \"black\",\r\n                                                    marginTop: \"20px\",\r\n                                                    letterSpacing: \"0.5px\"\r\n                                                }}>Hemen Kursu Al</a>\r\n\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-lg-5 col-md-12\" style={{ padding: \"0px 20px\" }}>\r\n                            <div className=\"new-course-video d-flex align-items-center justify-content-center\" style={{\r\n                                minHeight: \"300px\"\r\n                            }}>\r\n                                <div style={{\r\n                                    border: \"2px solid white\",\r\n                                    padding: \"0px !important\",\r\n                                    margin: \"0px\",\r\n                                    maxHeight: `calc(${this.videoHeight} + 4px)`,\r\n                                    backgroundColor: \"white\",\r\n                                    marginTop: \"35px\",\r\n                                }}>\r\n                                    <iframe width={this.videoWidth}\r\n                                        height={this.videoHeight}\r\n                                        src={`${NewCourseData?.youtubeEmbedUrl || \"https://www.youtube.com/embed/h-Xx14d39vk\"}?fs=1&iv_load_policy=3&showinfo=0&rel=0&cc_load_policy=0&start=0&end=0&mute=0&loop=1&color=white&controls=0&modestbranding=1&playsinline=1&rel=0&enablejsapi=1`}\r\n                                        title=\"YouTube video player\"\r\n                                        frameBorder=\"0\"\r\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                        allowFullScreen></iframe>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NewCourse;"],"sourceRoot":""}