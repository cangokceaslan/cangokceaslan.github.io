{"version":3,"file":"imask.min.js","sources":["../node_modules/core-js/internals/to-integer.js","../node_modules/core-js/internals/to-length.js","../node_modules/core-js/internals/require-object-coercible.js","../node_modules/core-js/internals/string-repeat.js","../node_modules/core-js/internals/string-pad.js","../node_modules/core-js/internals/global.js","../node_modules/core-js/internals/user-agent.js","../node_modules/core-js/internals/webkit-string-pad-bug.js","../node_modules/core-js/internals/fails.js","../node_modules/core-js/internals/descriptors.js","../node_modules/core-js/internals/object-property-is-enumerable.js","../node_modules/core-js/internals/create-property-descriptor.js","../node_modules/core-js/internals/classof-raw.js","../node_modules/core-js/internals/indexed-object.js","../node_modules/core-js/internals/to-indexed-object.js","../node_modules/core-js/internals/is-object.js","../node_modules/core-js/internals/to-primitive.js","../node_modules/core-js/internals/has.js","../node_modules/core-js/internals/document-create-element.js","../node_modules/core-js/internals/ie8-dom-define.js","../node_modules/core-js/internals/object-get-own-property-descriptor.js","../node_modules/core-js/internals/an-object.js","../node_modules/core-js/internals/object-define-property.js","../node_modules/core-js/internals/hide.js","../node_modules/core-js/internals/set-global.js","../node_modules/core-js/internals/internal-state.js","../node_modules/core-js/internals/shared-key.js","../node_modules/core-js/internals/shared.js","../node_modules/core-js/internals/function-to-string.js","../node_modules/core-js/internals/native-weak-map.js","../node_modules/core-js/internals/uid.js","../node_modules/core-js/internals/hidden-keys.js","../node_modules/core-js/internals/array-includes.js","../node_modules/core-js/internals/redefine.js","../node_modules/core-js/internals/to-absolute-index.js","../node_modules/core-js/internals/object-keys-internal.js","../node_modules/core-js/internals/object-get-own-property-names.js","../node_modules/core-js/internals/enum-bug-keys.js","../node_modules/core-js/internals/object-get-own-property-symbols.js","../node_modules/core-js/internals/own-keys.js","../node_modules/core-js/internals/copy-constructor-properties.js","../node_modules/core-js/internals/is-forced.js","../node_modules/core-js/internals/export.js","../src/core/utils.js","../node_modules/core-js/modules/es.string.pad-end.js","../node_modules/core-js/modules/es.string.pad-start.js","../node_modules/core-js/modules/es.string.repeat.js","../src/core/action-details.js","../src/core/change-details.js","../src/core/continuous-tail-details.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/input-definition.js","../src/masked/pattern/fixed-definition.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern.js","../src/masked/range.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/input.js","../src/masked/enum.js","../src/masked/number.js","../src/masked/regexp.js","../src/masked/function.js","../src/masked/dynamic.js","../src/imask.js"],"sourcesContent":["var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('../internals/to-length');\nvar repeat = require('../internals/string-repeat');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(requireObjectCoercible(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  var fillLen, stringFiller;\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  fillLen = intMaxLength - stringLength;\n  stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports = typeof window == 'object' && window && window.Math == Math ? window\n  : typeof self == 'object' && self && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\n","var global = require('../internals/global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","// https://github.com/zloirock/core-js/issues/280\nvar userAgent = require('../internals/user-agent');\n\n// eslint-disable-next-line unicorn/no-unsafe-regex\nmodule.exports = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('../internals/fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = nativeGetOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = nativeGetOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\nvar split = ''.split;\n\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('../internals/is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var isObject = require('../internals/is-object');\nvar document = require('../internals/global').document;\n// typeof document.createElement is 'object' in old IE\nvar exist = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return exist ? document.createElement(it) : {};\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('../internals/descriptors') && !require('../internals/fails')(function () {\n  return Object.defineProperty(require('../internals/document-create-element')('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar nativeDefineProperty = Object.defineProperty;\n\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = require('../internals/descriptors') ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar hide = require('../internals/hide');\n\nmodule.exports = function (key, value) {\n  try {\n    hide(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar isObject = require('../internals/is-object');\nvar hide = require('../internals/hide');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar WeakMap = require('../internals/global').WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    hide(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var shared = require('../internals/shared')('keys');\nvar uid = require('../internals/uid');\n\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.0.1',\n  mode: require('../internals/is-pure') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = require('../internals/shared')('native-function-to-string', Function.toString);\n","var nativeFunctionToString = require('../internals/function-to-string');\nvar WeakMap = require('../internals/global').WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + postfix).toString(36));\n};\n","module.exports = {};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\n// false -> Array#indexOf\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n// true  -> Array#includes\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var global = require('../internals/global');\nvar hide = require('../internals/hide');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar nativeFunctionToString = require('../internals/function-to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(nativeFunctionToString).split('toString');\n\nrequire('../internals/shared')('inspectSource', function (it) {\n  return nativeFunctionToString.call(it);\n});\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else hide(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);\n});\n","var toInteger = require('../internals/to-integer');\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayIndexOf = require('../internals/array-includes')(false);\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar hiddenKeys = require('../internals/enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","exports.f = Object.getOwnPropertySymbols;\n","var getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\nvar Reflect = require('../internals/global').Reflect;\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var fails = require('../internals/fails');\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      hide(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","// @flow\r\n\r\n\r\n/** Checks if value is string */\r\nexport\r\nfunction isString (str: mixed): boolean %checks {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\n/**\r\n  Direction\r\n  @prop {string} NONE\r\n  @prop {string} LEFT\r\n  @prop {string} FORCE_LEFT\r\n  @prop {string} RIGHT\r\n  @prop {string} FORCE_RIGHT\r\n*/\r\nexport\r\nconst DIRECTION = {\r\n  NONE: 'NONE',\r\n  LEFT: 'LEFT',\r\n  FORCE_LEFT: 'FORCE_LEFT',\r\n  RIGHT: 'RIGHT',\r\n  FORCE_RIGHT: 'FORCE_RIGHT',\r\n}\r\n/**\r\n  Direction\r\n  @enum {string}\r\n*/\r\nexport\r\ntype Direction = $Values<typeof DIRECTION>;\r\n\r\n/** Returns next char index in direction */\r\nexport\r\nfunction indexInDirection (pos: number, direction: Direction): number {\r\n  if (direction === DIRECTION.LEFT) --pos;\r\n  return pos;\r\n}\r\n\r\n/** Returns next char position in direction */\r\nexport\r\nfunction posInDirection (pos: number, direction: Direction): number {\r\n  switch (direction) {\r\n    case DIRECTION.LEFT:\r\n    case DIRECTION.FORCE_LEFT:\r\n      return --pos;\r\n    case DIRECTION.RIGHT:\r\n    case DIRECTION.FORCE_RIGHT:\r\n      return ++pos;\r\n    default:\r\n      return pos;\r\n  }\r\n}\r\n\r\n/** */\r\nexport\r\nfunction forceDirection (direction: Direction): Direction {\r\n  switch (direction) {\r\n    case DIRECTION.LEFT:\r\n      return DIRECTION.FORCE_LEFT;\r\n    case DIRECTION.RIGHT:\r\n      return DIRECTION.FORCE_RIGHT;\r\n    default:\r\n      return direction;\r\n  }\r\n}\r\n\r\n/** Escapes regular expression control chars */\r\nexport\r\nfunction escapeRegExp (str: string): string {\r\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\r\n}\r\n\r\n\r\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\r\nexport\r\nfunction objectIncludes (b: any, a: any): boolean {\r\n  if (a === b) return true;\r\n\r\n  var arrA = Array.isArray(a)\r\n    , arrB = Array.isArray(b)\r\n    , i;\r\n\r\n  if (arrA && arrB) {\r\n    if (a.length != b.length) return false;\r\n    for (i = 0; i < a.length; i++)\r\n      if (!objectIncludes(a[i], b[i])) return false;\r\n    return true;\r\n  }\r\n\r\n  if (arrA != arrB) return false;\r\n\r\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n    var dateA = a instanceof Date\r\n      , dateB = b instanceof Date;\r\n    if (dateA && dateB) return a.getTime() == b.getTime();\r\n    if (dateA != dateB) return false;\r\n\r\n    var regexpA = a instanceof RegExp\r\n      , regexpB = b instanceof RegExp;\r\n    if (regexpA && regexpB) return a.toString() == b.toString();\r\n    if (regexpA != regexpB) return false;\r\n\r\n    var keys = Object.keys(a);\r\n    // if (keys.length !== Object.keys(b).length) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n    for (i = 0; i < keys.length; i++)\r\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/* eslint-disable no-undef */\r\nexport\r\nconst g: any = typeof window !== 'undefined' && window ||\r\n  typeof global !== 'undefined' && global.global === global && global ||\r\n  typeof self !== 'undefined' && self.self === self && self ||\r\n  {};\r\n/* eslint-enable no-undef */\r\n\r\n/** Selection range */\r\nexport\r\ntype Selection = {\r\n  start: number;\r\n  end: number;\r\n};\r\n","'use strict';\nvar internalStringPad = require('../internals/string-pad');\nvar WEBKIT_BUG = require('../internals/webkit-string-pad-bug');\n\n// `String.prototype.padEnd` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.padend\nrequire('../internals/export')({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return internalStringPad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","'use strict';\nvar internalStringPad = require('../internals/string-pad');\nvar WEBKIT_BUG = require('../internals/webkit-string-pad-bug');\n\n// `String.prototype.padStart` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.padstart\nrequire('../internals/export')({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return internalStringPad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","// `String.prototype.repeat` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nrequire('../internals/export')({ target: 'String', proto: true }, {\n  repeat: require('../internals/string-repeat')\n});\n","// @flow\r\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\r\n\r\n\r\n/** Provides details of changing input */\r\nexport default\r\nclass ActionDetails {\r\n  /** Current input value */\r\n  value: string;\r\n  /** Current cursor position */\r\n  cursorPos: number;\r\n  /** Old input value */\r\n  oldValue: string;\r\n  /** Old selection */\r\n  oldSelection: Selection;\r\n\r\n  constructor (\r\n    value: string,\r\n    cursorPos: number,\r\n    oldValue: string,\r\n    oldSelection: Selection\r\n  ) {\r\n    this.value = value;\r\n    this.cursorPos = cursorPos;\r\n    this.oldValue = oldValue;\r\n    this.oldSelection = oldSelection;\r\n\r\n    // double check if left part was changed (autofilling, other non-standard input triggers)\r\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\r\n      --this.oldSelection.start;\r\n    }\r\n  }\r\n\r\n  /**\r\n    Start changing position\r\n    @readonly\r\n  */\r\n  get startChangePos (): number {\r\n    return Math.min(this.cursorPos, this.oldSelection.start);\r\n  }\r\n\r\n  /**\r\n    Inserted symbols count\r\n    @readonly\r\n  */\r\n  get insertedCount (): number {\r\n    return this.cursorPos - this.startChangePos;\r\n  }\r\n\r\n  /**\r\n    Inserted symbols\r\n    @readonly\r\n  */\r\n  get inserted (): string {\r\n    return this.value.substr(this.startChangePos, this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Removed symbols count\r\n    @readonly\r\n  */\r\n  get removedCount (): number {\r\n    // Math.max for opposite operation\r\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\r\n      // for Delete\r\n      this.oldValue.length - this.value.length, 0);\r\n  }\r\n\r\n  /**\r\n    Removed symbols\r\n    @readonly\r\n  */\r\n  get removed (): string {\r\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\r\n  }\r\n\r\n  /**\r\n    Unchanged head symbols\r\n    @readonly\r\n  */\r\n  get head (): string {\r\n    return this.value.substring(0, this.startChangePos);\r\n  }\r\n\r\n  /**\r\n    Unchanged tail symbols\r\n    @readonly\r\n  */\r\n  get tail (): string {\r\n    return this.value.substring(this.startChangePos + this.insertedCount);\r\n  }\r\n\r\n  /**\r\n    Remove direction\r\n    @readonly\r\n  */\r\n  get removeDirection (): Direction {\r\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\r\n\r\n    // align right if delete at right or if range removed (event with backspace)\r\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) ?\r\n      DIRECTION.RIGHT :\r\n      DIRECTION.LEFT;\r\n  }\r\n}\r\n","// @flow\r\n\r\n\r\n/**\r\n  Provides details of changing model value\r\n  @param {Object} [details]\r\n  @param {string} [details.inserted] - Inserted symbols\r\n  @param {boolean} [details.skip] - Can skip chars\r\n  @param {number} [details.removeCount] - Removed symbols count\r\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\r\n*/\r\nexport default\r\nclass ChangeDetails {\r\n  /** Inserted symbols */\r\n  inserted: string;\r\n  /** Can skip chars */\r\n  skip: boolean;\r\n  /** Additional offset if any changes occurred before tail */\r\n  tailShift: number;\r\n  /** Raw inserted is used by dynamic mask */\r\n  rawInserted: string;\r\n\r\n  constructor (details?: {\r\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\r\n    rawInserted?: $PropertyType<ChangeDetails, 'rawInserted'>,\r\n    skip?: $PropertyType<ChangeDetails, 'skip'>,\r\n    tailShift?: $PropertyType<ChangeDetails, 'tailShift'>,\r\n  }) {\r\n    Object.assign(this, {\r\n      inserted: '',\r\n      rawInserted: '',\r\n      skip: false,\r\n      tailShift: 0,\r\n    }, details);\r\n  }\r\n\r\n  /**\r\n    Aggregate changes\r\n    @returns {ChangeDetails} `this`\r\n  */\r\n  aggregate (details: ChangeDetails): ChangeDetails {\r\n    this.rawInserted += details.rawInserted;\r\n    this.skip = this.skip || details.skip;\r\n    this.inserted += details.inserted;\r\n    this.tailShift += details.tailShift;\r\n    return this;\r\n  }\r\n\r\n  /** Total offset considering all changes */\r\n  get offset (): number {\r\n    return this.tailShift + this.inserted.length;\r\n  }\r\n}\r\n","// @flow\r\nimport type { TailDetails, AppendTail } from './tail-details.js';\r\nimport type ChangeDetails from './change-details.js';\r\n\r\n\r\ntype ContinuousTailState = {\r\n  value: $PropertyType<ContinuousTailDetails, 'value'>,\r\n  from: $PropertyType<ContinuousTailDetails, 'from'>,\r\n  stop?: $PropertyType<ContinuousTailDetails, 'stop'>,\r\n};\r\n\r\n/** Provides details of continuous extracted tail */\r\nexport default\r\nclass ContinuousTailDetails implements TailDetails {\r\n  /** Tail value as string */\r\n  value: string;\r\n  /** Tail start position */\r\n  from: number;\r\n  /** Start position */\r\n  stop: ?number;\r\n\r\n  constructor (value?: string='', from?: number=0, stop?: number) {\r\n    this.value = value;\r\n    this.from = from;\r\n    this.stop = stop;\r\n  }\r\n\r\n  toString (): string { return this.value; }\r\n\r\n  extend (tail: string | TailDetails): void {\r\n    this.value += String(tail);\r\n  }\r\n\r\n  appendTo (masked: AppendTail): ChangeDetails {\r\n    return masked.append(this.toString(), { tail: true });\r\n  }\r\n\r\n  get state (): ContinuousTailState {\r\n    return {\r\n      value: this.value,\r\n      from: this.from,\r\n      stop: this.stop,\r\n    };\r\n  }\r\n\r\n  set state (state: ContinuousTailState) {\r\n    Object.assign(this, state);\r\n  }\r\n\r\n  shiftBefore (pos: number): string {\r\n    if (this.from >= pos || !this.value.length) return '';\r\n\r\n    const shiftChar = this.value[0];\r\n    this.value = this.value.slice(1);\r\n    return shiftChar;\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\r\nimport { type Direction, DIRECTION, isString } from '../core/utils.js';\r\nimport { type TailDetails } from '../core/tail-details.js';\r\n\r\n\r\n/** Supported mask type */\r\nexport\r\ntype Mask =\r\n  string |\r\n  String |\r\n  RegExp |\r\n  Class<Number> |\r\n  Class<Date> |\r\n  Array<any> |\r\n  $PropertyType<Masked<*>, 'validate'> |\r\n  Masked<*> |\r\n  Class<Masked<*>>;\r\n\r\nexport\r\ntype MaskedState = {|\r\n  _value: string,\r\n|};\r\n\r\n/** Append flags */\r\nexport\r\ntype AppendFlags = {\r\n  input?: boolean,\r\n  tail?: boolean,\r\n  raw?: boolean\r\n};\r\n\r\n/** Extract flags */\r\nexport\r\ntype ExtractFlags = {\r\n  raw?: boolean\r\n};\r\n\r\nexport\r\ntype MaskedOptions<MaskType> = {\r\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\r\n  parent?: $PropertyType<Masked<*>, 'parent'>,\r\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\r\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\r\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\r\n  overwrite?: $PropertyType<Masked<MaskType>, 'overwrite'>,\r\n};\r\n\r\n\r\n/** Provides common masking stuff */\r\nexport default\r\nclass Masked<MaskType> {\r\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\r\n\r\n  /** @type {Mask} */\r\n  mask: MaskType;\r\n  /** */ // $FlowFixMe no ideas\r\n  parent: ?Masked<*>;\r\n  /** Transforms value before mask processing */\r\n  prepare: (string, Masked<MaskType>, AppendFlags) => string;\r\n  /** Validates if value is acceptable */\r\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\r\n  /** Does additional processing in the end of editing */\r\n  commit: (string, Masked<MaskType>) => void;\r\n  /** Enable characters overwriting */\r\n  overwrite: ?boolean;\r\n  /** */\r\n  isInitialized: boolean;\r\n  _value: string;\r\n  _refreshing: boolean;\r\n  _beforeTailState: ?MaskedState;\r\n\r\n  constructor (opts: {[string]: any}) {\r\n    this._value = '';\r\n    this._update(opts);\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /** Sets and applies new options */\r\n  updateOptions (opts: {[string]: any}) {\r\n    if (!Object.keys(opts).length) return;\r\n    this.withValueRefresh(this._update.bind(this, opts));\r\n  }\r\n\r\n  /**\r\n    Sets new options\r\n    @protected\r\n  */\r\n  _update (opts: {[string]: any}) {\r\n    Object.assign(this, opts);\r\n  }\r\n\r\n  /** Mask state */\r\n  get state (): any {\r\n    return {\r\n      _value: this.value,\r\n    };\r\n  }\r\n\r\n  set state (state: any) {\r\n    this._value = state._value;\r\n  }\r\n\r\n  /** Resets value */\r\n  reset () {\r\n    this._value = '';\r\n  }\r\n\r\n  /** */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (value: string) {\r\n    this.resolve(value);\r\n  }\r\n\r\n  /** Resolve new value */\r\n  resolve (value: string): string {\r\n    this.reset();\r\n    this.append(value, {input: true}, '');\r\n    this.doCommit();\r\n    return this.value;\r\n  }\r\n\r\n  /** */\r\n  get unmaskedValue (): string {\r\n    return this.value;\r\n  }\r\n\r\n  set unmaskedValue (value: string) {\r\n    this.reset();\r\n    this.append(value, {}, '');\r\n    this.doCommit();\r\n  }\r\n\r\n  /** */\r\n  get typedValue (): any {\r\n    return this.unmaskedValue;\r\n  }\r\n\r\n  set typedValue (value: any) {\r\n    this.unmaskedValue = value;\r\n  }\r\n\r\n  /** Value that includes raw user input */\r\n  get rawInputValue (): string {\r\n    return this.extractInput(0, this.value.length, {raw: true});\r\n  }\r\n\r\n  set rawInputValue (value: string) {\r\n    this.reset();\r\n    this.append(value, {raw: true}, '');\r\n    this.doCommit();\r\n  }\r\n\r\n  /** */\r\n  get isComplete (): boolean {\r\n    return true;\r\n  }\r\n\r\n  /** Finds nearest input position in direction */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    return cursorPos;\r\n  }\r\n\r\n  /** Extracts value in range considering flags */\r\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\r\n    return this.value.slice(fromPos, toPos);\r\n  }\r\n\r\n  /** Extracts tail in range */\r\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\r\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\r\n  }\r\n\r\n  /** Stores state before tail */\r\n  _storeBeforeTailState () {\r\n    this._beforeTailState = this.state;\r\n  }\r\n\r\n  /** Restores state before tail */\r\n  _restoreBeforeTailState () {\r\n    this.state = this._beforeTailState;\r\n  }\r\n\r\n  /** Resets state before tail */\r\n  _resetBeforeTailState () {\r\n    this._beforeTailState = null;\r\n  }\r\n\r\n  /** Appends tail */\r\n  // $FlowFixMe no ideas\r\n  appendTail (tail: string | TailDetails): ChangeDetails {\r\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\r\n\r\n    return tail.appendTo(this);\r\n  }\r\n\r\n  /** Appends char */\r\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\r\n    this._value += ch;\r\n    return new ChangeDetails({\r\n      inserted: ch,\r\n      rawInserted: ch,\r\n    });\r\n  }\r\n\r\n  /** Appends char */\r\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\r\n    ch = this.doPrepare(ch, flags);\r\n    if (!ch) return new ChangeDetails({ skip: true });\r\n\r\n    const consistentState: MaskedState = this.state;\r\n    let consistentTail;\r\n    const details: ChangeDetails = this._appendCharRaw(ch, flags);\r\n\r\n    if (details.inserted) {\r\n      let appended = this.doValidate(flags) !== false;\r\n\r\n      if (appended && checkTail != null) {\r\n        // validation ok, check tail\r\n        this._storeBeforeTailState();\r\n        if (this.overwrite) {\r\n          consistentTail = checkTail.state;\r\n          checkTail.shiftBefore(this.value.length);\r\n        }\r\n\r\n        const tailDetails = this.appendTail(checkTail);\r\n\r\n        appended = tailDetails.rawInserted === checkTail.toString();\r\n\r\n        // if ok, rollback state after tail\r\n        if (appended && tailDetails.inserted) this._restoreBeforeTailState();\r\n      }\r\n\r\n      // revert all if something went wrong\r\n      if (!appended) {\r\n        details.rawInserted = details.inserted = '';\r\n        this.state = consistentState;\r\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\r\n      }\r\n    }\r\n    return details;\r\n  }\r\n\r\n  /** Appends symbols considering flags */\r\n  // $FlowFixMe no ideas\r\n  append (str: string, flags?: AppendFlags, tail?: string | TailDetails): ChangeDetails {\r\n    if (!isString(str)) throw new Error('value should be string');\r\n    const details = new ChangeDetails();\r\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\r\n\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      details.aggregate(this._appendChar(str[ci], flags, checkTail));\r\n    }\r\n\r\n    // append tail but aggregate only tailShift\r\n    if (checkTail != null) {\r\n      this._storeBeforeTailState();\r\n      details.tailShift += this.appendTail(checkTail).tailShift;\r\n      // TODO it's a good idea to clear state after appending ends\r\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\r\n      // this._resetBeforeTailState();\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /** */\r\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\r\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\r\n    return new ChangeDetails();\r\n  }\r\n\r\n  /** Calls function and reapplies current value */\r\n  withValueRefresh<T>(fn: () => T): T {\r\n    if (this._refreshing || !this.isInitialized) return fn();\r\n    this._refreshing = true;\r\n\r\n    const unmasked = this.unmaskedValue;\r\n    const value = this.value;\r\n\r\n    const ret = fn();\r\n\r\n    // try to update with raw value first to keep fixed chars\r\n    if (this.resolve(value) !== value) {\r\n      // or fallback to unmasked\r\n      this.unmaskedValue = unmasked;\r\n    }\r\n\r\n    delete this._refreshing;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n    Prepares string before mask processing\r\n    @protected\r\n  */\r\n  doPrepare (str: string, flags: AppendFlags={}): string {\r\n    return this.prepare ?\r\n      this.prepare(str, this, flags) :\r\n      str;\r\n  }\r\n\r\n  /**\r\n    Validates if value is acceptable\r\n    @protected\r\n  */\r\n  doValidate (flags: AppendFlags): boolean {\r\n    return (!this.validate || this.validate(this.value, this, flags)) &&\r\n      (!this.parent || this.parent.doValidate(flags));\r\n  }\r\n\r\n  /**\r\n    Does additional processing in the end of editing\r\n    @protected\r\n  */\r\n  doCommit () {\r\n    if (this.commit) this.commit(this.value, this);\r\n  }\r\n\r\n  /** */\r\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction): ChangeDetails {\r\n    const tailPos: number = start + deleteCount;\r\n    const tail: TailDetails = this.extractTail(tailPos);\r\n\r\n    let startChangePos: number = this.nearestInputPos(start, removeDirection);\r\n    const changeDetails: ChangeDetails = new ChangeDetails({\r\n      tailShift: startChangePos - start  // adjust tailShift if start was aligned\r\n    }).aggregate(this.remove(startChangePos))\r\n      .aggregate(this.append(inserted, {input: true}, tail));\r\n\r\n    return changeDetails;\r\n  }\r\n}\r\n","// @flow\r\nimport {g, isString} from '../core/utils.js';\r\nimport type Masked from './base.js';\r\nimport {type Mask} from './base.js';\r\n\r\n\r\n/** Get Masked class by mask type */\r\nexport\r\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\r\n  if (mask == null) {\r\n    throw new Error('mask property should be defined');\r\n  }\r\n\r\n  if (mask instanceof RegExp) return g.IMask.MaskedRegExp;\r\n  if (isString(mask)) return g.IMask.MaskedPattern;\r\n  if (mask instanceof Date || mask === Date) return g.IMask.MaskedDate;\r\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return g.IMask.MaskedNumber;\r\n  if (Array.isArray(mask) || mask === Array) return g.IMask.MaskedDynamic;\r\n  // $FlowFixMe\r\n  if (mask.prototype instanceof g.IMask.Masked) return mask;\r\n  // $FlowFixMe\r\n  if (mask instanceof Function) return g.IMask.MaskedFunction;\r\n\r\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\r\n  return g.IMask.Masked;\r\n}\r\n\r\n/** Creates new {@link Masked} depending on mask type */\r\nexport default\r\nfunction createMask (opts: {mask: Mask}): Masked<*> {\r\n  opts = {...opts};\r\n  const mask = opts.mask;\r\n\r\n  if (mask instanceof g.IMask.Masked) return mask;\r\n\r\n  const MaskedClass = maskedClass(mask);\r\n  return new MaskedClass(opts);\r\n}\r\n","// @flow\r\nimport createMask from '../factory.js';\r\nimport type Masked from '../base.js';\r\nimport type MaskedPattern from '../pattern.js';\r\nimport {type TailDetails} from '../../core/tail-details.js';\r\nimport {type Mask, type ExtractFlags, type AppendFlags} from '../base.js';\r\nimport ChangeDetails from '../../core/change-details.js';\r\nimport {DIRECTION, type Direction} from '../../core/utils.js';\r\nimport {type PatternBlock} from './block.js';\r\n\r\n\r\nexport\r\ntype Definitions = {[string]: Mask};\r\n\r\n/** */\r\ntype PatternInputDefinitionOptions = {\r\n  parent: $PropertyType<PatternInputDefinition, 'parent'>,\r\n  mask: Mask,\r\n  isOptional: $PropertyType<PatternInputDefinition, 'isOptional'>,\r\n  lazy: $PropertyType<PatternInputDefinition, 'lazy'>,\r\n  placeholderChar: $PropertyType<PatternInputDefinition, 'placeholderChar'>,\r\n};\r\n\r\ntype PatternInputDefinitionState = {\r\n  masked: *,\r\n  _isFilled: boolean,\r\n};\r\n\r\nexport\r\nconst DEFAULT_INPUT_DEFINITIONS = {\r\n  '0': /\\d/,\r\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\r\n  '*': /./\r\n};\r\n\r\n\r\n/** */\r\nexport default\r\nclass PatternInputDefinition implements PatternBlock {\r\n  /** */\r\n  +masked: Masked<*>;\r\n  /** */\r\n  parent: Masked<*>;\r\n  /** */\r\n  isOptional: boolean;\r\n  /** */\r\n  _isFilled: boolean;\r\n  /** */\r\n  lazy: $PropertyType<MaskedPattern, 'lazy'>;\r\n  /** */\r\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>;\r\n\r\n\r\n  constructor(opts: PatternInputDefinitionOptions) {\r\n    const {mask, ...blockOpts} = opts;\r\n\r\n    this.masked = createMask({mask});\r\n    Object.assign(this, blockOpts);\r\n  }\r\n\r\n  reset () {\r\n    this._isFilled = false;\r\n    this.masked.reset();\r\n  }\r\n\r\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\r\n    if (fromPos === 0 && toPos >= 1) {\r\n      this._isFilled = false;\r\n      return this.masked.remove(fromPos, toPos);\r\n    }\r\n\r\n    return new ChangeDetails();\r\n  }\r\n\r\n  get value (): string {\r\n    return this.masked.value ||\r\n      (this._isFilled && !this.isOptional ?\r\n        this.placeholderChar :\r\n        '');\r\n  }\r\n\r\n  get unmaskedValue (): string {\r\n    return this.masked.unmaskedValue;\r\n  }\r\n\r\n  get isComplete (): boolean {\r\n    return Boolean(this.masked.value) || this.isOptional;\r\n  }\r\n\r\n  _appendChar (str: string, flags: AppendFlags={}): ChangeDetails {\r\n    if (this._isFilled) return new ChangeDetails();\r\n\r\n    const state = this.masked.state;\r\n    // simulate input\r\n    const details = this.masked._appendChar(str, flags);\r\n\r\n    if (details.inserted && this.doValidate(flags) === false) {\r\n      details.inserted = details.rawInserted = '';\r\n      this.masked.state = state;\r\n    }\r\n\r\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\r\n      details.inserted = this.placeholderChar;\r\n    }\r\n    details.skip = !details.inserted && !this.isOptional;\r\n    this._isFilled = Boolean(details.inserted);\r\n\r\n    return details;\r\n  }\r\n\r\n  append (...args: *): ChangeDetails {\r\n    return this.masked.append(...args);\r\n  }\r\n\r\n  _appendPlaceholder (): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n\r\n    if (this._isFilled || this.isOptional) return details;\r\n\r\n    this._isFilled = true;\r\n    details.inserted = this.placeholderChar;\r\n    return details;\r\n  }\r\n\r\n  extractTail (...args: *): TailDetails {\r\n    return this.masked.extractTail(...args);\r\n  }\r\n\r\n  appendTail (...args: *): ChangeDetails {\r\n    return this.masked.appendTail(...args);\r\n  }\r\n\r\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\r\n    return this.masked.extractInput(fromPos, toPos, flags);\r\n  }\r\n\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\r\n    const minPos = 0;\r\n    const maxPos = this.value.length;\r\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\r\n\r\n    switch (direction) {\r\n      case DIRECTION.LEFT:\r\n      case DIRECTION.FORCE_LEFT:\r\n        return this.isComplete ? boundPos : minPos;\r\n      case DIRECTION.RIGHT:\r\n      case DIRECTION.FORCE_RIGHT:\r\n        return this.isComplete ? boundPos : maxPos;\r\n      case DIRECTION.NONE:\r\n      default: return boundPos;\r\n    }\r\n  }\r\n\r\n  doValidate (...args: *) {\r\n    return this.masked.doValidate(...args) && (\r\n      !this.parent || this.parent.doValidate(...args));\r\n  }\r\n\r\n  doCommit () {\r\n    this.masked.doCommit();\r\n  }\r\n\r\n  get state (): PatternInputDefinitionState {\r\n    return {\r\n      masked: this.masked.state,\r\n      _isFilled: this._isFilled,\r\n    };\r\n  }\r\n\r\n  set state (state: PatternInputDefinitionState) {\r\n    this.masked.state = state.masked;\r\n    this._isFilled = state._isFilled;\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../../core/change-details.js';\r\nimport { DIRECTION, type Direction, isString } from '../../core/utils.js';\r\nimport { type TailDetails } from '../../core/tail-details.js';\r\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\r\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base.js';\r\nimport { type PatternBlock } from './block.js';\r\n\r\n\r\n/** */\r\ntype PatternFixedDefinitionOptions = {\r\n  char: $PropertyType<PatternFixedDefinition, 'char'>,\r\n  isUnmasking?: $PropertyType<PatternFixedDefinition, 'isUnmasking'>,\r\n};\r\n\r\ntype PatternFixedDefinitionState = {|\r\n  ...MaskedState,\r\n  _isRawInput: ?boolean,\r\n|};\r\n\r\nexport default\r\nclass PatternFixedDefinition implements PatternBlock {\r\n  /** */\r\n  _value: string;\r\n  /** */\r\n  char: string;\r\n  /** */\r\n  isUnmasking: ?boolean;\r\n  /** */\r\n  _isRawInput: ?boolean;\r\n\r\n  constructor(opts: PatternFixedDefinitionOptions) {\r\n    Object.assign(this, opts);\r\n    this._value = '';\r\n  }\r\n\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  get unmaskedValue (): string {\r\n    return this.isUnmasking ? this.value : '';\r\n  }\r\n\r\n  reset () {\r\n    this._isRawInput = false;\r\n    this._value = '';\r\n  }\r\n\r\n  remove (fromPos?: number=0, toPos?: number=this._value.length): ChangeDetails {\r\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\r\n    if (!this._value) this._isRawInput = false;\r\n\r\n    return new ChangeDetails();\r\n  }\r\n\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\r\n    const minPos = 0;\r\n    const maxPos = this._value.length;\r\n\r\n    switch (direction) {\r\n      case DIRECTION.LEFT:\r\n      case DIRECTION.FORCE_LEFT:\r\n        return minPos;\r\n      case DIRECTION.NONE:\r\n      case DIRECTION.RIGHT:\r\n      case DIRECTION.FORCE_RIGHT:\r\n      default: return maxPos;\r\n    }\r\n  }\r\n\r\n  extractInput (fromPos?: number=0, toPos?: number=this._value.length, flags?: ExtractFlags={}) {\r\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\r\n  }\r\n\r\n  get isComplete (): boolean {\r\n    return true;\r\n  }\r\n\r\n  _appendChar (str: string, flags?: AppendFlags={}) {\r\n    const details = new ChangeDetails();\r\n\r\n    if (this._value) return details;\r\n\r\n    const appended = this.char === str[0];\r\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && !flags.tail;\r\n    if (isResolved) details.rawInserted = this.char;\r\n    this._value = details.inserted = this.char;\r\n    this._isRawInput = isResolved && (flags.raw || flags.input);\r\n\r\n    return details;\r\n  }\r\n\r\n  _appendPlaceholder (): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (this._value) return details;\r\n\r\n    this._value = details.inserted = this.char;\r\n    return details;\r\n  }\r\n\r\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\r\n    return new ContinuousTailDetails('');\r\n  }\r\n\r\n  // $FlowFixMe no ideas\r\n  appendTail (tail: string | TailDetails): ChangeDetails {\r\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\r\n\r\n    return tail.appendTo(this);\r\n  }\r\n\r\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\r\n    const details = this._appendChar(str, flags);\r\n\r\n    if (tail != null) {\r\n      details.tailShift += this.appendTail(tail).tailShift;\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  doCommit () {}\r\n\r\n  get state (): PatternFixedDefinitionState {\r\n    return {\r\n      _value: this._value,\r\n      _isRawInput: this._isRawInput,\r\n    };\r\n  }\r\n\r\n  set state (state: PatternFixedDefinitionState) {\r\n    Object.assign(this, state);\r\n  }\r\n}\r\n","// @flow\r\nimport { g } from '../../core/utils.js';\r\nimport type { TailDetails, AppendTail } from '../../core/tail-details.js';\r\nimport ChangeDetails from '../../core/change-details.js';\r\nimport { isString } from '../../core/utils.js';\r\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\r\n\r\n\r\ntype ChunksTailState = {\r\n  chunks: $PropertyType<ChunksTailDetails, 'chunks'>,\r\n  from: $PropertyType<ChunksTailDetails, 'from'>,\r\n  stop?: $PropertyType<ChunksTailDetails, 'stop'>,\r\n  blockIndex?: $PropertyType<ChunksTailDetails, 'blockIndex'>,\r\n};\r\n\r\nexport default\r\nclass ChunksTailDetails implements TailDetails {\r\n  chunks: Array<TailDetails>;\r\n  from: number;\r\n  stop: ?number;\r\n  /** */\r\n  blockIndex: ?number;\r\n\r\n  constructor (chunks?: Array<TailDetails>=[], from?: number=0) {\r\n    this.chunks = chunks;\r\n    this.from = from;\r\n  }\r\n\r\n  toString (): string {\r\n    return this.chunks.map(String).join('');\r\n  }\r\n\r\n  // $FlowFixMe no ideas\r\n  extend (tailChunk: string | TailDetails): void {\r\n    if (!String(tailChunk)) return;\r\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\r\n\r\n    const lastChunk = this.chunks[this.chunks.length-1];\r\n    const extendLast = lastChunk &&\r\n      // if stops are same or tail has no stop\r\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\r\n      // if tail chunk goes just after last chunk\r\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\r\n\r\n    if (tailChunk instanceof ContinuousTailDetails) {\r\n      // check the ability to extend previous chunk\r\n      if (extendLast) {\r\n        // extend previous chunk\r\n        lastChunk.extend(tailChunk.toString());\r\n      } else {\r\n        // append new chunk\r\n        this.chunks.push(tailChunk);\r\n      }\r\n    } else if (tailChunk instanceof ChunksTailDetails) {\r\n      if (tailChunk.stop == null) {\r\n        // unwrap floating chunks to parent, keeping `from` pos\r\n        let firstTailChunk;\r\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\r\n          firstTailChunk = tailChunk.chunks.shift();\r\n          firstTailChunk.from += tailChunk.from;\r\n          this.extend(firstTailChunk);\r\n        }\r\n      }\r\n\r\n      // if tail chunk still has value\r\n      if (tailChunk.toString()) {\r\n        // if chunks contains stops, then popup stop to container\r\n        tailChunk.stop = tailChunk.blockIndex;\r\n        this.chunks.push(tailChunk);\r\n      }\r\n    }\r\n  }\r\n\r\n  appendTo (masked: AppendTail): ChangeDetails {\r\n    if (!(masked instanceof g.IMask.MaskedPattern)) {\r\n      const tail = new ContinuousTailDetails(this.toString());\r\n      return tail.appendTo(masked);\r\n    }\r\n\r\n    const details = new ChangeDetails();\r\n\r\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\r\n      const chunk = this.chunks[ci];\r\n\r\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\r\n      const stop = chunk.stop;\r\n      let chunkBlock;\r\n      if (stop &&\r\n        // if block not found or stop is behind lastBlock\r\n        (!lastBlockIter || lastBlockIter.index <= stop)\r\n      ) {\r\n        if (\r\n          chunk instanceof ChunksTailDetails ||\r\n          // for continuous block also check if stop is exist\r\n          masked._stops.indexOf(stop) >= 0\r\n        ) {\r\n          details.aggregate(masked._appendPlaceholder(stop));\r\n        }\r\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\r\n      }\r\n\r\n      if (chunkBlock) {\r\n        const tailDetails = chunkBlock.appendTail(chunk);\r\n        tailDetails.skip = false; // always ignore skip, it will be set on last\r\n        details.aggregate(tailDetails);\r\n        masked._value += tailDetails.inserted;\r\n\r\n        // get not inserted chars\r\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\r\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\r\n      } else {\r\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\r\n      }\r\n    };\r\n\r\n    return details;\r\n  }\r\n\r\n  get state (): ChunksTailState {\r\n    return {\r\n      chunks: this.chunks.map(c => c.state),\r\n      from: this.from,\r\n      stop: this.stop,\r\n      blockIndex: this.blockIndex,\r\n    };\r\n  }\r\n\r\n  set state (state: ChunksTailState) {\r\n    const { chunks, ...props } = state;\r\n    Object.assign(this, props);\r\n    this.chunks = chunks.map(cstate => {\r\n      const chunk = \"chunks\" in cstate ?\r\n        new ChunksTailDetails() :\r\n        new ContinuousTailDetails();\r\n      // $FlowFixMe already checked above\r\n      chunk.state = cstate;\r\n      return chunk;\r\n    });\r\n  }\r\n\r\n  shiftBefore (pos: number): string {\r\n    if (this.from >= pos || !this.chunks.length) return '';\r\n\r\n    const chunkShiftPos = pos - this.from;\r\n    let ci=0;\r\n    while (ci < this.chunks.length) {\r\n      const chunk = this.chunks[ci];\r\n      const shiftChar = chunk.shiftBefore(chunkShiftPos);\r\n\r\n      if (chunk.toString()) {\r\n        // chunk still contains value\r\n        // but not shifted - means no more available chars to shift\r\n        if (!shiftChar) break;\r\n        ++ci;\r\n      } else {\r\n        // clean if chunk has no value\r\n        this.chunks.splice(ci, 1);\r\n      }\r\n\r\n      if (shiftChar) return shiftChar;\r\n    }\r\n\r\n    return '';\r\n  }\r\n}\r\n","// @flow\r\nimport {DIRECTION, type Direction, forceDirection} from '../core/utils.js';\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport Masked, {type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState} from './base.js';\r\nimport PatternInputDefinition, {DEFAULT_INPUT_DEFINITIONS, type Definitions} from './pattern/input-definition.js';\r\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\r\nimport { type TailDetails } from '../core/tail-details.js';\r\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\r\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\r\nimport {type PatternBlock} from './pattern/block.js';\r\nimport createMask from './factory.js';\r\n\r\n\r\ntype MaskedPatternOptions = {\r\n  ...MaskedOptions<string>,\r\n  definitions?: $PropertyType<MaskedPattern, 'definitions'>,\r\n  blocks?: $PropertyType<MaskedPattern, 'blocks'>,\r\n  placeholderChar?: $PropertyType<MaskedPattern, 'placeholderChar'>,\r\n  lazy?: $PropertyType<MaskedPattern, 'lazy'>,\r\n};\r\n\r\ntype MaskedPatternState = {|\r\n  ...MaskedState,\r\n  _blocks: Array<*>,\r\n|};\r\n\r\ntype BlockPosData = {\r\n  index: number,\r\n  offset: number,\r\n};\r\n\r\n/**\r\n  Pattern mask\r\n  @param {Object} opts\r\n  @param {Object} opts.blocks\r\n  @param {Object} opts.definitions\r\n  @param {string} opts.placeholderChar\r\n  @param {boolean} opts.lazy\r\n*/\r\nexport default\r\nclass MaskedPattern extends Masked<string> {\r\n  static DEFAULTS: any;\r\n  static STOP_CHAR: string;\r\n  static ESCAPE_CHAR: string;\r\n  static InputDefinition: Class<PatternInputDefinition>;\r\n  static FixedDefinition: Class<PatternFixedDefinition>;\r\n\r\n  /** */\r\n  blocks: {[string]: Masked<*>};\r\n  /** */\r\n  definitions: Definitions;\r\n  /** Single char for empty input */\r\n  placeholderChar: string;\r\n  /** Show placeholder only when needed */\r\n  lazy: boolean;\r\n  _blocks: Array<PatternBlock>;\r\n  _maskedBlocks: {[string]: Array<number>};\r\n  _stops: Array<number>;\r\n\r\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\r\n    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\r\n    super({\r\n      ...MaskedPattern.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\r\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\r\n    super._update(opts);\r\n    this._rebuildMask();\r\n  }\r\n\r\n  /** */\r\n  _rebuildMask () {\r\n    const defs = this.definitions;\r\n    this._blocks = [];\r\n    this._stops = [];\r\n    this._maskedBlocks = {};\r\n\r\n    let pattern = this.mask;\r\n    if (!pattern || !defs) return;\r\n\r\n    let unmaskingBlock = false;\r\n    let optionalBlock = false;\r\n\r\n    for (let i=0; i<pattern.length; ++i) {\r\n      if (this.blocks) {\r\n        const p = pattern.slice(i);\r\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\r\n        // order by key length\r\n        bNames.sort((a, b) => b.length - a.length);\r\n        // use block name with max length\r\n        const bName = bNames[0];\r\n        if (bName) {\r\n          const maskedBlock = createMask({\r\n            parent: this,\r\n            lazy: this.lazy,\r\n            placeholderChar: this.placeholderChar,\r\n            ...this.blocks[bName]\r\n          });\r\n\r\n          if (maskedBlock) {\r\n            this._blocks.push(maskedBlock);\r\n\r\n            // store block index\r\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\r\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\r\n          }\r\n\r\n          i += bName.length - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      let char = pattern[i];\r\n      let isInput = char in defs;\r\n\r\n      if (char === MaskedPattern.STOP_CHAR) {\r\n        this._stops.push(this._blocks.length);\r\n        continue;\r\n      }\r\n\r\n      if (char === '{' || char === '}') {\r\n        unmaskingBlock = !unmaskingBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === '[' || char === ']') {\r\n        optionalBlock = !optionalBlock;\r\n        continue;\r\n      }\r\n\r\n      if (char === MaskedPattern.ESCAPE_CHAR) {\r\n        ++i;\r\n        char = pattern[i];\r\n        if (!char) break;\r\n        isInput = false;\r\n      }\r\n\r\n      const def = isInput ?\r\n        new PatternInputDefinition({\r\n          parent: this,\r\n          lazy: this.lazy,\r\n          placeholderChar: this.placeholderChar,\r\n          mask: defs[char],\r\n          isOptional: optionalBlock,\r\n        }) :\r\n        new PatternFixedDefinition({\r\n          char,\r\n          isUnmasking: unmaskingBlock,\r\n        });\r\n\r\n      this._blocks.push(def);\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get state (): MaskedPatternState {\r\n    return {\r\n      ...super.state,\r\n      _blocks: this._blocks.map(b => b.state),\r\n    };\r\n  }\r\n\r\n  set state (state: MaskedPatternState) {\r\n    const {_blocks, ...maskedState} = state;\r\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\r\n    super.state = maskedState;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _storeBeforeTailState () {\r\n    this._blocks.forEach(b => {\r\n      // $FlowFixMe _storeBeforeTailState is not exist in PatternBlock\r\n      if (typeof b._storeBeforeTailState === 'function') {\r\n        b._storeBeforeTailState();\r\n      }\r\n    });\r\n    super._storeBeforeTailState();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _restoreBeforeTailState () {\r\n    this._blocks.forEach(b => {\r\n      // $FlowFixMe _restoreBeforeTailState is not exist in PatternBlock\r\n      if (typeof b._restoreBeforeTailState === 'function') {\r\n        b._restoreBeforeTailState();\r\n      }\r\n    });\r\n    super._restoreBeforeTailState();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _resetBeforeTailState () {\r\n    this._blocks.forEach(b => {\r\n      // $FlowFixMe _resetBeforeTailState is not exist in PatternBlock\r\n      if (typeof b._resetBeforeTailState === 'function') {\r\n        b._resetBeforeTailState();\r\n      }\r\n    });\r\n    super._resetBeforeTailState();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    super.reset();\r\n    this._blocks.forEach(b => b.reset());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return this._blocks.every(b => b.isComplete);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    this._blocks.forEach(b => b.doCommit());\r\n    super.doCommit();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get value (): string {\r\n    // TODO return _value when not in change?\r\n    return this._blocks.reduce((str, b) => str += b.value, '');\r\n  }\r\n\r\n  set value (value: string) {\r\n    super.value = value;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  appendTail (tail: string | TailDetails): ChangeDetails {\r\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\r\n    const blockIter = this._mapPosToBlock(this.value.length);\r\n    const details = new ChangeDetails();\r\n    if (!blockIter) return details;\r\n\r\n    for (let bi=blockIter.index; ; ++bi) {\r\n      const block = this._blocks[bi];\r\n      if (!block) break;\r\n\r\n      const blockDetails = block._appendChar(ch, flags);\r\n\r\n      const skip = blockDetails.skip;\r\n      details.aggregate(blockDetails);\r\n\r\n      if (skip || blockDetails.rawInserted) break; // go next char\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): ChunksTailDetails {\r\n    const chunkTail = new ChunksTailDetails();\r\n    if (fromPos === toPos) return chunkTail;\r\n\r\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\r\n      const blockChunk = b.extractTail(bFromPos, bToPos);\r\n      blockChunk.stop = this._findStopBefore(bi);\r\n      blockChunk.from = this._blockStartPos(bi);\r\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\r\n\r\n      chunkTail.extend(blockChunk);\r\n    });\r\n\r\n    return chunkTail;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags: ExtractFlags={}): string {\r\n    if (fromPos === toPos) return '';\r\n\r\n    let input = '';\r\n\r\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\r\n      input += b.extractInput(fromPos, toPos, flags);\r\n    });\r\n\r\n    return input;\r\n  }\r\n\r\n  _findStopBefore (blockIndex: number): ?number {\r\n    let stopBefore;\r\n    for (let si=0; si<this._stops.length; ++si) {\r\n      const stop = this._stops[si];\r\n      if (stop <= blockIndex) stopBefore = stop;\r\n      else break;\r\n    }\r\n    return stopBefore;\r\n  }\r\n\r\n  /** Appends placeholder depending on laziness */\r\n  _appendPlaceholder (toBlockIndex: ?number): ChangeDetails {\r\n    const details = new ChangeDetails();\r\n    if (this.lazy && toBlockIndex == null) return details;\r\n\r\n    const startBlockIter = this._mapPosToBlock(this.value.length);\r\n    if (!startBlockIter) return details;\r\n\r\n    const startBlockIndex = startBlockIter.index;\r\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\r\n\r\n    this._blocks.slice(startBlockIndex, endBlockIndex)\r\n      .forEach(b => {\r\n        if (typeof b._appendPlaceholder === 'function') {\r\n          // $FlowFixMe `_blocks` may not be present\r\n          const args = b._blocks != null ? [b._blocks.length] : [];\r\n          const bDetails = b._appendPlaceholder.apply(b, args);\r\n          this._value += bDetails.inserted;\r\n          details.aggregate(bDetails);\r\n        }\r\n      });\r\n\r\n    return details;\r\n  }\r\n\r\n  /** Finds block in pos */\r\n  _mapPosToBlock (pos: number): ?BlockPosData {\r\n    let accVal = '';\r\n    for (let bi=0; bi<this._blocks.length; ++bi) {\r\n      const block = this._blocks[bi];\r\n      const blockStartPos = accVal.length;\r\n\r\n      accVal += block.value;\r\n\r\n      if (pos <= accVal.length) {\r\n        return {\r\n          index: bi,\r\n          offset: pos - blockStartPos,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /** */\r\n  _blockStartPos (blockIndex: number): number {\r\n    return this._blocks\r\n      .slice(0, blockIndex)\r\n      .reduce((pos, b) => pos += b.value.length, 0);\r\n  }\r\n\r\n  /** */\r\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\r\n    const fromBlockIter = this._mapPosToBlock(fromPos);\r\n\r\n    if (fromBlockIter) {\r\n      const toBlockIter = this._mapPosToBlock(toPos);\r\n      // process first block\r\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\r\n      const fromBlockStartPos = fromBlockIter.offset;\r\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\r\n        toBlockIter.offset :\r\n        this._blocks[fromBlockIter.index].value.length;\r\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\r\n\r\n      if (toBlockIter && !isSameBlock) {\r\n        // process intermediate blocks\r\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\r\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\r\n        }\r\n\r\n        // process last block\r\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\r\n    const removeDetails = super.remove(fromPos, toPos);\r\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\r\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\r\n    });\r\n    return removeDetails;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\r\n    // TODO refactor - extract alignblock\r\n\r\n    const beginBlockData = this._mapPosToBlock(cursorPos) || {index: 0, offset: 0};\r\n    const {\r\n      offset: beginBlockOffset,\r\n      index: beginBlockIndex,\r\n    } = beginBlockData;\r\n    const beginBlock = this._blocks[beginBlockIndex];\r\n\r\n    if (!beginBlock) return cursorPos;\r\n\r\n    let beginBlockCursorPos = beginBlockOffset;\r\n    // if position inside block - try to adjust it\r\n    if (beginBlockCursorPos !== 0 && beginBlockCursorPos < beginBlock.value.length) {\r\n      beginBlockCursorPos = beginBlock.nearestInputPos(beginBlockOffset, forceDirection(direction));\r\n    }\r\n\r\n    const cursorAtRight = beginBlockCursorPos === beginBlock.value.length;\r\n    const cursorAtLeft = beginBlockCursorPos === 0;\r\n\r\n    //  cursor is INSIDE first block (not at bounds)\r\n    if (!cursorAtLeft && !cursorAtRight) return this._blockStartPos(beginBlockIndex) + beginBlockCursorPos;\r\n\r\n    const searchBlockIndex = cursorAtRight ? beginBlockIndex + 1 : beginBlockIndex;\r\n\r\n    if (direction === DIRECTION.NONE) {\r\n      // NONE direction used to calculate start input position if no chars were removed\r\n      // FOR NONE:\r\n      // -\r\n      // input|any\r\n      // ->\r\n      //  any|input\r\n      // <-\r\n      //  filled-input|any\r\n\r\n      // check if first block at left is input\r\n      if (searchBlockIndex > 0) {\r\n        const blockIndexAtLeft = searchBlockIndex-1;\r\n        const blockAtLeft = this._blocks[blockIndexAtLeft];\r\n        const blockInputPos = blockAtLeft.nearestInputPos(0, DIRECTION.NONE);\r\n        // is input\r\n        if (!blockAtLeft.value.length || blockInputPos !== blockAtLeft.value.length) {\r\n          return this._blockStartPos(searchBlockIndex);\r\n        }\r\n      }\r\n\r\n      // ->\r\n      let firstInputAtRight = searchBlockIndex;\r\n      for (let bi=firstInputAtRight; bi < this._blocks.length; ++bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(0, DIRECTION.NONE);\r\n        if (blockInputPos !== block.value.length) {\r\n          return this._blockStartPos(bi) + blockInputPos;\r\n        }\r\n      }\r\n\r\n      return this.value.length;\r\n    }\r\n\r\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\r\n      // -\r\n      //  any|filled-input\r\n      // <-\r\n      //  any|first not empty is not-len-aligned\r\n      //  not-0-aligned|any\r\n      // ->\r\n      //  any|not-len-aligned or end\r\n\r\n      // check if first block at right is filled input\r\n      let firstFilledBlockIndexAtRight;\r\n      for (let bi=searchBlockIndex; bi < this._blocks.length; ++bi) {\r\n        if (this._blocks[bi].value) {\r\n          firstFilledBlockIndexAtRight = bi;\r\n          break;\r\n        }\r\n      }\r\n      if (firstFilledBlockIndexAtRight != null) {\r\n        const filledBlock = this._blocks[firstFilledBlockIndexAtRight];\r\n        const blockInputPos = filledBlock.nearestInputPos(0, DIRECTION.RIGHT);\r\n        if (blockInputPos === 0 && filledBlock.unmaskedValue.length) {\r\n          // filled block is input\r\n          return this._blockStartPos(firstFilledBlockIndexAtRight) + blockInputPos;\r\n        }\r\n      }\r\n\r\n      // <-\r\n      // find this vars\r\n      let firstFilledInputBlockIndex = -1;\r\n      let firstEmptyInputBlockIndex;  // TODO consider nested empty inputs\r\n      for (let bi=searchBlockIndex-1; bi >= 0; --bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(block.value.length, DIRECTION.FORCE_LEFT);\r\n        if (firstEmptyInputBlockIndex == null && (!block.value || blockInputPos !== 0)) {\r\n          firstEmptyInputBlockIndex = bi;\r\n        }\r\n        if (blockInputPos !== 0) {\r\n          if (blockInputPos !== block.value.length) {\r\n            // aligned inside block - return immediately\r\n            return this._blockStartPos(bi) + blockInputPos;\r\n          } else {\r\n            // found filled\r\n            firstFilledInputBlockIndex = bi;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (direction === DIRECTION.LEFT) {\r\n        // try find first empty input before start searching position only when not forced\r\n        for (let bi=firstFilledInputBlockIndex+1; bi <= Math.min(searchBlockIndex, this._blocks.length-1); ++bi) {\r\n          const block = this._blocks[bi];\r\n          const blockInputPos = block.nearestInputPos(0, DIRECTION.NONE);\r\n          const blockAlignedPos = this._blockStartPos(bi) + blockInputPos;\r\n          // if block is empty and last or not lazy input\r\n          if ((!block.value.length && blockAlignedPos === this.value.length || blockInputPos !== block.value.length) && blockAlignedPos <= cursorPos) {\r\n            return blockAlignedPos;\r\n          }\r\n        }\r\n      }\r\n\r\n      // process overflow\r\n      if (firstFilledInputBlockIndex >= 0) {\r\n        return this._blockStartPos(firstFilledInputBlockIndex) + this._blocks[firstFilledInputBlockIndex].value.length;\r\n      }\r\n\r\n      // for lazy if has aligned left inside fixed and has came to the start - use start position\r\n      if (\r\n        direction === DIRECTION.FORCE_LEFT ||\r\n        this.lazy && !this.extractInput() && !isInput(this._blocks[searchBlockIndex])\r\n      ) {\r\n        return 0;\r\n      }\r\n\r\n      if (firstEmptyInputBlockIndex != null) {\r\n        return this._blockStartPos(firstEmptyInputBlockIndex);\r\n      }\r\n\r\n      // find first input\r\n      for (let bi=searchBlockIndex; bi < this._blocks.length; ++bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(0, DIRECTION.NONE);\r\n        // is input\r\n        if (!block.value.length || blockInputPos !== block.value.length) {\r\n          return this._blockStartPos(bi) + blockInputPos;\r\n        }\r\n      }\r\n\r\n      return 0;\r\n    }\r\n\r\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\r\n      // ->\r\n      //  any|not-len-aligned and filled\r\n      //  any|not-len-aligned\r\n      // <-\r\n      //  not-0-aligned or start|any\r\n      let firstInputBlockAlignedIndex: ?number;\r\n      let firstInputBlockAlignedPos: ?number;\r\n      for (let bi=searchBlockIndex; bi < this._blocks.length; ++bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(0, DIRECTION.NONE);\r\n        if (blockInputPos !== block.value.length) {\r\n          firstInputBlockAlignedPos = this._blockStartPos(bi) + blockInputPos;\r\n          firstInputBlockAlignedIndex = bi;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (firstInputBlockAlignedIndex != null && firstInputBlockAlignedPos != null) {\r\n        for (let bi=firstInputBlockAlignedIndex; bi < this._blocks.length; ++bi) {\r\n          const block = this._blocks[bi];\r\n          const blockInputPos = block.nearestInputPos(0, DIRECTION.FORCE_RIGHT);\r\n          if (blockInputPos !== block.value.length) {\r\n            return this._blockStartPos(bi) + blockInputPos;\r\n          }\r\n        }\r\n        return direction === DIRECTION.FORCE_RIGHT ?\r\n          this.value.length :\r\n          firstInputBlockAlignedPos;\r\n      }\r\n\r\n      for (let bi=Math.min(searchBlockIndex, this._blocks.length-1); bi >= 0; --bi) {\r\n        const block = this._blocks[bi];\r\n        const blockInputPos = block.nearestInputPos(block.value.length, DIRECTION.LEFT);\r\n        if (blockInputPos !== 0) {\r\n          const alignedPos = this._blockStartPos(bi) + blockInputPos;\r\n          if (alignedPos >= cursorPos) return alignedPos;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return cursorPos;\r\n  }\r\n\r\n  /** Get block by name */\r\n  maskedBlock (name: string): ?PatternBlock {\r\n    return this.maskedBlocks(name)[0];\r\n  }\r\n\r\n  /** Get all blocks by name */\r\n  maskedBlocks (name: string): Array<PatternBlock> {\r\n    const indices = this._maskedBlocks[name];\r\n    if (!indices) return [];\r\n    return indices.map(gi => this._blocks[gi]);\r\n  }\r\n}\r\nMaskedPattern.DEFAULTS = {\r\n  lazy: true,\r\n  placeholderChar: '_'\r\n};\r\nMaskedPattern.STOP_CHAR = '`';\r\nMaskedPattern.ESCAPE_CHAR = '\\\\';\r\nMaskedPattern.InputDefinition = PatternInputDefinition;\r\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\r\n\r\nfunction isInput (block: PatternBlock): boolean {\r\n  if (!block) return false;\r\n\r\n  const value = block.value;\r\n  return !value || block.nearestInputPos(0, DIRECTION.NONE) !== value.length;\r\n}\r\n","// @flow\r\nimport MaskedPattern from './pattern.js';\r\nimport { type AppendFlags } from './base.js';\r\n\r\n\r\n/** Pattern which accepts ranges */\r\nexport default\r\nclass MaskedRange extends MaskedPattern {\r\n  /**\r\n    Optionally sets max length of pattern.\r\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\r\n  */\r\n  maxLength: number;\r\n  /** Min bound */\r\n  from: number;\r\n  /** Max bound */\r\n  to: number;\r\n  /** */\r\n  autofix: boolean;\r\n\r\n  get _matchFrom (): number {\r\n    return this.maxLength - String(this.from).length;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {  // TODO type\r\n    opts = {\r\n      to: this.to || 0,\r\n      from: this.from || 0,\r\n      ...opts,\r\n    };\r\n\r\n    let maxLength = String(opts.to).length;\r\n    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\r\n    opts.maxLength = maxLength;\r\n\r\n    const fromStr = String(opts.from).padStart(maxLength, '0');\r\n    const toStr = String(opts.to).padStart(maxLength, '0');\r\n    let sameCharsCount = 0;\r\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\r\n    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return super.isComplete && Boolean(this.value);\r\n  }\r\n\r\n  boundaries (str: string): [string, string] {\r\n    let minstr = '';\r\n    let maxstr = '';\r\n\r\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\r\n    if (num) {\r\n      minstr = '0'.repeat(placeholder.length) + num;\r\n      maxstr = '9'.repeat(placeholder.length) + num;\r\n    }\r\n    minstr = minstr.padEnd(this.maxLength, '0');\r\n    maxstr = maxstr.padEnd(this.maxLength, '9');\r\n\r\n    return [minstr, maxstr];\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doPrepare (str: string, flags: AppendFlags={}): string {\r\n    str = super.doPrepare(str, flags).replace(/\\D/g, '');\r\n    if (!this.autofix) return str;\r\n\r\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\r\n    const toStr = String(this.to).padStart(this.maxLength, '0');\r\n\r\n    const val = this.value;\r\n    let prepStr = '';\r\n    for (let ci=0; ci<str.length; ++ci) {\r\n      const nextVal = val + prepStr + str[ci];\r\n      const [minstr, maxstr] = this.boundaries(nextVal);\r\n\r\n      if (Number(maxstr) < this.from) prepStr += fromStr[nextVal.length - 1];\r\n      else if (Number(minstr) > this.to) prepStr += toStr[nextVal.length - 1];\r\n      else prepStr += str[ci];\r\n    }\r\n\r\n    return prepStr;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *): boolean {\r\n    const str = this.value;\r\n\r\n    const firstNonZero = str.search(/[^0]/);\r\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\r\n\r\n    const [minstr, maxstr] = this.boundaries(str);\r\n\r\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\r\n      super.doValidate(...args);\r\n  }\r\n}\r\n","// @flow\r\nimport MaskedPattern from './pattern.js';\r\nimport MaskedRange from './range.js';\r\n\r\n\r\n/** Date mask */\r\nexport default\r\nclass MaskedDate extends MaskedPattern {\r\n  static GET_DEFAULT_BLOCKS: () => {[string]: any};\r\n  static DEFAULTS: any;\r\n\r\n  /** Parse string to Date */\r\n  parse: (string) => Date;\r\n  /** Format Date to string */\r\n  format: (Date) => string;\r\n  /** Pattern mask for date according to {@link MaskedDate#format} */\r\n  pattern: string;\r\n  /** Start date */\r\n  min: ?Date;\r\n  /** End date */\r\n  max: ?Date;\r\n  /** */\r\n  autofix: boolean;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDate.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    if (opts.mask === Date) delete opts.mask;\r\n    if (opts.pattern) {\r\n      opts.mask = opts.pattern;\r\n      delete opts.pattern;\r\n    }\r\n\r\n    const blocks = opts.blocks;\r\n    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\r\n    // adjust year block\r\n    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\r\n    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\r\n    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to\r\n    ) {\r\n      opts.blocks.m.from = opts.min.getMonth() + 1;\r\n      opts.blocks.m.to = opts.max.getMonth() + 1;\r\n\r\n      if (opts.blocks.m.from === opts.blocks.m.to) {\r\n        opts.blocks.d.from = opts.min.getDate();\r\n        opts.blocks.d.to = opts.max.getDate();\r\n      }\r\n    }\r\n    Object.assign(opts.blocks, blocks);\r\n\r\n    // add autofix\r\n    Object.keys(opts.blocks).forEach(bk => {\r\n      const b = opts.blocks[bk];\r\n      if (!('autofix' in b)) b.autofix = opts.autofix;\r\n    });\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *): boolean {\r\n    const date = this.date;\r\n\r\n    return super.doValidate(...args) &&\r\n      (!this.isComplete ||\r\n        this.isDateExist(this.value) && date != null &&\r\n        (this.min == null || this.min <= date) &&\r\n        (this.max == null || date <= this.max));\r\n  }\r\n\r\n  /** Checks if date is exists */\r\n  isDateExist (str: string): boolean {\r\n    return this.format(this.parse(str)) === str;\r\n  }\r\n\r\n  /** Parsed Date */\r\n  get date (): ?Date {\r\n    return this.isComplete ?\r\n      this.parse(this.value) :\r\n      null;\r\n  }\r\n  set date (date: Date) {\r\n    this.value = this.format(date);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): ?Date {\r\n    return this.date;\r\n  }\r\n  set typedValue (value: Date) {\r\n    this.date = value;\r\n  }\r\n}\r\nMaskedDate.DEFAULTS = {\r\n  pattern: 'd{.}`m{.}`Y',\r\n  format: date => {\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const year = date.getFullYear();\r\n\r\n    return [day, month, year].join('.');\r\n  },\r\n  parse: str => {\r\n    const [day, month, year] = str.split('.');\r\n    return new Date(year, month - 1, day);\r\n  },\r\n};\r\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\r\n  d: {\r\n    mask: MaskedRange,\r\n    from: 1,\r\n    to: 31,\r\n    maxLength: 2,\r\n  },\r\n  m: {\r\n    mask: MaskedRange,\r\n    from: 1,\r\n    to: 12,\r\n    maxLength: 2,\r\n  },\r\n  Y: {\r\n    mask: MaskedRange,\r\n    from: 1900,\r\n    to: 9999,\r\n  }\r\n});\r\n","// @flow\r\n\r\nexport\r\ntype ElementEvent =\r\n  'selectionChange' |\r\n  'input' |\r\n  'drop' |\r\n  'click' |\r\n  'focus' |\r\n  'commit';\r\n\r\n/**\r\n  Generic element API to use with mask\r\n  @interface\r\n*/\r\nexport default\r\nclass MaskElement {\r\n  /** */\r\n  +_unsafeSelectionStart: number;\r\n  /** */\r\n  +_unsafeSelectionEnd: number;\r\n  /** */\r\n  value: string;\r\n\r\n  /** Safely returns selection start */\r\n  get selectionStart (): number {\r\n    let start;\r\n    try {\r\n      start = this._unsafeSelectionStart;\r\n    } catch (e) {}\r\n\r\n    return start != null ?\r\n      start :\r\n      this.value.length;\r\n  }\r\n\r\n  /** Safely returns selection end */\r\n  get selectionEnd (): number {\r\n    let end;\r\n    try {\r\n      end = this._unsafeSelectionEnd;\r\n    } catch (e) {}\r\n\r\n    return end != null ?\r\n      end :\r\n      this.value.length;\r\n  }\r\n\r\n  /** Safely sets element selection */\r\n  select (start: number, end: number) {\r\n    if (start == null || end == null ||\r\n      start === this.selectionStart && end === this.selectionEnd) return;\r\n\r\n    try {\r\n      this._unsafeSelect(start, end);\r\n    } catch (e) {}\r\n  }\r\n\r\n  /** Should be overriden in subclasses */\r\n  _unsafeSelect (start: number, end: number): void {}\r\n  /** Should be overriden in subclasses */\r\n  get isActive (): boolean { return false; }\r\n  /** Should be overriden in subclasses */\r\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\r\n  /** Should be overriden in subclasses */\r\n  unbindEvents (): void {}\r\n}\r\n","// @flow\r\nimport MaskElement, {type ElementEvent} from './mask-element.js';\r\n\r\n\r\n/** Bridge between HTMLElement and {@link Masked} */\r\nexport default\r\nclass HTMLMaskElement extends MaskElement {\r\n  /** Mapping between HTMLElement events and mask internal events */\r\n  static EVENTS_MAP: {[ElementEvent]: string};\r\n  /** HTMLElement to use mask on */\r\n  input: HTMLTextAreaElement | HTMLInputElement;\r\n  _handlers: {[string]: Function};\r\n\r\n  /**\r\n    @param {HTMLInputElement|HTMLTextAreaElement} input\r\n  */\r\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\r\n    super();\r\n    this.input = input;\r\n    this._handlers = {};\r\n  }\r\n\r\n  /**\r\n    Is element in focus\r\n    @readonly\r\n  */\r\n  get isActive (): boolean {\r\n    return this.input === document.activeElement;\r\n  }\r\n\r\n  /**\r\n    Returns HTMLElement selection start\r\n    @override\r\n  */\r\n  get _unsafeSelectionStart (): number {\r\n    return this.input.selectionStart;\r\n  }\r\n\r\n  /**\r\n    Returns HTMLElement selection end\r\n    @override\r\n  */\r\n  get _unsafeSelectionEnd (): number {\r\n    return this.input.selectionEnd;\r\n  }\r\n\r\n  /**\r\n    Sets HTMLElement selection\r\n    @override\r\n  */\r\n  _unsafeSelect (start: number, end: number) {\r\n    this.input.setSelectionRange(start, end);\r\n  }\r\n\r\n  /**\r\n    HTMLElement value\r\n    @override\r\n  */\r\n  get value (): string {\r\n    return this.input.value;\r\n  }\r\n  set value (value: string) {\r\n    this.input.value = value;\r\n  }\r\n\r\n  /**\r\n    Binds HTMLElement events to mask internal events\r\n    @override\r\n  */\r\n  bindEvents (handlers: {[ElementEvent]: Function}) {\r\n    Object.keys(handlers)\r\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\r\n  }\r\n\r\n  /**\r\n    Unbinds HTMLElement events to mask internal events\r\n    @override\r\n  */\r\n  unbindEvents () {\r\n    Object.keys(this._handlers)\r\n      .forEach(event => this._toggleEventHandler(event));\r\n  }\r\n\r\n  /** */\r\n  _toggleEventHandler (event: string, handler?: Function): void {\r\n    if (this._handlers[event]) {\r\n      this.input.removeEventListener(event, this._handlers[event]);\r\n      delete this._handlers[event];\r\n    }\r\n\r\n    if (handler) {\r\n      this.input.addEventListener(event, handler);\r\n      this._handlers[event] = handler;\r\n    }\r\n  }\r\n}\r\nHTMLMaskElement.EVENTS_MAP = {\r\n  selectionChange: 'keydown',\r\n  input: 'input',\r\n  drop: 'drop',\r\n  click: 'click',\r\n  focus: 'focus',\r\n  commit: 'blur',\r\n};\r\n","// @flow\r\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\r\nimport ActionDetails from '../core/action-details.js';\r\nimport MaskedDate from '../masked/date.js';\r\nimport createMask, {maskedClass} from '../masked/factory.js';\r\nimport type Masked from '../masked/base.js';\r\nimport {type Mask} from '../masked/base.js';\r\nimport MaskElement from './mask-element.js';\r\nimport HTMLMaskElement from './html-mask-element.js';\r\n\r\n\r\n/** Listens to element events and controls changes between element and {@link Masked} */\r\nexport default\r\nclass InputMask {\r\n  /**\r\n    View element\r\n    @readonly\r\n  */\r\n  el: MaskElement;\r\n\r\n  /**\r\n    Internal {@link Masked} model\r\n    @readonly\r\n  */\r\n  masked: Masked<*>;\r\n  alignCursor: () => void;\r\n  alignCursorFriendly: () => void;\r\n\r\n  _listeners: {[string]: Array<Function>};\r\n  _value: string;\r\n  _changingCursorPos: number;\r\n  _unmaskedValue: string;\r\n  _saveSelection: (?Event) => void;\r\n  _selection: Selection;\r\n  _onInput: () => void;\r\n  _onChange: () => void;\r\n  _onDrop: (Event) => void;\r\n  _onFocus: (Event) => void;\r\n  _cursorChanging: TimeoutID;\r\n\r\n  /**\r\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\r\n    @param {Object} opts\r\n  */\r\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any}) {\r\n    this.el = (el instanceof MaskElement) ?\r\n      el :\r\n      new HTMLMaskElement(el);\r\n    this.masked = createMask(opts);\r\n\r\n    this._listeners = {};\r\n    this._value = '';\r\n    this._unmaskedValue = '';\r\n\r\n    this._saveSelection = this._saveSelection.bind(this);\r\n    this._onInput = this._onInput.bind(this);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onDrop = this._onDrop.bind(this);\r\n    this._onFocus = this._onFocus.bind(this);\r\n    this.alignCursor = this.alignCursor.bind(this);\r\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\r\n\r\n    this._bindEvents();\r\n\r\n    // refresh\r\n    this.updateValue();\r\n    this._onChange();\r\n  }\r\n\r\n  /** Read or update mask */\r\n  get mask (): Mask {\r\n    return this.masked.mask;\r\n  }\r\n\r\n  set mask (mask: Mask) {\r\n    if (mask == null ||\r\n      mask === this.masked.mask ||\r\n      mask === Date && this.masked instanceof MaskedDate) return;\r\n\r\n    if (this.masked.constructor === maskedClass(mask)) {\r\n      this.masked.updateOptions({mask});\r\n      return;\r\n    }\r\n\r\n    const masked = createMask({mask});\r\n    masked.unmaskedValue = this.masked.unmaskedValue;\r\n    this.masked = masked;\r\n  }\r\n\r\n  /** Raw value */\r\n  get value (): string {\r\n    return this._value;\r\n  }\r\n\r\n  set value (str: string) {\r\n    this.masked.value = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Unmasked value */\r\n  get unmaskedValue (): string {\r\n    return this._unmaskedValue;\r\n  }\r\n\r\n  set unmaskedValue (str: string) {\r\n    this.masked.unmaskedValue = str;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Typed unmasked value */\r\n  get typedValue (): any {\r\n    return this.masked.typedValue;\r\n  }\r\n\r\n  set typedValue (val: any) {\r\n    this.masked.typedValue = val;\r\n    this.updateControl();\r\n    this.alignCursor();\r\n  }\r\n\r\n  /**\r\n    Starts listening to element events\r\n    @protected\r\n  */\r\n  _bindEvents () {\r\n    this.el.bindEvents({\r\n      selectionChange: this._saveSelection,\r\n      input: this._onInput,\r\n      drop: this._onDrop,\r\n      click: this.alignCursorFriendly,\r\n      focus: this._onFocus,\r\n      commit: this._onChange,\r\n    });\r\n  }\r\n\r\n  /**\r\n    Stops listening to element events\r\n    @protected\r\n   */\r\n  _unbindEvents () {\r\n    this.el.unbindEvents();\r\n  }\r\n\r\n  /**\r\n    Fires custom event\r\n    @protected\r\n   */\r\n  _fireEvent (ev: string) {\r\n    const listeners = this._listeners[ev];\r\n    if (!listeners) return;\r\n\r\n    listeners.forEach(l => l());\r\n  }\r\n\r\n  /**\r\n    Current selection start\r\n    @readonly\r\n  */\r\n  get selectionStart (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionStart;\r\n  }\r\n\r\n  /** Current cursor position */\r\n  get cursorPos (): number {\r\n    return this._cursorChanging ?\r\n      this._changingCursorPos :\r\n\r\n      this.el.selectionEnd;\r\n  }\r\n  set cursorPos (pos: number) {\r\n    if (!this.el.isActive) return;\r\n\r\n    this.el.select(pos, pos);\r\n    this._saveSelection();\r\n  }\r\n\r\n  /**\r\n    Stores current selection\r\n    @protected\r\n  */\r\n  _saveSelection (/* ev */) {\r\n    if (this.value !== this.el.value) {\r\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\r\n    }\r\n    this._selection = {\r\n      start: this.selectionStart,\r\n      end: this.cursorPos\r\n    };\r\n  }\r\n\r\n  /** Syncronizes model value from view */\r\n  updateValue () {\r\n    this.masked.value = this.el.value;\r\n    this._value = this.masked.value;\r\n  }\r\n\r\n  /** Syncronizes view from model value, fires change events */\r\n  updateControl () {\r\n    const newUnmaskedValue = this.masked.unmaskedValue;\r\n    const newValue = this.masked.value;\r\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\r\n      this.value !== newValue);\r\n\r\n    this._unmaskedValue = newUnmaskedValue;\r\n    this._value = newValue;\r\n\r\n    if (this.el.value !== newValue) this.el.value = newValue;\r\n    if (isChanged) this._fireChangeEvents();\r\n  }\r\n\r\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\r\n  updateOptions (opts: {[string]: any}) {\r\n    if (objectIncludes(this.masked, opts)) return;\r\n\r\n    const { mask, ...restOpts } = opts;\r\n\r\n    this.mask = mask;\r\n    this.masked.updateOptions(restOpts);\r\n\r\n    this.updateControl();\r\n  }\r\n\r\n  /** Updates cursor */\r\n  updateCursor (cursorPos: number) {\r\n    if (cursorPos == null) return;\r\n    this.cursorPos = cursorPos;\r\n\r\n    // also queue change cursor for mobile browsers\r\n    this._delayUpdateCursor(cursorPos);\r\n  }\r\n\r\n  /**\r\n    Delays cursor update to support mobile browsers\r\n    @private\r\n  */\r\n  _delayUpdateCursor (cursorPos: number) {\r\n    this._abortUpdateCursor();\r\n    this._changingCursorPos = cursorPos;\r\n    this._cursorChanging = setTimeout(() => {\r\n      if (!this.el) return; // if was destroyed\r\n      this.cursorPos = this._changingCursorPos;\r\n      this._abortUpdateCursor();\r\n    }, 10);\r\n  }\r\n\r\n  /**\r\n    Fires custom events\r\n    @protected\r\n  */\r\n  _fireChangeEvents () {\r\n    this._fireEvent('accept');\r\n    if (this.masked.isComplete) this._fireEvent('complete');\r\n  }\r\n\r\n  /**\r\n    Aborts delayed cursor update\r\n    @private\r\n  */\r\n  _abortUpdateCursor () {\r\n    if (this._cursorChanging) {\r\n      clearTimeout(this._cursorChanging);\r\n      delete this._cursorChanging;\r\n    }\r\n  }\r\n\r\n  /** Aligns cursor to nearest available position */\r\n  alignCursor () {\r\n    this.cursorPos = this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT);\r\n  }\r\n\r\n  /** Aligns cursor only if selection is empty */\r\n  alignCursorFriendly () {\r\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\r\n    this.alignCursor();\r\n  }\r\n\r\n  /** Adds listener on custom event */\r\n  on (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) this._listeners[ev] = [];\r\n    this._listeners[ev].push(handler);\r\n    return this;\r\n  }\r\n\r\n  /** Removes custom event listener */\r\n  off (ev: string, handler: Function) {\r\n    if (!this._listeners[ev]) return this;\r\n    if (!handler) {\r\n      delete this._listeners[ev];\r\n      return this;\r\n    }\r\n    const hIndex = this._listeners[ev].indexOf(handler);\r\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\r\n    return this;\r\n  }\r\n\r\n  /** Handles view input event */\r\n  _onInput () {\r\n    this._abortUpdateCursor();\r\n\r\n    // fix strange IE behavior\r\n    if (!this._selection) return this.updateValue();\r\n\r\n    const details = new ActionDetails(\r\n      // new state\r\n      this.el.value, this.cursorPos,\r\n      // old state\r\n      this.value, this._selection);\r\n\r\n    const oldRawValue = this.masked.rawInputValue;\r\n\r\n    const offset = this.masked.splice(\r\n      details.startChangePos,\r\n      details.removed.length,\r\n      details.inserted,\r\n      details.removeDirection).offset;\r\n\r\n    // force align in remove direction only if no input chars were removed\r\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\r\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\r\n      details.removeDirection :\r\n      DIRECTION.NONE;\r\n\r\n    const cursorPos = this.masked.nearestInputPos(\r\n      details.startChangePos + offset,\r\n      removeDirection,\r\n    );\r\n\r\n    this.updateControl();\r\n    this.updateCursor(cursorPos);\r\n  }\r\n\r\n  /** Handles view change event and commits model value */\r\n  _onChange () {\r\n    if (this.value !== this.el.value) {\r\n      this.updateValue();\r\n    }\r\n    this.masked.doCommit();\r\n    this.updateControl();\r\n    this._saveSelection();\r\n  }\r\n\r\n  /** Handles view drop event, prevents by default */\r\n  _onDrop (ev: Event) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  /** Restore last selection on focus */\r\n  _onFocus (ev: Event) {\r\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\r\n    if (this._selection) this.cursorPos = this._selection.end;\r\n    this.alignCursorFriendly();\r\n  }\r\n\r\n  /** Unbind view events and removes element reference */\r\n  destroy () {\r\n    this._unbindEvents();\r\n    // $FlowFixMe why not do so?\r\n    this._listeners.length = 0;\r\n    delete this.el;\r\n  }\r\n}\r\n","// @flow\r\nimport MaskedPattern from './pattern.js';\r\n\r\n\r\n/** Pattern which validates enum values */\r\nexport default\r\nclass MaskedEnum extends MaskedPattern {\r\n  enum: Array<string>;\r\n\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: any) {  // TODO type\r\n    if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\r\n\r\n    super._update(opts);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *): boolean {\r\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\r\n      super.doValidate(...args);\r\n  }\r\n}\r\n","// @flow\r\nimport {escapeRegExp, indexInDirection, posInDirection, type Direction, DIRECTION} from '../core/utils.js';\r\nimport ChangeDetails from '../core/change-details.js';\r\n\r\nimport Masked, {type MaskedOptions, type ExtractFlags, type AppendFlags} from './base.js';\r\n\r\n\r\ntype MaskedNumberOptions = {\r\n  ...MaskedOptions<Number>,\r\n  radix: $PropertyType<MaskedNumber, 'radix'>,\r\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\r\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\r\n  scale: $PropertyType<MaskedNumber, 'scale'>,\r\n  signed: $PropertyType<MaskedNumber, 'signed'>,\r\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\r\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\r\n};\r\n\r\n/**\r\n  Number mask\r\n  @param {Object} opts\r\n  @param {string} opts.radix - Single char\r\n  @param {string} opts.thousandsSeparator - Single char\r\n  @param {Array<string>} opts.mapToRadix - Array of single chars\r\n  @param {number} opts.min\r\n  @param {number} opts.max\r\n  @param {number} opts.scale - Digits after point\r\n  @param {boolean} opts.signed - Allow negative\r\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\r\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\r\n*/\r\nexport default\r\nclass MaskedNumber extends Masked<Class<Number>> {\r\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\r\n\r\n  /** Single char */\r\n  radix: string;\r\n  /** Single char */\r\n  thousandsSeparator: string;\r\n  /** Array of single chars */\r\n  mapToRadix: Array<string>;\r\n  /** */\r\n  min: number;\r\n  /** */\r\n  max: number;\r\n  /** Digits after point */\r\n  scale: number;\r\n  /** */\r\n  signed: boolean;\r\n  /** Flag to remove leading and trailing zeros in the end of editing */\r\n  normalizeZeros: boolean;\r\n  /** Flag to pad trailing zeros after point in the end of editing */\r\n  padFractionalZeros: boolean;\r\n  _numberRegExp: RegExp;\r\n  _numberRegExpInput: RegExp;\r\n  _thousandsSeparatorRegExp: RegExp;\r\n  _mapToRadixRegExp: RegExp;\r\n  _separatorsProcessed: boolean;\r\n\r\n  constructor (opts: $Shape<MaskedNumberOptions>) {\r\n    super({\r\n      ...MaskedNumber.DEFAULTS,\r\n      ...opts\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: MaskedNumberOptions) {\r\n    super._update(opts);\r\n    this._updateRegExps();\r\n  }\r\n\r\n  /** */\r\n  _updateRegExps () {\r\n    // use different regexp to process user input (more strict, input suffix) and tail shifting\r\n    let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\r\n    let midInput = '(0|([1-9]+\\\\d*))?';\r\n    let mid = '\\\\d*';\r\n\r\n    let end = (this.scale ?\r\n      '(' + escapeRegExp(this.radix) + '\\\\d{0,' + this.scale + '})?' :\r\n      '') + '$';\r\n\r\n    this._numberRegExpInput = new RegExp(start + midInput + end);\r\n    this._numberRegExp = new RegExp(start + mid + end);\r\n    this._mapToRadixRegExp = new RegExp('[' +\r\n      this.mapToRadix.map(escapeRegExp).join('') +\r\n    ']', 'g');\r\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\r\n  }\r\n\r\n  /** */\r\n  _removeThousandsSeparators (value: string): string {\r\n    return value.replace(this._thousandsSeparatorRegExp, '');\r\n  }\r\n\r\n  /** */\r\n  _insertThousandsSeparators (value: string): string {\r\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\r\n    const parts = value.split(this.radix);\r\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doPrepare (str: string, ...args: *) {\r\n    return super.doPrepare(this._removeThousandsSeparators(str.replace(this._mapToRadixRegExp, this.radix)), ...args);\r\n  }\r\n\r\n  /** */\r\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\r\n    let count = 0;\r\n\r\n    for (let pos = 0; pos < to; ++pos) {\r\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\r\n        ++count;\r\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  /** */\r\n  _separatorsCountFromSlice (slice: string=this._value): number {\r\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\r\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\r\n\r\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\r\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\r\n\r\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(flags.tail && this._beforeTailState ?\r\n      this._beforeTailState._value :\r\n      this._value);\r\n    this._value = this._removeThousandsSeparators(this.value);\r\n\r\n    const appendDetails = super._appendCharRaw(ch, flags);\r\n\r\n    this._value = this._insertThousandsSeparators(this._value);\r\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(flags.tail && this._beforeTailState ?\r\n      this._beforeTailState._value :\r\n      this._value);\r\n\r\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\r\n    return appendDetails;\r\n  }\r\n\r\n  /** */\r\n  _findSeparatorAround (pos: number): number {\r\n    if (this.thousandsSeparator) {\r\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\r\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\r\n      if (separatorPos <= pos) return separatorPos;\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\r\n    const separatorAroundFromPos = this._findSeparatorAround(from);\r\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\r\n\r\n    const separatorAroundToPos = this._findSeparatorAround(to);\r\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\r\n    return [from, to];\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\r\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\r\n\r\n    const valueBeforePos = this.value.slice(0, fromPos);\r\n    const valueAfterPos = this.value.slice(toPos);\r\n\r\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\r\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\r\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\r\n\r\n    return new ChangeDetails({\r\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\r\n    });\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\r\n    if (!this.thousandsSeparator) return cursorPos;\r\n\r\n    switch (direction) {\r\n      case DIRECTION.NONE:\r\n      case DIRECTION.LEFT:\r\n      case DIRECTION.FORCE_LEFT: {\r\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\r\n        if (separatorAtLeftPos >= 0) {\r\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\r\n          if (cursorPos < separatorAtLeftEndPos ||\r\n            this.value.length <= separatorAtLeftEndPos ||\r\n            direction === DIRECTION.FORCE_LEFT\r\n          ) {\r\n            return separatorAtLeftPos;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case DIRECTION.RIGHT:\r\n      case DIRECTION.FORCE_RIGHT: {\r\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\r\n        if (separatorAtRightPos >= 0) {\r\n          return separatorAtRightPos + this.thousandsSeparator.length;\r\n        }\r\n      }\r\n    }\r\n\r\n    return cursorPos;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (flags: AppendFlags) {\r\n    const regexp = flags.input ? this._numberRegExpInput : this._numberRegExp;\r\n\r\n    // validate as string\r\n    let valid = regexp.test(this._removeThousandsSeparators(this.value));\r\n\r\n    if (valid) {\r\n      // validate as number\r\n      const number = this.number;\r\n      valid = valid && !isNaN(number) &&\r\n        // check min bound for negative values\r\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\r\n        // check max bound for positive values\r\n        (this.max == null || this.max <= 0 || this.number <= this.max);\r\n    }\r\n\r\n    return valid && super.doValidate(flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    if (this.value) {\r\n      const number = this.number;\r\n      let validnum = number;\r\n\r\n      // check bounds\r\n      if (this.min != null) validnum = Math.max(validnum, this.min);\r\n      if (this.max != null) validnum = Math.min(validnum, this.max);\r\n\r\n      if (validnum !== number) this.unmaskedValue = String(validnum);\r\n\r\n      let formatted = this.value;\r\n\r\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\r\n      if (this.padFractionalZeros) formatted = this._padFractionalZeros(formatted);\r\n\r\n      this._value = formatted;\r\n    }\r\n\r\n    super.doCommit();\r\n  }\r\n\r\n  /** */\r\n  _normalizeZeros (value: string): string {\r\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\r\n\r\n    // remove leading zeros\r\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\r\n    // add leading zero\r\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\r\n\r\n    if (parts.length > 1) {\r\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\r\n      if (!parts[1].length) parts.length = 1;  // remove fractional\r\n    }\r\n\r\n    return this._insertThousandsSeparators(parts.join(this.radix));\r\n  }\r\n\r\n  /** */\r\n  _padFractionalZeros (value: string): string {\r\n    if (!value) return value;\r\n\r\n    const parts = value.split(this.radix);\r\n    if (parts.length < 2) parts.push('');\r\n    parts[1] = parts[1].padEnd(this.scale, '0');\r\n    return parts.join(this.radix);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this._removeThousandsSeparators(\r\n      this._normalizeZeros(\r\n        this.value))\r\n      .replace(this.radix, '.');\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue.replace('.', this.radix);\r\n  }\r\n\r\n  /** Parsed Number */\r\n  get number (): number {\r\n    return Number(this.unmaskedValue);\r\n  }\r\n\r\n  set number (number: number) {\r\n    this.unmaskedValue = String(number);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): number {\r\n    return this.number;\r\n  }\r\n\r\n  set typedValue (value: number) {\r\n    this.number = value;\r\n  }\r\n\r\n  /**\r\n    Is negative allowed\r\n    @readonly\r\n  */\r\n  get allowNegative (): boolean {\r\n    return this.signed ||\r\n      (this.min != null && this.min < 0) ||\r\n      (this.max != null && this.max < 0);\r\n  }\r\n}\r\nMaskedNumber.DEFAULTS = {\r\n  radix: ',',\r\n  thousandsSeparator: '',\r\n  mapToRadix: ['.'],\r\n  scale: 2,\r\n  signed: false,\r\n  normalizeZeros: true,\r\n  padFractionalZeros: false,\r\n};\r\n","// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by RegExp */\r\nexport default\r\nclass MaskedRegExp extends Masked<RegExp> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\r\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\r\n    super._update(opts);\r\n  }\r\n}\r\n","// @flow\r\nimport Masked, {type MaskedOptions} from './base.js';\r\n\r\n\r\n/** Masking by custom Function */\r\nexport default\r\nclass MaskedFunction extends Masked<Function> {\r\n  /**\r\n    @override\r\n    @param {Object} opts\r\n  */\r\n  _update (opts: MaskedOptions<Function>) {\r\n    if (opts.mask) opts.validate = opts.mask;\r\n    super._update(opts);\r\n  }\r\n}\r\n","// @flow\r\nimport ChangeDetails from '../core/change-details.js';\r\nimport createMask from './factory.js';\r\nimport Masked, {type AppendFlags, type MaskedState} from './base.js';\r\nimport { type TailDetails } from '../core/tail-details.js';\r\n\r\n\r\ntype MaskedDynamicState = {|\r\n  ...MaskedState,\r\n  _rawInputValue: string,\r\n  compiledMasks: Array<*>,\r\n  currentMaskRef: ?Masked<*>,\r\n  currentMask: *,\r\n|};\r\n\r\ntype DynamicMaskType = Array<{[string]: any}>;\r\n/** Dynamic mask for choosing apropriate mask in run-time */\r\nexport default\r\nclass MaskedDynamic extends Masked<DynamicMaskType> {\r\n  /** Currently chosen mask */\r\n  currentMask: ?Masked<*>;\r\n  /** Compliled {@link Masked} options */\r\n  compiledMasks: Array<Masked<*>>;\r\n  /** Chooses {@link Masked} depending on input value */\r\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\r\n\r\n  /**\r\n    @param {Object} opts\r\n  */\r\n  constructor (opts: any) {\r\n    super({\r\n      ...MaskedDynamic.DEFAULTS,\r\n      ...opts\r\n    });\r\n\r\n    this.currentMask = null;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _update (opts: any) {\r\n    super._update(opts);\r\n    if ('mask' in opts) {\r\n      // mask could be totally dynamic with only `dispatch` option\r\n      this.compiledMasks = Array.isArray(opts.mask) ?\r\n        opts.mask.map(m => createMask(m)) :\r\n        [];\r\n    }\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  _appendCharRaw (...args: *): ChangeDetails {\r\n    const details = this._applyDispatch(...args);\r\n\r\n    if (this.currentMask) {\r\n      details.aggregate(this.currentMask._appendChar(...args));\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  _applyDispatch (appended: string='', flags: AppendFlags={}) {\r\n    const prevValueBeforeTail = flags.tail && this._beforeTailState ?\r\n      this._beforeTailState._value :\r\n      this.value;\r\n    const inputValue = this.rawInputValue;\r\n    const insertValue = flags.tail && this._beforeTailState ?\r\n      // $FlowFixMe - tired to fight with type system\r\n      this._beforeTailState._rawInputValue :\r\n      inputValue;\r\n    const tailValue = inputValue.slice(insertValue.length);\r\n    const prevMask = this.currentMask;\r\n    const details = new ChangeDetails();\r\n\r\n    const prevMaskState = prevMask && prevMask.state;\r\n    const prevMaskBeforeTailState = prevMask && prevMask._beforeTailState;\r\n\r\n    this.currentMask = this.doDispatch(appended, flags);\r\n\r\n    // restore state after dispatch\r\n    if (this.currentMask) {\r\n      if (this.currentMask !== prevMask) {\r\n        // if mask changed reapply input\r\n        this.currentMask.reset();\r\n\r\n        // $FlowFixMe - it's ok, we don't change current mask above\r\n        const d = this.currentMask.append(insertValue, {raw: true});\r\n        details.tailShift = d.inserted.length - prevValueBeforeTail.length;\r\n\r\n        if (tailValue) {\r\n          // $FlowFixMe - it's ok, we don't change current mask above\r\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\r\n        }\r\n      } else {\r\n        // Dispatch can do something bad with state, so\r\n        // restore prev mask state\r\n        this.currentMask.state = prevMaskState;\r\n        this.currentMask._beforeTailState = prevMaskBeforeTailState;\r\n      }\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doDispatch(appended: string, flags: AppendFlags={}) {\r\n    return this.dispatch(appended, this, flags);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doValidate (...args: *): boolean {\r\n    return super.doValidate(...args) && (\r\n      !this.currentMask || this.currentMask.doValidate(...args));\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  reset () {\r\n    if (this.currentMask) this.currentMask.reset();\r\n    this.compiledMasks.forEach(m => m.reset());\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get value (): string {\r\n    return this.currentMask ? this.currentMask.value : '';\r\n  }\r\n\r\n  set value (value: string) {\r\n    super.value = value;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get unmaskedValue (): string {\r\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\r\n  }\r\n\r\n  set unmaskedValue (unmaskedValue: string) {\r\n    super.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get typedValue (): any {\r\n    return this.currentMask ? this.currentMask.typedValue : '';\r\n  }\r\n\r\n  // probably typedValue should not be used with dynamic\r\n  set typedValue (value: any) {\r\n    let unmaskedValue = String(value);\r\n\r\n    // double check it\r\n    if (this.currentMask) {\r\n      this.currentMask.typedValue = value;\r\n      unmaskedValue = this.currentMask.unmaskedValue;\r\n    }\r\n    this.unmaskedValue = unmaskedValue;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get isComplete (): boolean {\r\n    return !!this.currentMask && this.currentMask.isComplete;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  remove (...args: *): ChangeDetails {\r\n    const details: ChangeDetails = new ChangeDetails();\r\n    if (this.currentMask) {\r\n      details.aggregate(this.currentMask.remove(...args))\r\n        // update with dispatch\r\n        .aggregate(this._applyDispatch());\r\n    }\r\n\r\n    return details;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  get state (): MaskedDynamicState {\r\n    return {\r\n      ...super.state,\r\n      _rawInputValue: this.rawInputValue,\r\n      compiledMasks: this.compiledMasks.map(m => m.state),\r\n      currentMaskRef: this.currentMask,\r\n      currentMask: this.currentMask && this.currentMask.state,\r\n    };\r\n  }\r\n\r\n  set state (state: MaskedDynamicState) {\r\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\r\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\r\n    if (currentMaskRef != null) {\r\n      this.currentMask = currentMaskRef;\r\n      this.currentMask.state = currentMask;\r\n    }\r\n    super.state = maskedState;\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractInput (...args: *): string {\r\n    return this.currentMask ?\r\n      this.currentMask.extractInput(...args) :\r\n      '';\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  extractTail (...args: *): TailDetails {\r\n    return this.currentMask ?\r\n      this.currentMask.extractTail(...args) :\r\n      super.extractTail(...args);\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  doCommit () {\r\n    if (this.currentMask) this.currentMask.doCommit();\r\n    super.doCommit();\r\n  }\r\n\r\n  /**\r\n    @override\r\n  */\r\n  nearestInputPos(...args: *): number {\r\n    return this.currentMask ?\r\n      this.currentMask.nearestInputPos(...args) :\r\n      super.nearestInputPos(...args);\r\n  }\r\n}\r\n\r\nMaskedDynamic.DEFAULTS = {\r\n  dispatch: (appended, masked, flags) => {\r\n    if (!masked.compiledMasks.length) return;\r\n\r\n    const inputValue = masked.rawInputValue;\r\n\r\n    // simulate input\r\n    const inputs = masked.compiledMasks.map((m, index) => {\r\n      m.rawInputValue = inputValue;\r\n      m.append(appended, flags);\r\n      const weight = m.rawInputValue.length;\r\n\r\n      return {weight, index};\r\n    });\r\n\r\n    // pop masks with longer values first\r\n    inputs.sort((i1, i2) => i2.weight - i1.weight);\r\n\r\n    return masked.compiledMasks[inputs[0].index];\r\n  }\r\n};\r\n","import {g} from './core/utils.js';\r\n\r\nimport InputMask from './controls/input.js';\r\n\r\nimport Masked from './masked/base.js';\r\nimport MaskedPattern from './masked/pattern.js';\r\nimport MaskedEnum from './masked/enum.js';\r\nimport MaskedRange from './masked/range.js';\r\nimport MaskedNumber from './masked/number.js';\r\nimport MaskedDate from './masked/date.js';\r\nimport MaskedRegExp from './masked/regexp.js';\r\nimport MaskedFunction from './masked/function.js';\r\nimport MaskedDynamic from './masked/dynamic.js';\r\nimport createMask from './masked/factory.js';\r\nimport MaskElement from './controls/mask-element.js';\r\nimport HTMLMaskElement from './controls/html-mask-element.js';\r\n\r\n\r\n/**\r\n * Applies mask on element.\r\n * @constructor\r\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\r\n * @param {Object} opts - Custom mask options\r\n * @return {InputMask}\r\n */\r\nexport default\r\nfunction IMask (el, opts={}) {\r\n\t// currently available only for input-like elements\r\n  return new InputMask(el, opts);\r\n}\r\n\r\n/** {@link InputMask} */\r\nIMask.InputMask = InputMask;\r\n\r\n/** {@link Masked} */\r\nIMask.Masked = Masked;\r\n/** {@link MaskedPattern} */\r\nIMask.MaskedPattern = MaskedPattern;\r\n/** {@link MaskedEnum} */\r\nIMask.MaskedEnum = MaskedEnum;\r\n/** {@link MaskedRange} */\r\nIMask.MaskedRange = MaskedRange;\r\n/** {@link MaskedNumber} */\r\nIMask.MaskedNumber = MaskedNumber;\r\n/** {@link MaskedDate} */\r\nIMask.MaskedDate = MaskedDate;\r\n/** {@link MaskedRegExp} */\r\nIMask.MaskedRegExp = MaskedRegExp;\r\n/** {@link MaskedFunction} */\r\nIMask.MaskedFunction = MaskedFunction;\r\n/** {@link MaskedDynamic} */\r\nIMask.MaskedDynamic = MaskedDynamic;\r\n/** {@link createMask} */\r\nIMask.createMask = createMask;\r\n/** {@link MaskElement} */\r\nIMask.MaskElement = MaskElement;\r\n/** {@link HTMLMaskElement} */\r\nIMask.HTMLMaskElement = HTMLMaskElement;\r\n\r\ng.IMask = IMask;\r\n"],"names":["ceil","Math","floor","argument","isNaN","min","toInteger","it","undefined","TypeError","repeat","count","str","String","requireObjectCoercible","this","result","n","Infinity","RangeError","that","maxLength","fillString","left","fillLen","stringFiller","S","stringLength","length","fillStr","intMaxLength","toLength","call","slice","window","self","Function","navigator","global","userAgent","test","exec","error","require","Object","defineProperty","get","a","nativePropertyIsEnumerable","propertyIsEnumerable","nativeGetOwnPropertyDescriptor","getOwnPropertyDescriptor","V","descriptor","enumerable","bitmap","value","configurable","writable","toString","split","fails","classof","IndexedObject","isObject","fn","val","valueOf","hasOwnProperty","key","document","exist","createElement","DESCRIPTORS","O","P","toIndexedObject","toPrimitive","IE8_DOM_DEFINE","has","createPropertyDescriptor","propertyIsEnumerableModule","f","nativeDefineProperty","Attributes","anObject","object","definePropertyModule","module","set","hide","store","setGlobal","push","version","mode","copyright","WeakMap","nativeFunctionToString","id","postfix","random","shared","NATIVE_WEAK_MAP","wmget","wmhas","wmset","metadata","STATE","concat","uid","hiddenKeys","objectHas","IS_INCLUDES","enforce","getterFor","TYPE","state","type","getInternalState","InternalStateModule","enforceInternalState","TEMPLATE","options","unsafe","simple","noTargetGet","source","join","prototype","max","arrayIndexOf","$this","el","fromIndex","index","integer","toAbsoluteIndex","getOwnPropertyNames","names","i","internalObjectKeys","getOwnPropertySymbols","Reflect","ownKeys","keys","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","target","getOwnPropertyDescriptorModule","replacement","isForced","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","targetProperty","sourceProperty","TARGET","GLOBAL","STATIC","stat","forced","copyConstructorProperties","sham","redefine","isString","proto","WEBKIT_BUG","padEnd","internalStringPad","arguments","padStart","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","escapeRegExp","g","ActionDetails","cursorPos","oldValue","oldSelection","startChangePos","start","substr","insertedCount","end","removedCount","substring","ChangeDetails","details","inserted","rawInserted","skip","tailShift","ContinuousTailDetails","from","stop","tail","masked","append","pos","shiftChar","Masked","opts","_value","_update","isInitialized","withValueRefresh","bind","reset","input","doCommit","direction","fromPos","toPos","extractInput","_beforeTailState","appendTo","ch","flags","checkTail","doPrepare","consistentTail","consistentState","_appendCharRaw","appended","doValidate","_storeBeforeTailState","overwrite","shiftBefore","tailDetails","appendTail","_restoreBeforeTailState","Error","ci","aggregate","_appendChar","_refreshing","unmasked","unmaskedValue","ret","resolve","prepare","validate","parent","commit","deleteCount","removeDirection","tailPos","extractTail","nearestInputPos","remove","raw","maskedClass","mask","RegExp","IMask","MaskedRegExp","MaskedPattern","Date","MaskedDate","Number","MaskedNumber","Array","isArray","MaskedDynamic","MaskedFunction","console","warn","createMask","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","blockOpts","_isFilled","isOptional","lazy","placeholderChar","Boolean","maxPos","boundPos","isComplete","PatternFixedDefinition","_isRawInput","isResolved","char","isUnmasking","ChunksTailDetails","chunks","map","tailChunk","lastChunk","extendLast","extend","firstTailChunk","shift","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","_stops","indexOf","_appendPlaceholder","_blocks","remainChars","chunkShiftPos","splice","c","cstate","definitions","_extends","DEFAULTS","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","_this","filter","bName","sort","b","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","forEach","_resetBeforeTailState","_get","blockIter","bi","block","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_this2","_findStopBefore","_blockStartPos","_","stopBefore","si","toBlockIndex","startBlockIter","startBlockIndex","endBlockIndex","args","bDetails","apply","_this3","accVal","blockStartPos","offset","reduce","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","beginBlockData","beginBlockOffset","beginBlockIndex","beginBlock","beginBlockCursorPos","forceDirection","cursorAtRight","searchBlockIndex","blockIndexAtLeft","blockAtLeft","blockInputPos","firstFilledBlockIndexAtRight","filledBlock","firstEmptyInputBlockIndex","firstFilledInputBlockIndex","blockAlignedPos","firstInputBlockAlignedIndex","firstInputBlockAlignedPos","alignedPos","name","maskedBlocks","indices","gi","_this4","maskedState","every","InputDefinition","FixedDefinition","MaskedRange","to","fromStr","toStr","sameCharsCount","minstr","maxstr","match","placeholder","num","autofix","prepStr","nextVal","boundaries","search","_matchFrom","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","d","getDate","bk","date","isDateExist","format","parse","day","month","year","MaskElement","selectionStart","selectionEnd","_unsafeSelect","e","handlers","_unsafeSelectionStart","_unsafeSelectionEnd","HTMLMaskElement","_handlers","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","activeElement","selectionChange","drop","click","focus","InputMask","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","alignCursor","alignCursorFriendly","_bindEvents","updateValue","bindEvents","unbindEvents","ev","listeners","l","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","objectIncludes","arrA","arrB","_typeof","dateA","dateB","getTime","regexpA","regexpB","restOpts","updateOptions","updateControl","_delayUpdateCursor","_abortUpdateCursor","_changingCursorPos","_cursorChanging","setTimeout","_fireEvent","clearTimeout","hIndex","oldRawValue","rawInputValue","removed","updateCursor","preventDefault","stopPropagation","_unbindEvents","constructor","typedValue","isActive","select","MaskedEnum","enum","some","_updateRegExps","allowNegative","scale","radix","_numberRegExpInput","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","parts","_removeThousandsSeparators","extendOnSeparators","_separatorsCount","_adjustRangeWithSeparators","prevBeforeTailSeparatorsCount","_separatorsCountFromSlice","appendDetails","_insertThousandsSeparators","beforeTailSeparatorsCount","searchFrom","separatorPos","separatorAroundFromPos","_findSeparatorAround","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","signed","currentMask","compiledMasks","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","prevMaskBeforeTailState","doDispatch","dispatch","currentMaskRef","mi","inputs","weight","i1","i2"],"mappings":"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"}