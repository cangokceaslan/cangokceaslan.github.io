{"version":3,"sources":["serviceWorker.js","Components/LeftScript/index.js","Components/Parallax/index.js","Containers/MainBar/index.js","Components/Header/index.js","Containers/TopBar/index.js","collection.js","index.js"],"names":["Boolean","window","location","hostname","match","LeftScript","localStorage","getItem","rgb","i","Math","floor","random","toString","style","minWidth","maxWidth","width","height","maxHeight","position","zIndex","top","className","opacity","backgroundColor","src","alt","fontSize","borderWidth","dangerouslySetInnerHTML","__html","Orientation","descriptionTop","Component","Parallax","this","randomColorGenerator","MainBar","Header","background","onClick","e","document","getElementById","classList","contains","remove","add","display","menuItems","map","data","index","key","buttons","color","outline","border","fontWeight","fontFamily","id","TopBar","Collection","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e8e7ea9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React,{Component} from 'react';\nimport \"./index.css\";\nimport Orientation from \"../../orientation.json\";\nclass LeftScript extends Component{\n    randomColorGenerator(){\n        if(localStorage.getItem(\"navbar\")){\n            return localStorage.getItem(\"navbar\");\n        }else{\n        var rgb = \"rgb(\";\n        for(var i = 0; i<3;i++){\n            if(i === 2){\n                rgb += (Math.floor((Math.random() * 150))).toString()+\")\"\n            }else{\n                rgb += (Math.floor((Math.random() * 150))).toString()+\",\"\n            }\n        }\n        //localStorage.setItem(\"navbar\",rgb);\n        return rgb;\n        }\n    }\n    render(){\n        const container = {\n            minWidth:\"300px\",\n            maxWidth:\"800px\",\n            width:\"30%\",\n            height:\"100%\",\n            maxHeight:\"800px\",\n            position:\"relative\",\n            zIndex:10,\n            top:\"0px\",\n        }\n        const opacContainer = {\n            minWidth:\"300px\",\n            opacity:\"0.8\",\n            backgroundColor:\"black\",\n            position:\"relative\",\n            top:\"0px\",\n            height:\"100%\"\n        }\n        return(\n            <div style={container} className=\"leftScript animated slideInLeft\">\n                <div style={opacContainer} className=\"opacContainer\"></div>\n                <div className=\"container2\">\n                <div className=\"imageCon\">\n                    <img src=\"./image/ablam.png\" width=\"100%\" height=\"auto\" alt=\"\" />\n                </div>\n                <div className=\"lstitle\">\n                    Gökçe Hız\n                    <br />\n                    <div style={{fontSize:\"18px\"}}>Psikoloji Danışmanı</div>\n                    <hr style={{borderWidth:\"0.5px\",width:\"80%\"}}/>\n                </div>\n                <div className=\"lsdescription\" dangerouslySetInnerHTML={{__html:Orientation[0].descriptionTop}}>      \n                </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default LeftScript;","import React,{Component} from 'react';\n/* import Orientation from '../../orientation.json'; */\nimport LeftScript from \"../LeftScript/index.js\";\nimport \"./index.css\";\nclass Parallax extends Component{\n    randomColorGenerator(){\n        if(localStorage.getItem(\"navbar\")){\n            return localStorage.getItem(\"navbar\");\n        }else{\n        var rgb = \"rgb(\";\n        for(var i = 0; i<3;i++){\n            if(i === 2){\n                rgb += (Math.floor((Math.random() * 150))).toString()+\")\"\n            }else{\n                rgb += (Math.floor((Math.random() * 150))).toString()+\",\"\n            }\n        }\n        //localStorage.setItem(\"navbar\",rgb);\n        return rgb;\n        }\n    }\n    render(){\n        return (\n            <div className=\"parallax\" style={{backgroundColor:this.randomColorGenerator()}}>\n                <LeftScript />\n            </div>\n        );\n    }\n}\nexport default Parallax;","import React,{Component} from \"react\";\nimport Parallax from \"../../Components/Parallax/index.js\";\nclass MainBar extends Component{\n    render(){\n        return(\n            <Parallax />\n        );\n    }\n}\nexport default MainBar;","import React,{Component} from 'react';\nimport './index.css';\nimport Orientation from \"../../orientation.json\";\nclass Header extends Component{\n    randomColorGenerator(){\n        /* var hexStr = \"ABCDEF0123456789\";\n        var hexStr1 = \"0123456789\";\n        var hexColor = \"#\";\n        for(var i = 0; i<6;i++){\n            if(i===0){\n                hexColor += hexStr1.charAt(Math.floor(Math.random()*6));\n            }else{\n                hexColor += hexStr.charAt(Math.floor(Math.random()*6));\n            }\n        } */\n        if(localStorage.getItem(\"navbar\")){\n            return localStorage.getItem(\"navbar\");\n        }else{\n        var rgb = \"rgb(\";\n        for(var i = 0; i<3;i++){\n            if(i === 2){\n                rgb += (Math.floor((Math.random() * 150))).toString()+\")\"\n            }else{\n                rgb += (Math.floor((Math.random() * 150))).toString()+\",\"\n            }\n        }\n        //localStorage.setItem(\"navbar\",rgb);\n        return rgb;\n        }\n    }\n    render(){\n        return(\n        <header className=\"header\" style={{background:\"linear-gradient(to left,\"+this.randomColorGenerator()+\",\"+this.randomColorGenerator()+\",\"+this.randomColorGenerator()+\")\"}}>\n            <div className=\"collectionContainer\">\n            <div className=\"mobileNotifications\" onClick={(e)=>{\n                if(document.getElementById(\"mobileMenu\").classList.contains(\"slideInRight\")){\n                    document.getElementById(\"mobileMenu\").classList.remove(\"slideInRight\");\n                    document.getElementById(\"mobileMenu\").classList.add(\"slideOutRight\");\n                }\n                if(document.getElementById(\"mobileNotificationContainer\").classList.contains(\"slideOutDown\")){\n                    document.getElementById(\"mobileNotificationContainer\").classList.remove(\"slideOutDown\");\n                    document.getElementById(\"mobileNotificationContainer\").classList.add(\"slideInUp\");\n                    if(document.getElementById(\"mobileNotificationContainer\").style.display === \"none\"){\n                        document.getElementById(\"mobileNotificationContainer\").style.display = \"block\";\n                    }\n                }else if(document.getElementById(\"mobileNotificationContainer\").classList.contains(\"slideInUp\")){\n                    document.getElementById(\"mobileNotificationContainer\").classList.remove(\"slideInUp\");\n                    document.getElementById(\"mobileNotificationContainer\").classList.add(\"slideOutDown\");\n                    //document.getElementById(\"mobileMenu\").style.display = \"block\";\n\n                }\n            }}>\n                <i className=\"fa fa-bell fa-2x mobileNotificationsIcon\"></i>\n            </div>\n            <img className=\"logo\" src=\"https://images.mixer.com/sOtPOPTJYMy_SY-A4Qblfp48Lx-IqVKtoyIW_v7VJHYM/https://i.imgur.com/KJ8fLiD.png\" width=\"auto\" height=\"55px\" alt=\"\" />\n            <div className=\"mobileMenu\" onClick={(e)=>{\n                if(document.getElementById(\"mobileMenu\").classList.contains(\"slideOutRight\")){\n                    if(document.getElementById(\"mobileNotificationContainer\").classList.contains(\"slideInUp\")){\n                        document.getElementById(\"mobileNotificationContainer\").classList.remove(\"slideInUp\");\n                        document.getElementById(\"mobileNotificationContainer\").classList.add(\"slideOutDown\");\n                    }\n                    document.getElementById(\"mobileMenu\").classList.remove(\"slideOutRight\");\n                    document.getElementById(\"mobileMenu\").classList.add(\"slideInRight\");\n                    if(document.getElementById(\"mobileMenu\").style.display === \"none\"){\n                        document.getElementById(\"mobileMenu\").style.display = \"block\";\n                    }\n                }else if(document.getElementById(\"mobileMenu\").classList.contains(\"slideInRight\")){\n                    document.getElementById(\"mobileMenu\").classList.remove(\"slideInRight\");\n                    document.getElementById(\"mobileMenu\").classList.add(\"slideOutRight\");\n                    //document.getElementById(\"mobileMenu\").style.display = \"block\";\n\n                }\n            }}>\n                <i className=\"fa fa-bars fa-2x mobileMenuBarIcon\"></i>\n            </div>\n            <ul className=\"menuItems animated heartBeat\">\n                {Orientation[0].menuItems.map(function(data,index){\n                  return(<li key={index}>{data}</li>);\n                })}\n                {Orientation[0].buttons.map(function(data,index){\n                  return(<li style={{color:\"black\"}} key={index}><button style={{background:\"yellow\",outline:\"none\",border:\"2px solid white\",height:\"30px\",fontSize:\"15px\",minWidth:\"40px\",fontWeight:\"bold\",fontFamily:\"'Maven Pro', sans-serif\"}}>{data}</button></li>);\n                })}\n            </ul>\n            <div className=\"mobileMenuContainer animated faster slideOutRight\" style={{display:'none'}} id=\"mobileMenu\"></div>\n            <div className=\"mobileNotificationContainer animated faster slideOutDown\" style={{display:'none'}} id=\"mobileNotificationContainer\"></div>\n            </div>\n        </header>\n        );\n    }\n}\nexport default Header;","import React,{Component} from \"react\";\nimport Header from \"../../Components/Header/index.js\";\nclass TopBar extends Component{\n    render(){\n        return(\n            <Header />\n        );\n    }\n}\nexport default TopBar;","import React,{Component} from \"react\";\nimport MainBar from './Containers/MainBar/index.js';\nimport TopBar from './Containers/TopBar/index.js';\nclass Collection extends Component{\n    render(){\n        return(\n            <div>\n                <TopBar />\n                <MainBar />\n            </div>\n        );\n    }\n}\nexport default Collection;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Collection from \"./collection.js\";\nReactDOM.render(<Collection />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}